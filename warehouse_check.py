#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
"""

import requests
import json
import os

# –ü–æ–ª—É—á–∞–µ–º URL backend –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://tajline-manage-1.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
WAREHOUSE_OPERATOR_PHONE = "+79777888999"
WAREHOUSE_OPERATOR_PASSWORD = "warehouse123"

def main():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞...")
    response = session.post(f"{API_BASE}/auth/login", json={
        "phone": WAREHOUSE_OPERATOR_PHONE,
        "password": WAREHOUSE_OPERATOR_PASSWORD
    })
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        return
    
    data = response.json()
    auth_token = data.get("access_token")
    operator_info = data.get("user")
    
    session.headers.update({
        "Authorization": f"Bearer {auth_token}"
    })
    
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: {operator_info.get('full_name')}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫–ª–∞–¥—ã –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞...")
    response = session.get(f"{API_BASE}/operator/warehouses")
    
    if response.status_code == 200:
        warehouses = response.json()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —Å–∫–ª–∞–¥–æ–≤: {len(warehouses)}")
        
        for warehouse in warehouses:
            print(f"  üè¢ {warehouse.get('name')} (ID: {warehouse.get('id')}, –ù–æ–º–µ—Ä: {warehouse.get('warehouse_id_number', 'N/A')})")
            
            # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å layout-with-cargo –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–∫–ª–∞–¥–∞
            warehouse_id = warehouse.get('warehouse_id_number') or warehouse.get('id')
            print(f"    üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ layout-with-cargo –¥–ª—è —Å–∫–ª–∞–¥–∞ {warehouse_id}...")
            
            layout_response = session.get(f"{API_BASE}/warehouses/{warehouse_id}/layout-with-cargo")
            if layout_response.status_code == 200:
                layout_data = layout_response.json()
                print(f"    ‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç—Ä—É–∫—Ç—É—Ä–∞: {list(layout_data.keys()) if isinstance(layout_data, dict) else type(layout_data)}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ cargo_info
                if isinstance(layout_data, dict) and "cargo_info" in layout_data:
                    cargo_info = layout_data["cargo_info"]
                    print(f"    üéØ cargo_info –Ω–∞–π–¥–µ–Ω–æ: {len(cargo_info)} –µ–¥–∏–Ω–∏—Ü")
                    
                    if len(cargo_info) > 0:
                        print(f"    üì¶ –ü—Ä–∏–º–µ—Ä –µ–¥–∏–Ω–∏—Ü—ã: {list(cargo_info[0].keys()) if isinstance(cargo_info[0], dict) else type(cargo_info[0])}")
                else:
                    print(f"    ‚ùå cargo_info –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –æ—Ç–≤–µ—Ç–µ")
            else:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞: {layout_response.status_code} - {layout_response.text}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code}")
    
    # –¢–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä–∏–º –≤—Å–µ —Å–∫–ª–∞–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ
    print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö —Å–∫–ª–∞–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ...")
    response = session.get(f"{API_BASE}/warehouses/all-cities")
    
    if response.status_code == 200:
        all_warehouses = response.json()
        print(f"‚úÖ –í—Å–µ–≥–æ —Å–∫–ª–∞–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_warehouses)}")
        
        for warehouse in all_warehouses:
            print(f"  üè¢ {warehouse.get('name')} (ID: {warehouse.get('id')}, –ù–æ–º–µ—Ä: {warehouse.get('warehouse_id_number', 'N/A')})")

if __name__ == "__main__":
    main()