#!/usr/bin/env python3
"""
üéØ DEBUG: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è individual units
"""

import requests
import json
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = os.getenv('REACT_APP_BACKEND_URL', 'https://cargo-tracker-33.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

def debug_cargo_creation():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    login_data = {
        "phone": "+79777888999",
        "password": "warehouse123"
    }
    
    response = session.post(f"{API_BASE}/auth/login", json=login_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        return
    
    data = response.json()
    auth_token = data.get("access_token")
    session.headers.update({"Authorization": f"Bearer {auth_token}"})
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏
    cargo_data = {
        "sender_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å DEBUG",
        "sender_phone": "+79991234567",
        "recipient_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—É—á–∞—Ç–µ–ª—å DEBUG",
        "recipient_phone": "+79997654321",
        "recipient_address": "–≥. –î—É—à–∞–Ω–±–µ, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥–æ–º 1",
        "description": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è individual units DEBUG",
        "route": "moscow_to_tajikistan",
        "payment_method": "cash_on_delivery",
        "delivery_method": "pickup",
        "cargo_items": [
            {
                "cargo_name": "–≠–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞ Samsung DEBUG",
                "quantity": 2,
                "weight": 5.0,
                "price_per_kg": 100.0,
                "total_amount": 1000.0
            },
            {
                "cargo_name": "–ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞ LG DEBUG",
                "quantity": 3,
                "weight": 8.0,
                "price_per_kg": 80.0,
                "total_amount": 1920.0
            }
        ]
    }
    
    print("üì¶ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏...")
    response = session.post(f"{API_BASE}/operator/cargo/accept", json=cargo_data)
    
    print(f"üìä –°—Ç–∞—Ç—É—Å –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
    print(f"üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –æ—Ç–≤–µ—Ç–∞: {response.text}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print(f"   cargo_id: {data.get('cargo_id')}")
        print(f"   cargo_number: {data.get('cargo_number')}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞—è–≤–∫–∞ –ø–æ—è–≤–∏–ª–∞—Å—å –≤ individual-units-for-placement
        print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—è–≤–ª–µ–Ω–∏—è –≤ individual-units-for-placement...")
        response = session.get(f"{API_BASE}/operator/cargo/individual-units-for-placement")
        if response.status_code == 200:
            data = response.json()
            total = data.get('total', 0)
            print(f"üìä –í—Å–µ–≥–æ individual units: {total}")
            
            if total > 0:
                individual_units = data.get('individual_units', [])
                print(f"üìã –ü–µ—Ä–≤–∞—è –µ–¥–∏–Ω–∏—Ü–∞: {individual_units[0] if individual_units else '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'}")
            else:
                print("‚ö†Ô∏è Individual units –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è individual units: {response.status_code}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏: {response.status_code}")
        try:
            error_data = response.json()
            print(f"üìÑ –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
        except:
            print(f"üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {response.text}")

if __name__ == "__main__":
    debug_cargo_creation()