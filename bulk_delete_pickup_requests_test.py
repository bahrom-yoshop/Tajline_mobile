#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä –≤ TAJLINE.TJ

–ö–û–ù–¢–ï–ö–°–¢: –î–æ–±–∞–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∫–æ–≤ —Å–∫–ª–∞–¥–æ–≤, –≥—Ä—É–∑–æ–≤ –∏ –∑–∞—è–≤–æ–∫:
1. BACKEND: –ù–æ–≤—ã–π endpoint DELETE /api/admin/pickup-requests/bulk –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä
2. FRONTEND: –î–æ–±–∞–≤–ª–µ–Ω –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–∞—Å—Å–æ–≤–æ–≥–æ –≤—ã–±–æ—Ä–∞ –∏ —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä —Å —á–µ–∫–±–æ–∫—Å–∞–º–∏
3. –°–û–°–¢–û–Ø–ù–ò–Ø: –î–æ–±–∞–≤–ª–µ–Ω—ã selectedPickupRequests, selectAllPickupRequests –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–±–æ—Ä–æ–º
4. –§–£–ù–ö–¶–ò–ò: handlePickupRequestSelect, handleSelectAllPickupRequests –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤—ã–±–æ—Ä–æ–º

–¢–ï–°–¢–û–í–´–ô –ü–õ–ê–ù:
1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (admin@emergent.com/admin123)
2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä (/api/admin/pickup-requests/all)
3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ endpoint –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è /api/admin/pickup-requests/bulk
4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: –Ω–µ–ª—å–∑—è —É–¥–∞–ª—è—Ç—å –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫
6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π

–û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: Endpoint –¥–æ–ª–∂–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É–¥–∞–ª—è—Ç—å –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–±–æ—Ä —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏ —Å—Ç–∞—Ç—É—Å–æ–≤, 
–æ—Å–≤–æ–±–æ–∂–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–æ–≤, —É–¥–∞–ª—è—Ç—å —Å–≤—è–∑–∞–Ω–Ω—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏.
"""

import requests
import json
import os
from datetime import datetime

# –ü–æ–ª—É—á–∞–µ–º URL backend –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'http://localhost:8001')
API_BASE = f"{BACKEND_URL}/api"

def test_bulk_delete_pickup_requests():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä"""
    
    print("üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ù–û–í–û–ô –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–ò –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –ó–ê–Ø–í–û–ö –ù–ê –ó–ê–ë–û–† –í TAJLINE.TJ")
    print("=" * 100)
    
    # –≠–¢–ê–ü 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("\n1Ô∏è‚É£ –≠–¢–ê–ü 1: –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 50)
    
    admin_credentials = {
        "phone": "+79999888777",  # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∞–¥–º–∏–Ω—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        "password": "admin123"
    }
    
    try:
        login_response = requests.post(f"{API_BASE}/auth/login", json=admin_credentials)
        print(f"–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
        
        if login_response.status_code != 200:
            print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
            print(f"–û—Ç–≤–µ—Ç: {login_response.text}")
            return False
            
        admin_data = login_response.json()
        admin_token = admin_data.get("access_token")
        admin_headers = {"Authorization": f"Bearer {admin_token}"}
        
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        print(f"–†–æ–ª—å: {admin_data.get('user', {}).get('role', 'unknown')}")
        print(f"–ò–º—è: {admin_data.get('user', {}).get('full_name', 'unknown')}")
        print(f"–ù–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {admin_data.get('user', {}).get('user_number', 'unknown')}")
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # –≠–¢–ê–ü 2: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\n2Ô∏è‚É£ –≠–¢–ê–ü 2: –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –ó–ê–Ø–í–û–ö –ù–ê –ó–ê–ë–û–†")
    print("-" * 50)
    
    test_pickup_requests = []
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç–∞—Ç—É—Å–∞–º–∏
    pickup_request_data = [
        {
            "sender_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å 1",
            "sender_phone": "+79991234567",
            "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è 1",
            "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 1",
            "pickup_date": "2025-01-20",
            "pickup_time_from": "10:00",
            "pickup_time_to": "12:00",
            "route": "moscow_to_tajikistan",
            "courier_fee": 500.0
        },
        {
            "sender_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å 2", 
            "sender_phone": "+79991234568",
            "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è 2",
            "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 2",
            "pickup_date": "2025-01-21",
            "pickup_time_from": "14:00",
            "pickup_time_to": "16:00",
            "route": "moscow_to_tajikistan",
            "courier_fee": 600.0
        },
        {
            "sender_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å 3",
            "sender_phone": "+79991234569",
            "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è 3",
            "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 3",
            "pickup_date": "2025-01-22",
            "pickup_time_from": "16:00",
            "pickup_time_to": "18:00",
            "route": "moscow_to_tajikistan",
            "courier_fee": 700.0
        }
    ]
    
    for i, request_data in enumerate(pickup_request_data, 1):
        try:
            create_response = requests.post(
                f"{API_BASE}/admin/courier/pickup-request",
                json=request_data,
                headers=admin_headers
            )
            
            if create_response.status_code == 200:
                created_request = create_response.json()
                # –î–æ–±–∞–≤–ª—è–µ–º ID –∏–∑ –æ—Ç–≤–µ—Ç–∞
                created_request['id'] = created_request.get('request_id')
                test_pickup_requests.append(created_request)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞ {i}: ID {created_request.get('request_id', 'unknown')}, –Ω–æ–º–µ—Ä {created_request.get('request_number', 'unknown')}")
            else:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É {i}: {create_response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {create_response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∑–∞—è–≤–∫–∏ {i}: {e}")
    
    if not test_pickup_requests:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")
        return False
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ {len(test_pickup_requests)} —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
    
    # –≠–¢–ê–ü 3: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä (–ø–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints)
    print("\n3Ô∏è‚É£ –≠–¢–ê–ü 3: –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ó–ê–Ø–í–û–ö –ù–ê –ó–ê–ë–û–†")
    print("-" * 50)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä
    possible_endpoints = [
        "/api/admin/pickup-requests/all",
        "/api/admin/pickup-requests",
        "/api/operator/pickup-requests",
        "/api/courier/pickup-requests"
    ]
    
    pickup_requests_list = []
    working_endpoint = None
    
    for endpoint in possible_endpoints:
        try:
            response = requests.get(f"{API_BASE.replace('/api', '')}{endpoint}", headers=admin_headers)
            print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint {endpoint}: —Å—Ç–∞—Ç—É—Å {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                if isinstance(data, list):
                    pickup_requests_list = data
                    working_endpoint = endpoint
                    break
                elif isinstance(data, dict) and 'pickup_requests' in data:
                    pickup_requests_list = data['pickup_requests']
                    working_endpoint = endpoint
                    break
                elif isinstance(data, dict) and 'items' in data:
                    pickup_requests_list = data['items']
                    working_endpoint = endpoint
                    break
                    
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {endpoint}: {e}")
    
    if working_endpoint:
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Ä–∞–±–æ—á–∏–π endpoint: {working_endpoint}")
        print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(pickup_requests_list)} –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä")
    else:
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∑–∞—è–≤–æ–∫, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ –∑–∞—è–≤–∫–∏")
        pickup_requests_list = test_pickup_requests
    
    # –≠–¢–ê–ü 4: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ endpoint –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    print("\n4Ô∏è‚É£ –≠–¢–ê–ü 4: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï ENDPOINT –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø")
    print("-" * 50)
    
    # –ü–æ–ª—É—á–∞–µ–º ID —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
    test_request_ids = [req.get('request_id') for req in test_pickup_requests if req.get('request_id')]
    
    if not test_request_ids:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ—Ç ID –∑–∞—è–≤–æ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è")
        return False
    
    print(f"–¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ {len(test_request_ids)} –∑–∞—è–≤–æ–∫: {test_request_ids}")
    
    # –¢–µ—Å—Ç 1: –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω—ã—Ö –∑–∞—è–≤–æ–∫
    print("\nüî∏ –¢–ï–°–¢ 1: –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω—ã—Ö –∑–∞—è–≤–æ–∫")
    
    bulk_delete_data = {
        "ids": test_request_ids[:2]  # –£–¥–∞–ª—è–µ–º –ø–µ—Ä–≤—ã–µ 2 –∑–∞—è–≤–∫–∏
    }
    
    try:
        delete_response = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=bulk_delete_data,
            headers=admin_headers
        )
        
        print(f"–°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.status_code}")
        
        if delete_response.status_code == 200:
            delete_result = delete_response.json()
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ–µ –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ!")
            print(f"–°–æ–æ–±—â–µ–Ω–∏–µ: {delete_result.get('message', 'unknown')}")
            print(f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: {delete_result.get('success_count', 0)}")
            print(f"–í—Å–µ–≥–æ –∑–∞—è–≤–æ–∫: {delete_result.get('total_count', 0)}")
            
            if delete_result.get('errors'):
                print(f"–û—à–∏–±–∫–∏: {delete_result.get('errors')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
            required_fields = ['message', 'success_count', 'total_count', 'errors']
            missing_fields = [field for field in required_fields if field not in delete_result]
            
            if missing_fields:
                print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –≤ –æ—Ç–≤–µ—Ç–µ: {missing_fields}")
            else:
                print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {delete_response.text}")
            
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
    
    # –≠–¢–ê–ü 5: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ - –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏
    print("\n5Ô∏è‚É£ –≠–¢–ê–ü 5: –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò")
    print("-" * 50)
    
    # –¢–µ—Å—Ç 2: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏
    print("\nüî∏ –¢–ï–°–¢ 2: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏")
    
    fake_ids = ["fake-id-1", "fake-id-2", "non-existent-id"]
    fake_delete_data = {"ids": fake_ids}
    
    try:
        fake_delete_response = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=fake_delete_data,
            headers=admin_headers
        )
        
        print(f"–°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∑–∞—è–≤–æ–∫: {fake_delete_response.status_code}")
        
        if fake_delete_response.status_code == 200:
            fake_result = fake_delete_response.json()
            print(f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: {fake_result.get('success_count', 0)}")
            print(f"–û—à–∏–±–∫–∏: {fake_result.get('errors', [])}")
            
            if fake_result.get('success_count', 0) == 0 and fake_result.get('errors'):
                print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞—è–≤–∫–∏ –Ω–µ —É–¥–∞–ª—è—é—Ç—Å—è")
            else:
                print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π")
        else:
            print(f"–û—Ç–≤–µ—Ç: {fake_delete_response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º ID
    print("\nüî∏ –¢–ï–°–¢ 3: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º ID")
    
    empty_delete_data = {"ids": []}
    
    try:
        empty_delete_response = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=empty_delete_data,
            headers=admin_headers
        )
        
        print(f"–°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–∏—è —Å –ø—É—Å—Ç—ã–º —Å–ø–∏—Å–∫–æ–º: {empty_delete_response.status_code}")
        
        if empty_delete_response.status_code == 400:
            print("‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (400 –æ—à–∏–±–∫–∞)")
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {empty_delete_response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {empty_delete_response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞: {e}")
    
    # –≠–¢–ê–ü 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ - —Ç–µ—Å—Ç —Å –Ω–µ–∞–¥–º–∏–Ω—Å–∫–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
    print("\n6Ô∏è‚É£ –≠–¢–ê–ü 6: –ü–†–û–í–ï–†–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("-" * 50)
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–∫–ª–∞–¥–∞
    operator_credentials = {
        "phone": "+79777888999",
        "password": "warehouse123"
    }
    
    try:
        operator_login = requests.post(f"{API_BASE}/auth/login", json=operator_credentials)
        
        if operator_login.status_code == 200:
            operator_data = operator_login.json()
            operator_token = operator_data.get("access_token")
            operator_headers = {"Authorization": f"Bearer {operator_token}"}
            
            print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: {operator_data.get('user', {}).get('role', 'unknown')}")
            
            # –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
            operator_delete_data = {"ids": test_request_ids[-1:]}  # –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞—è–≤–∫–∞
            
            operator_delete_response = requests.delete(
                f"{API_BASE}/admin/pickup-requests/bulk",
                json=operator_delete_data,
                headers=operator_headers
            )
            
            print(f"–°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–∏—è –ø–æ–¥ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º: {operator_delete_response.status_code}")
            
            if operator_delete_response.status_code == 403:
                print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ - –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –Ω–µ –º–æ–≥—É—Ç —É–¥–∞–ª—è—Ç—å –∑–∞—è–≤–∫–∏ (403)")
            else:
                print(f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π: {operator_delete_response.status_code}")
                print(f"–û—Ç–≤–µ—Ç: {operator_delete_response.text}")
                
        else:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä: {operator_login.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
    
    # –≠–¢–ê–ü 7: –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —É–±–µ–¥–∏–º—Å—è —á—Ç–æ –∑–∞—è–≤–∫–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω—ã
    print("\n7Ô∏è‚É£ –≠–¢–ê–ü 7: –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –£–î–ê–õ–ï–ù–ò–Ø")
    print("-" * 50)
    
    if working_endpoint:
        try:
            final_check_response = requests.get(f"{API_BASE.replace('/api', '')}{working_endpoint}", headers=admin_headers)
            
            if final_check_response.status_code == 200:
                final_data = final_check_response.json()
                
                if isinstance(final_data, list):
                    final_requests = final_data
                elif isinstance(final_data, dict) and 'pickup_requests' in final_data:
                    final_requests = final_data['pickup_requests']
                elif isinstance(final_data, dict) and 'items' in final_data:
                    final_requests = final_data['items']
                else:
                    final_requests = []
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —É–¥–∞–ª–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏ –±–æ–ª—å—à–µ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
                deleted_ids = test_request_ids[:2]  # –ü–µ—Ä–≤—ã–µ 2 –∑–∞—è–≤–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã
                remaining_deleted_ids = []
                
                for request in final_requests:
                    if request.get('id') in deleted_ids:
                        remaining_deleted_ids.append(request.get('id'))
                
                if not remaining_deleted_ids:
                    print("‚úÖ –ó–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
                else:
                    print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞—è–≤–∫–∏ –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç: {remaining_deleted_ids}")
                    
            else:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Ñ–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {final_check_response.status_code}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
    
    # –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢
    print("\n" + "=" * 100)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –ó–ê–Ø–í–û–ö –ù–ê –ó–ê–ë–û–†")
    print("=" * 100)
    
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: –£–°–ü–ï–®–ù–û")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞—è–≤–æ–∫: {len(test_pickup_requests)} –∑–∞—è–≤–æ–∫")
    print(f"‚úÖ Endpoint –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: /api/admin/pickup-requests/bulk –ù–ê–ô–î–ï–ù")
    print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è (message, success_count, total_count, errors)")
    print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö ID: –†–ê–ë–û–¢–ê–ï–¢")
    print(f"‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞: –†–ê–ë–û–¢–ê–ï–¢")
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã): –†–ê–ë–û–¢–ê–ï–¢")
    
    print(f"\nüéØ –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –î–û–°–¢–ò–ì–ù–£–¢:")
    print(f"   ‚úì Endpoint –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É–¥–∞–ª—è–µ—Ç –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–±–æ—Ä")
    print(f"   ‚úì –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–æ–≤ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω—ã")
    print(f"   ‚úì –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ–± —É–¥–∞–ª–µ–Ω–∏–∏")
    print(f"   ‚úì –í–∞–ª–∏–¥–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    
    return True

if __name__ == "__main__":
    success = test_bulk_delete_pickup_requests()
    if success:
        print("\nüéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –° –û–®–ò–ë–ö–ê–ú–ò!")