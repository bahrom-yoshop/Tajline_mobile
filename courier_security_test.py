#!/usr/bin/env python3
"""
–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ DELETE endpoint –∫—É—Ä—å–µ—Ä–æ–≤
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://freight-qr-system.preview.emergentagent.com/api"

# –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

# –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
OPERATOR_CREDENTIALS_LIST = [
    {"phone": "+79777888999", "password": "warehouse123"},
    {"phone": "+79777888999", "password": "operator123"},
    {"phone": "+79999888888", "password": "operator123"}
]

def make_request(method, endpoint, headers=None, json_data=None, params=None):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤"""
    url = f"{BACKEND_URL}{endpoint}"
    try:
        response = requests.request(
            method=method,
            url=url, 
            headers=headers,
            json=json_data,
            params=params,
            timeout=30
        )
        return response
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Request failed: {e}")
        return None

def authenticate_user(credentials, user_type="admin"):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {user_type} ({credentials['phone']})...")
    
    response = make_request("POST", "/auth/login", json_data=credentials)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ {user_type}: {response.status_code if response else 'No response'}")
        if response:
            print(f"Response: {response.text}")
        return None
    
    data = response.json()
    token = data.get("access_token")
    user_info = data.get("user", {})
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {user_type}: {user_info.get('full_name', 'Unknown')} (—Ä–æ–ª—å: {user_info.get('role', 'Unknown')})")
    return token, user_info.get('role', 'Unknown')

def test_operator_authorization():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"""
    print("\nüîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 60)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_result = authenticate_user(ADMIN_CREDENTIALS, "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    if not admin_result:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        return False
    
    admin_token, admin_role = admin_result
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    print("\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–∫–ª–∞–¥—ã
    headers = {"Authorization": f"Bearer {admin_token}"}
    warehouses_response = make_request("GET", "/warehouses", headers=headers)
    
    if not warehouses_response or warehouses_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤")
        return False
    
    warehouses = warehouses_response.json()
    if not warehouses:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
        return False
    
    warehouse_id = warehouses[0]["id"]
    
    # –°–æ–∑–¥–∞–µ–º –∫—É—Ä—å–µ—Ä–∞
    import random
    test_phone = f"+7999{random.randint(1000000, 9999999)}"
    
    courier_data = {
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö—É—Ä—å–µ—Ä –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
        "phone": test_phone,
        "password": "testcourier123",
        "address": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫—É—Ä—å–µ—Ä–∞",
        "transport_type": "car",
        "transport_number": f"SEC{random.randint(100, 999)}",
        "transport_capacity": 500.0,
        "assigned_warehouse_id": warehouse_id
    }
    
    courier_response = make_request("POST", "/admin/couriers/create", headers=headers, json_data=courier_data)
    
    if not courier_response or courier_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞")
        return False
    
    courier_info = courier_response.json()
    courier_id = courier_info.get("courier_id")
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä —Å–æ–∑–¥–∞–Ω: ID {courier_id}")
    
    # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    operator_token = None
    operator_role = None
    
    for credentials in OPERATOR_CREDENTIALS_LIST:
        result = authenticate_user(credentials, "–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
        if result:
            operator_token, operator_role = result
            if operator_role in ["warehouse_operator", "operator"]:
                break
    
    if not operator_token:
        print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–µ–π—Å—Ç–≤—É—é—â–µ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ...")
        
        # –°–æ–∑–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        operator_phone = f"+7999{random.randint(1000000, 9999999)}"
        operator_data = {
            "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û–ø–µ—Ä–∞—Ç–æ—Ä –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
            "phone": operator_phone,
            "password": "testoperator123",
            "address": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞",
            "warehouse_id": warehouse_id
        }
        
        operator_response = make_request("POST", "/admin/operators/create", headers=headers, json_data=operator_data)
        
        if operator_response and operator_response.status_code == 200:
            print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω: {operator_phone}")
            
            # –ê–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∫–∞–∫ –Ω–æ–≤—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä
            operator_credentials = {"phone": operator_phone, "password": "testoperator123"}
            result = authenticate_user(operator_credentials, "–Ω–æ–≤–æ–≥–æ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
            if result:
                operator_token, operator_role = result
        
        if not operator_token:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∏–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, —Ç–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
    security_tests = []
    
    # –¢–ï–°–¢ 1: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º
    if operator_token:
        print(f"\nüß™ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 1: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º (—Ä–æ–ª—å: {operator_role})...")
        
        operator_headers = {"Authorization": f"Bearer {operator_token}"}
        delete_response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=operator_headers)
        
        if not delete_response:
            print("‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 1 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
            security_tests.append(False)
        elif delete_response.status_code == 403:
            print("‚úÖ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 1 –ü–†–û–ô–î–ï–ù: –û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç 403 Forbidden")
            security_tests.append(True)
        else:
            print(f"‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 1 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è 403, –ø–æ–ª—É—á–µ–Ω {delete_response.status_code}")
            print(f"Response: {delete_response.text}")
            security_tests.append(False)
    else:
        print("‚ö†Ô∏è –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 1: –ü–†–û–ü–£–©–ï–ù (–Ω–µ—Ç —Ç–æ–∫–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞)")
        security_tests.append("–ü–†–û–ü–£–©–ï–ù")
    
    # –¢–ï–°–¢ 2: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print(f"\nüß™ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 2: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    no_auth_response = make_request("DELETE", f"/admin/couriers/{courier_id}")
    
    if not no_auth_response:
        print("‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        security_tests.append(False)
    elif no_auth_response.status_code == 401:
        print("‚úÖ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 2 –ü–†–û–ô–î–ï–ù: –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ–º 401 Unauthorized")
        security_tests.append(True)
    else:
        print(f"‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 2 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è 401, –ø–æ–ª—É—á–µ–Ω {no_auth_response.status_code}")
        security_tests.append(False)
    
    # –¢–ï–°–¢ 3: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞ (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π —Ç–µ—Å—Ç)
    print(f"\nüß™ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 3: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    
    fake_courier_id = "00000000-0000-0000-0000-000000000000"
    fake_delete_response = make_request("DELETE", f"/admin/couriers/{fake_courier_id}", headers=headers)
    
    if not fake_delete_response:
        print("‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 3 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        security_tests.append(False)
    elif fake_delete_response.status_code == 404:
        print("‚úÖ –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 3 –ü–†–û–ô–î–ï–ù: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—É—Ä—å–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404")
        security_tests.append(True)
    else:
        print(f"‚ùå –¢–ï–°–¢ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò 3 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è 404, –ø–æ–ª—É—á–µ–Ω {fake_delete_response.status_code}")
        print(f"Response: {fake_delete_response.text}")
        security_tests.append(False)
    
    # –£–¥–∞–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    print(f"\nüßπ –û—á–∏—Å—Ç–∫–∞: –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    cleanup_response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    if cleanup_response and cleanup_response.status_code == 200:
        print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω")
    
    # –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤ —Ç–µ—Å—Ç–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    print("\n" + "=" * 60)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    print("=" * 60)
    
    passed_security = 0
    total_security = 0
    
    test_names = [
        "–ó–∞—â–∏—Ç–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º",
        "–ó–∞—â–∏—Ç–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", 
        "–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞"
    ]
    
    for i, result in enumerate(security_tests):
        if result == "–ü–†–û–ü–£–©–ï–ù":
            print(f"‚ö†Ô∏è  {test_names[i]}: –ü–†–û–ü–£–©–ï–ù")
        elif result:
            print(f"‚úÖ {test_names[i]}: –ü–†–û–ô–î–ï–ù")
            passed_security += 1
            total_security += 1
        else:
            print(f"‚ùå {test_names[i]}: –ü–†–û–í–ê–õ–ï–ù")
            total_security += 1
    
    security_rate = (passed_security / total_security * 100) if total_security > 0 else 0
    print(f"\nüîí –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–¨: {passed_security}/{total_security} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ ({security_rate:.1f}%)")
    
    return security_rate >= 80

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üîí –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò DELETE ENDPOINT –ö–£–†–¨–ï–†–û–í")
    print("=" * 80)
    
    success = test_operator_authorization()
    
    if success:
        print("\nüéâ –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–°–¢–´ –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –¢–ï–°–¢–ê–• –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò")
    
    print(f"\nüïí –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()