// –†–ï–ó–ï–†–í–ù–ê–Ø –ö–û–ü–ò–Ø –°–¢–ê–†–´–• –ö–ê–†–¢–û–ß–ï–ö –ì–†–£–ó–û–í –î–õ–Ø –†–ê–ó–ú–ï–©–ï–ù–ò–Ø
// –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${new Date().toLocaleDateString('ru-RU')} 
// –î–∏–∞–ø–∞–∑–æ–Ω —Å—Ç—Ä–æ–∫ –≤ App.js: 20380-20500

// –°—Ç–∞—Ä—ã–π –∫–æ–¥ –∫–∞—Ä—Ç–æ—á–µ–∫:
const OldCargoPlacementCards = () => {
  return (
    <div className="grid gap-4 grid-cols-1 lg:grid-cols-2 xl:grid-cols-3">
      {availableCargoForPlacement.filter(item => item && item.id).map((item) => {
        const warehouseColors = getWarehouseColor(item.warehouse_name);
        return (
          <Card key={`cargo-${item.id}`} className={`${warehouseColors.border} ${warehouseColors.bg} border-l-4`}>
            <CardContent className="p-4">
              <h3 className="font-bold text-lg text-blue-600 mb-2">‚Ññ{item.cargo_number}</h3>
              <div className="space-y-2 text-sm">
                <div>
                  <span className="font-medium">üèôÔ∏è –ì–æ—Ä–æ–¥ –≤—ã–¥–∞—á–∏:</span> {item.delivery_city || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                </div>
                <div>
                  <span className="font-medium">üè¢ –ú–∞—Ä—à—Ä—É—Ç:</span> {item.source_warehouse_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'} ‚Üí {item.target_warehouse_name || '–ù–µ–∏–∑–≤–µ—Å—Ç–µ–Ω'}
                </div>
                <div>
                  <span className="font-medium">üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å:</span> {item.recipient_full_name || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                </div>
                <div>
                  <span className="font-medium">üìÖ –ü—Ä–∏–Ω—è—Ç:</span> {item.created_date ? new Date(item.created_date).toLocaleDateString('ru-RU') : '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
                </div>
                <div>
                  <span className="font-medium">üöö –°–ø–æ—Å–æ–±:</span> {item.delivery_method || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                </div>
                <div>
                  <span className="font-medium">üí∞ –û–ø–ª–∞—Ç–∞:</span> {item.payment_method || '–ù–µ —É–∫–∞–∑–∞–Ω'}
                </div>
              </div>
              
              <div className="bg-gray-50 p-3 rounded-lg mt-3">
                <h4 className="font-medium text-sm mb-2">üì¶ –°–ø–∏—Å–æ–∫ –≥—Ä—É–∑–æ–≤ ({(item.cargo_items || []).length} —Ç–∏–ø–æ–≤)</h4>
                {(item.cargo_items || []).length > 0 ? (
                  item.cargo_items.map((cargoItem, index) => (
                    <div key={index} className="bg-white p-2 rounded border text-xs mb-1">
                      <div className="flex justify-between items-center">
                        <div>
                          <p className="font-medium text-gray-800">
                            –ì—Ä—É–∑{item.cargo_number}/{String(index + 1).padStart(2, '0')} "{cargoItem.cargo_name || `–ì—Ä—É–∑ ‚Ññ${index + 1}`}"
                          </p>
                          <p className="text-gray-500 text-xs">
                            {cargoItem.quantity || 1} —à—Ç ‚Ä¢ {cargoItem.weight || 0} –∫–≥
                          </p>
                          {/* –ù–û–í–û–ï: –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–µ –Ω–æ–º–µ—Ä–∞ */}
                          {cargoItem.individual_items && cargoItem.individual_items.length > 0 && (
                            <div className="mt-1 flex flex-wrap gap-1">
                              {cargoItem.individual_items.slice(0, 3).map((unit, unitIndex) => (
                                <span 
                                  key={unitIndex} 
                                  className={`px-1 py-0.5 text-xs rounded ${
                                    unit.is_placed 
                                      ? 'bg-green-100 text-green-700' 
                                      : 'bg-gray-100 text-gray-600'
                                  }`}
                                  title={unit.individual_number}
                                >
                                  {unit.individual_number.split('/').slice(-1)[0]}
                                </span>
                              ))}
                              {cargoItem.individual_items.length > 3 && (
                                <span className="px-1 py-0.5 text-xs bg-gray-100 text-gray-500 rounded">
                                  +{cargoItem.individual_items.length - 3}
                                </span>
                              )}
                            </div>
                          )}
                        </div>
                        <div className="text-right">
                          <p className="font-medium text-blue-600">
                            –†–∞–∑–º–µ—â–µ–Ω–æ {cargoItem.placed_count || 0}/{cargoItem.quantity || 1}
                          </p>
                          <p className={`text-xs ${
                            (cargoItem.placed_count || 0) === (cargoItem.quantity || 1) 
                              ? 'text-green-600' 
                              : (cargoItem.placed_count || 0) > 0 
                                ? 'text-yellow-600' 
                                : 'text-red-600'
                          }`}>
                            {(cargoItem.placed_count || 0) === (cargoItem.quantity || 1) 
                              ? '–†–∞–∑–º–µ—â–µ–Ω–æ' 
                              : (cargoItem.placed_count || 0) > 0 
                                ? '–ß–∞—Å—Ç–∏—á–Ω–æ' 
                                : '–ñ–¥—ë—Ç'}
                          </p>
                        </div>
                      </div>
                    </div>
                  ))
                ) : (
                  <div className="bg-white p-2 rounded border text-xs">
                    <div className="flex justify-between">
                      <div>
                        <p className="font-medium">–ì—Ä—É–∑{item.cargo_number}/01 ‚Ññ1</p>
                        <p className="text-gray-500">1 —à—Ç ‚Ä¢ {item.weight || 0} –∫–≥</p>
                      </div>
                      <span className="text-red-600 text-xs">–ñ–¥—ë—Ç —Ä–∞–∑–º–µ—â–µ–Ω–∏–µ</span>
                    </div>
                  </div>
                )}
                
                <div className="mt-2 pt-2 border-t text-sm">
                  <div className="flex justify-between">
                    <span className="font-medium">–û–±—â–∏–π –ø—Ä–æ–≥—Ä–µ—Å—Å:</span>
                    <span className="font-bold text-blue-600">{item.placement_progress || '0/1'}</span>
                  </div>
                </div>
              </div>
              
              <div className="flex flex-wrap gap-2 mt-4">
                <Button onClick={() => openEnhancedPlacementModal(item)} size="sm" className="bg-green-600 hover:bg-green-700">
                  <Grid3X3 className="mr-1 h-3 w-3" />–†–∞–∑–º–µ—Å—Ç–∏—Ç—å
                </Button>
                <Button onClick={() => handleOpenCargoPlacementDetails(item)} size="sm" className="bg-purple-600 hover:bg-purple-700">
                  <Settings className="mr-1 h-3 w-3" />–î–µ–π—Å—Ç–≤–∏—è
                </Button>
              </div>
            </CardContent>
          </Card>
        );
      })}
    </div>
  );
};