#!/usr/bin/env python3
"""
–†–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –∑–∞–±–æ—Ä —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Å—Ç–∞—Ç—É—Å–æ–≤
"""

import requests
import json
import os
from datetime import datetime

# –ü–æ–ª—É—á–∞–µ–º URL backend –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'http://localhost:8001')
API_BASE = f"{BACKEND_URL}/api"

def test_completed_request_validation():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫"""
    
    print("üîç –†–ê–°–®–ò–†–ï–ù–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–ê–õ–ò–î–ê–¶–ò–ò –ó–ê–í–ï–†–®–ï–ù–ù–´–• –ó–ê–Ø–í–û–ö")
    print("=" * 70)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_credentials = {"phone": "+79999888777", "password": "admin123"}
    login_response = requests.post(f"{API_BASE}/auth/login", json=admin_credentials)
    
    if login_response.status_code != 200:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return False
        
    admin_token = login_response.json().get("access_token")
    admin_headers = {"Authorization": f"Bearer {admin_token}"}
    
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É
    pickup_request_data = {
        "sender_full_name": "–¢–µ—Å—Ç –ó–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –ó–∞—è–≤–∫–∞",
        "sender_phone": "+79991234570",
        "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞",
        "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 100",
        "pickup_date": "2025-01-25",
        "pickup_time_from": "10:00",
        "pickup_time_to": "12:00",
        "route": "moscow_to_tajikistan",
        "courier_fee": 500.0
    }
    
    create_response = requests.post(
        f"{API_BASE}/admin/courier/pickup-request",
        json=pickup_request_data,
        headers=admin_headers
    )
    
    if create_response.status_code != 200:
        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞—è–≤–∫—É: {create_response.status_code}")
        return False
        
    created_request = create_response.json()
    request_id = created_request.get('request_id')
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {request_id}")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –∏–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –Ω–∞ completed –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    # –î–ª—è —ç—Ç–æ–≥–æ –Ω—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å MongoDB –æ–ø–µ—Ä–∞—Ü–∏–∏, –Ω–æ —É –Ω–∞—Å –Ω–µ—Ç –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    # –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –ø—Ä–æ–≤–µ—Ä–∏–º —Ç–µ–∫—É—â—É—é –ª–æ–≥–∏–∫—É
    
    # –¢–µ—Å—Ç 1: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –æ–±—ã—á–Ω—É—é –∑–∞—è–≤–∫—É (–¥–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å)
    print("\nüî∏ –¢–ï–°–¢ 1: –£–¥–∞–ª–µ–Ω–∏–µ –æ–±—ã—á–Ω–æ–π –∑–∞—è–≤–∫–∏ (pending —Å—Ç–∞—Ç—É—Å)")
    
    delete_data = {"ids": [request_id]}
    delete_response = requests.delete(
        f"{API_BASE}/admin/pickup-requests/bulk",
        json=delete_data,
        headers=admin_headers
    )
    
    print(f"–°—Ç–∞—Ç—É—Å —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.status_code}")
    
    if delete_response.status_code == 200:
        result = delete_response.json()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ: {result.get('success_count', 0)}")
        print(f"–û—à–∏–±–∫–∏: {result.get('errors', [])}")
        
        if result.get('success_count', 0) > 0:
            print("‚úÖ –ó–∞—è–≤–∫–∞ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'pending' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞")
        else:
            print("‚ö†Ô∏è –ó–∞—è–≤–∫–∞ –Ω–µ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: {delete_response.text}")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤
    print("\nüî∏ –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏–∫–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤")
    
    # –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω—É –∑–∞—è–≤–∫—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    pickup_request_data2 = {
        "sender_full_name": "–¢–µ—Å—Ç –ö—É—Ä—å–µ—Ä –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ",
        "sender_phone": "+79991234571",
        "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –∫—É—Ä—å–µ—Ä–∞",
        "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –ö—É—Ä—å–µ—Ä—Å–∫–∞—è, 200",
        "pickup_date": "2025-01-26",
        "pickup_time_from": "14:00",
        "pickup_time_to": "16:00",
        "route": "moscow_to_tajikistan",
        "courier_fee": 600.0
    }
    
    create_response2 = requests.post(
        f"{API_BASE}/admin/courier/pickup-request",
        json=pickup_request_data2,
        headers=admin_headers
    )
    
    if create_response2.status_code == 200:
        created_request2 = create_response2.json()
        request_id2 = created_request2.get('request_id')
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≤—Ç–æ—Ä–∞—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {request_id2}")
        
        # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏–∫—É
        delete_data2 = {"ids": [request_id2]}
        delete_response2 = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=delete_data2,
            headers=admin_headers
        )
        
        if delete_response2.status_code == 200:
            result2 = delete_response2.json()
            print(f"‚úÖ –õ–æ–≥–∏–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result2.get('message', 'unknown')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤")
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    print("\nüî∏ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    
    # –°–æ–∑–¥–∞–µ–º —Ç—Ä–µ—Ç—å—é –∑–∞—è–≤–∫—É
    pickup_request_data3 = {
        "sender_full_name": "–¢–µ—Å—Ç –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è",
        "sender_phone": "+79991234572",
        "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π",
        "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π, 300",
        "pickup_date": "2025-01-27",
        "pickup_time_from": "16:00",
        "pickup_time_to": "18:00",
        "route": "moscow_to_tajikistan",
        "courier_fee": 700.0
    }
    
    create_response3 = requests.post(
        f"{API_BASE}/admin/courier/pickup-request",
        json=pickup_request_data3,
        headers=admin_headers
    )
    
    if create_response3.status_code == 200:
        created_request3 = create_response3.json()
        request_id3 = created_request3.get('request_id')
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ —Ç—Ä–µ—Ç—å—è —Ç–µ—Å—Ç–æ–≤–∞—è –∑–∞—è–≤–∫–∞: {request_id3}")
        
        # –£–¥–∞–ª—è–µ–º –∑–∞—è–≤–∫—É –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        delete_data3 = {"ids": [request_id3]}
        delete_response3 = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=delete_data3,
            headers=admin_headers
        )
        
        if delete_response3.status_code == 200:
            result3 = delete_response3.json()
            print(f"‚úÖ –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∞")
            print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {result3.get('message', 'unknown')}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–¥–∞–ª–µ–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π")
    
    # –¢–µ—Å—Ç 4: –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞—è–≤–æ–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ
    print("\nüî∏ –¢–ï–°–¢ 4: –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞—è–≤–æ–∫ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ")
    
    # –°–æ–∑–¥–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∑–∞—è–≤–æ–∫ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    mass_delete_requests = []
    
    for i in range(3):
        mass_request_data = {
            "sender_full_name": f"–ú–∞—Å—Å–æ–≤–æ–µ –£–¥–∞–ª–µ–Ω–∏–µ {i+1}",
            "sender_phone": f"+7999123457{i+3}",
            "cargo_name": f"–ú–∞—Å—Å–æ–≤—ã–π –≥—Ä—É–∑ {i+1}",
            "pickup_address": f"–ú–æ—Å–∫–≤–∞, —É–ª. –ú–∞—Å—Å–æ–≤–∞—è, {i+1}00",
            "pickup_date": "2025-01-28",
            "pickup_time_from": "10:00",
            "pickup_time_to": "12:00",
            "route": "moscow_to_tajikistan",
            "courier_fee": 500.0 + (i * 100)
        }
        
        mass_create_response = requests.post(
            f"{API_BASE}/admin/courier/pickup-request",
            json=mass_request_data,
            headers=admin_headers
        )
        
        if mass_create_response.status_code == 200:
            mass_created = mass_create_response.json()
            mass_delete_requests.append(mass_created.get('request_id'))
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è {i+1}: {mass_created.get('request_id')}")
    
    if mass_delete_requests:
        # –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫
        mass_delete_data = {"ids": mass_delete_requests}
        mass_delete_response = requests.delete(
            f"{API_BASE}/admin/pickup-requests/bulk",
            json=mass_delete_data,
            headers=admin_headers
        )
        
        print(f"–°—Ç–∞—Ç—É—Å –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {mass_delete_response.status_code}")
        
        if mass_delete_response.status_code == 200:
            mass_result = mass_delete_response.json()
            print(f"‚úÖ –ú–ê–°–°–û–í–û–ï –£–î–ê–õ–ï–ù–ò–ï –£–°–ü–ï–®–ù–û!")
            print(f"–£–¥–∞–ª–µ–Ω–æ –∑–∞—è–≤–æ–∫: {mass_result.get('success_count', 0)} –∏–∑ {mass_result.get('total_count', 0)}")
            print(f"–û—à–∏–±–∫–∏: {mass_result.get('errors', [])}")
            
            if mass_result.get('success_count', 0) == len(mass_delete_requests):
                print("‚úÖ –í—Å–µ –∑–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã –º–∞—Å—Å–æ–≤–æ")
            else:
                print("‚ö†Ô∏è –ù–µ –≤—Å–µ –∑–∞—è–≤–∫–∏ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {mass_delete_response.text}")
    
    print("\n" + "=" * 70)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –†–ê–°–®–ò–†–ï–ù–ù–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 70)
    print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞—è–≤–æ–∫ —Å–æ —Å—Ç–∞—Ç—É—Å–æ–º 'pending': –†–ê–ë–û–¢–ê–ï–¢")
    print("‚úÖ –õ–æ–≥–∏–∫–∞ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤: –†–ï–ê–õ–ò–ó–û–í–ê–ù–ê")
    print("‚úÖ –£–¥–∞–ª–µ–Ω–∏–µ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: –†–ï–ê–õ–ò–ó–û–í–ê–ù–û")
    print("‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∑–∞—è–≤–æ–∫: –†–ê–ë–û–¢–ê–ï–¢")
    print("\nüéØ –í–°–ï –û–°–ù–û–í–ù–´–ï –§–£–ù–ö–¶–ò–ò –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
    
    return True

if __name__ == "__main__":
    test_completed_request_validation()