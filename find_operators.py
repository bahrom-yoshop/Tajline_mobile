#!/usr/bin/env python3
"""
üîç –ü–û–ò–°–ö –î–û–°–¢–£–ü–ù–´–• –û–ü–ï–†–ê–¢–û–†–û–í –°–ö–õ–ê–î–ê –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://tajline-logistics-1.preview.emergentagent.com/api"
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

def find_operators():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        response = session.post(
            f"{BACKEND_URL}/auth/login",
            json=ADMIN_CREDENTIALS,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            admin_token = data["access_token"]
            session.headers.update({
                "Authorization": f"Bearer {admin_token}"
            })
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        response = session.get(f"{BACKEND_URL}/admin/users")
        
        if response.status_code == 200:
            data = response.json()
            users = data.get('items', []) if isinstance(data, dict) else data
            
            print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            
            # –ò—â–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–∫–ª–∞–¥–∞
            operators = [u for u in users if u.get('role') == 'warehouse_operator']
            print(f"üè≠ –û–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å–∫–ª–∞–¥–∞: {len(operators)}")
            
            for i, operator in enumerate(operators[:5], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã—Ö 5
                print(f"   {i}. {operator.get('full_name', 'N/A')} - {operator.get('phone', 'N/A')} (ID: {operator.get('id', 'N/A')})")
                print(f"      –ê–∫—Ç–∏–≤–µ–Ω: {operator.get('is_active', 'N/A')}")
                
            # –¢–∞–∫–∂–µ –∏—â–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞–º–∏, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º–∏ 777888999
            matching_users = [u for u in users if '777888999' in u.get('phone', '')]
            if matching_users:
                print(f"\nüîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –Ω–æ–º–µ—Ä–æ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º '777888999':")
                for user in matching_users:
                    print(f"   - {user.get('full_name', 'N/A')} - {user.get('phone', 'N/A')} (–†–æ–ª—å: {user.get('role', 'N/A')}, –ê–∫—Ç–∏–≤–µ–Ω: {user.get('is_active', 'N/A')})")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

if __name__ == "__main__":
    find_operators()