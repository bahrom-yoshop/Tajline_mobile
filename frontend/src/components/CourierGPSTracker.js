import React from 'react';
import { Button } from './ui/button';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from './ui/card';
import { Badge } from './ui/badge';
import { Alert, AlertDescription } from './ui/alert';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from './ui/select';
import { 
  MapPin, 
  Navigation, 
  Clock, 
  Activity, 
  AlertTriangle, 
  CheckCircle, 
  Power,
  PowerOff,
  Truck,
  Home,
  Target,
  Package
} from 'lucide-react';

const CourierGPSTracker = ({ 
  courierTracking, 
  onStartTracking, 
  onStopTracking, 
  onStatusChange 
}) => {
  
  // –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç –∏ –∏–∫–æ–Ω–∫—É —Å—Ç–∞—Ç—É—Å–∞
  const getStatusConfig = (status) => {
    const configs = {
      'offline': {
        color: 'bg-gray-500',
        textColor: 'text-gray-700',
        icon: PowerOff,
        label: '–ù–µ –≤ —Å–µ—Ç–∏',
        description: '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ'
      },
      'online': {
        color: 'bg-green-500',
        textColor: 'text-green-700',
        icon: CheckCircle,
        label: '–°–≤–æ–±–æ–¥–µ–Ω',
        description: '–ì–æ—Ç–æ–≤ –∫ –Ω–æ–≤—ã–º –∑–∞—è–≤–∫–∞–º'
      },
      'on_route': {
        color: 'bg-blue-500',
        textColor: 'text-blue-700',
        icon: Navigation,
        label: '–ï–¥–µ—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É',
        description: '–í –ø—É—Ç–∏ –∫ –º–µ—Å—Ç—É –∑–∞–±–æ—Ä–∞/–¥–æ—Å—Ç–∞–≤–∫–∏'
      },
      'at_pickup': {
        color: 'bg-orange-500',
        textColor: 'text-orange-700',
        icon: Package,
        label: '–ù–∞ –º–µ—Å—Ç–µ –∑–∞–±–æ—Ä–∞',
        description: '–ü—Ä–∏–±—ã–ª –∫ –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—é'
      },
      'at_delivery': {
        color: 'bg-purple-500',
        textColor: 'text-purple-700',
        icon: Home,
        label: '–ù–∞ –º–µ—Å—Ç–µ –¥–æ—Å—Ç–∞–≤–∫–∏',
        description: '–ü—Ä–∏–±—ã–ª –∫ –ø–æ–ª—É—á–∞—Ç–µ–ª—é'
      },
      'busy': {
        color: 'bg-red-500',
        textColor: 'text-red-700',
        icon: AlertTriangle,
        label: '–ó–∞–Ω—è—Ç',
        description: '–í—ã–ø–æ–ª–Ω—è–µ—Ç –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏'
      }
    };
    return configs[status] || configs['offline'];
  };

  const statusConfig = getStatusConfig(courierTracking.status);
  const StatusIcon = statusConfig.icon;

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
  const formatLastUpdate = (lastUpdate) => {
    if (!lastUpdate) return '–ù–∏–∫–æ–≥–¥–∞';
    
    const now = new Date();
    const diff = Math.floor((now - lastUpdate) / 1000); // —Å–µ–∫—É–Ω–¥—ã
    
    if (diff < 60) return '—Ç–æ–ª—å–∫–æ —á—Ç–æ';
    if (diff < 3600) return `${Math.floor(diff / 60)} –º–∏–Ω –Ω–∞–∑–∞–¥`;
    if (diff < 86400) return `${Math.floor(diff / 3600)} —á –Ω–∞–∑–∞–¥`;
    return lastUpdate.toLocaleDateString('ru-RU');
  };

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ—á–Ω–æ—Å—Ç—å GPS
  const formatAccuracy = (accuracy) => {
    if (!accuracy) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    if (accuracy < 10) return `${Math.round(accuracy)}–º (–æ—Ç–ª–∏—á–Ω–æ)`;
    if (accuracy < 50) return `${Math.round(accuracy)}–º (—Ö–æ—Ä–æ—à–æ)`;
    if (accuracy < 100) return `${Math.round(accuracy)}–º (—É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ)`;
    return `${Math.round(accuracy)}–º (—Å–ª–∞–±–æ)`;
  };

  return (
    <Card className="w-full">
      <CardHeader className="pb-3">
        <div className="flex items-center justify-between">
          <div className="flex items-center space-x-3">
            <div className={`p-2 rounded-full ${statusConfig.color}`}>
              <StatusIcon className="h-5 w-5 text-white" />
            </div>
            <div>
              <CardTitle className="text-lg">GPS –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ</CardTitle>
              <CardDescription>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ–º –∫—É—Ä—å–µ—Ä–∞</CardDescription>
            </div>
          </div>
          <Badge 
            variant={courierTracking.isTracking ? "default" : "secondary"}
            className={`${courierTracking.isTracking ? statusConfig.color : 'bg-gray-400'} text-white`}
          >
            {statusConfig.label}
          </Badge>
        </div>
      </CardHeader>

      <CardContent className="space-y-4">
        {/* –û—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="flex gap-2">
          {!courierTracking.isTracking ? (
            <Button 
              onClick={onStartTracking}
              className="flex-1 bg-green-600 hover:bg-green-700 text-white"
            >
              <Power className="mr-2 h-4 w-4" />
              –ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
            </Button>
          ) : (
            <Button 
              onClick={onStopTracking}
              variant="outline"
              className="flex-1 border-red-300 text-red-600 hover:bg-red-50"
            >
              <PowerOff className="mr-2 h-4 w-4" />
              –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ
            </Button>
          )}
        </div>

        {/* –í—ã–±–æ—Ä —Å—Ç–∞—Ç—É—Å–∞ (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ) */}
        {courierTracking.isTracking && (
          <div className="space-y-2">
            <label className="text-sm font-medium text-gray-700">
              –¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:
            </label>
            <Select value={courierTracking.status} onValueChange={onStatusChange}>
              <SelectTrigger className="w-full">
                <SelectValue />
              </SelectTrigger>
              <SelectContent>
                <SelectItem value="online">
                  <div className="flex items-center">
                    <CheckCircle className="mr-2 h-4 w-4 text-green-500" />
                    –°–≤–æ–±–æ–¥–µ–Ω
                  </div>
                </SelectItem>
                <SelectItem value="on_route">
                  <div className="flex items-center">
                    <Navigation className="mr-2 h-4 w-4 text-blue-500" />
                    –ï–¥–µ—Ç –∫ –∫–ª–∏–µ–Ω—Ç—É
                  </div>
                </SelectItem>
                <SelectItem value="at_pickup">
                  <div className="flex items-center">
                    <Package className="mr-2 h-4 w-4 text-orange-500" />
                    –ù–∞ –º–µ—Å—Ç–µ –∑–∞–±–æ—Ä–∞
                  </div>
                </SelectItem>
                <SelectItem value="at_delivery">
                  <div className="flex items-center">
                    <Home className="mr-2 h-4 w-4 text-purple-500" />
                    –ù–∞ –º–µ—Å—Ç–µ –¥–æ—Å—Ç–∞–≤–∫–∏
                  </div>
                </SelectItem>
                <SelectItem value="busy">
                  <div className="flex items-center">
                    <AlertTriangle className="mr-2 h-4 w-4 text-red-500" />
                    –ó–∞–Ω—è—Ç
                  </div>
                </SelectItem>
              </SelectContent>
            </Select>
            <p className="text-xs text-gray-500">{statusConfig.description}</p>
          </div>
        )}

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ */}
        {courierTracking.isTracking && (
          <div className="bg-gray-50 p-3 rounded-lg space-y-2">
            <div className="flex items-center text-sm">
              <MapPin className="mr-2 h-4 w-4 text-gray-500" />
              <span className="font-medium">–ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã:</span>
              {courierTracking.coordinates ? (
                <span className="ml-2 font-mono text-xs">
                  {courierTracking.coordinates.latitude.toFixed(6)}, {courierTracking.coordinates.longitude.toFixed(6)}
                </span>
              ) : (
                <span className="ml-2 text-gray-500">–û–ø—Ä–µ–¥–µ–ª—è—é—Ç—Å—è...</span>
              )}
            </div>

            <div className="flex items-center text-sm">
              <Activity className="mr-2 h-4 w-4 text-gray-500" />
              <span className="font-medium">–¢–æ—á–Ω–æ—Å—Ç—å GPS:</span>
              <span className="ml-2">{formatAccuracy(courierTracking.accuracy)}</span>
            </div>

            <div className="flex items-center text-sm">
              <Clock className="mr-2 h-4 w-4 text-gray-500" />
              <span className="font-medium">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
              <span className="ml-2">{formatLastUpdate(courierTracking.lastUpdate)}</span>
            </div>
          </div>
        )}

        {/* –û—à–∏–±–∫–∏ */}
        {courierTracking.error && (
          <Alert className="border-red-200 bg-red-50">
            <AlertTriangle className="h-4 w-4 text-red-600" />
            <AlertDescription className="text-red-700">
              {courierTracking.error}
            </AlertDescription>
          </Alert>
        )}

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∏ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="bg-blue-50 p-3 rounded-lg">
          <h4 className="text-sm font-medium text-blue-800 mb-2">üí° –°–æ–≤–µ—Ç—ã –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é:</h4>
          <ul className="text-xs text-blue-700 space-y-1">
            <li>‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ GPS –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è</li>
            <li>‚Ä¢ –û–±–Ω–æ–≤–ª—è–π—Ç–µ —Å—Ç–∞—Ç—É—Å –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–∏—Ç—É–∞—Ü–∏–∏</li>
            <li>‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ</li>
            <li>‚Ä¢ –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è—é—Ç—Å—è –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥</li>
            {!courierTracking.isTracking && (
              <li className="text-blue-600 font-medium">‚Ä¢ –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ" –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏</li>
            )}
          </ul>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è */}
        {courierTracking.isTracking && (
          <div className="grid grid-cols-3 gap-2 text-center">
            <div className="bg-green-50 p-2 rounded">
              <div className="text-lg font-bold text-green-600">
                {courierTracking.coordinates ? '‚úì' : '‚óã'}
              </div>
              <div className="text-xs text-green-700">GPS</div>
            </div>
            <div className="bg-blue-50 p-2 rounded">
              <div className="text-lg font-bold text-blue-600">
                {courierTracking.lastUpdate ? '‚úì' : '‚óã'}
              </div>
              <div className="text-xs text-blue-700">–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è</div>
            </div>
            <div className="bg-purple-50 p-2 rounded">
              <div className="text-lg font-bold text-purple-600">
                {courierTracking.status !== 'offline' ? '‚úì' : '‚óã'}
              </div>
              <div className="text-xs text-purple-700">–°—Ç–∞—Ç—É—Å</div>
            </div>
          </div>
        )}
      </CardContent>
    </Card>
  );
};

export default CourierGPSTracker;