#!/usr/bin/env python3
"""
DEBUG: –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–∞—Å—Å–æ–≤—ã–º —É–¥–∞–ª–µ–Ω–∏–µ–º –≤ TAJLINE.TJ

–ü—Ä–æ–≤–µ—Ä—è–µ–º:
1. –†–∞–±–æ—Ç–∞–µ—Ç –ª–∏ –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
2. –ö–∞–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ–∂–∏–¥–∞–µ—Ç—Å—è –¥–ª—è bulk deletion
3. –ü—Ä–æ–±–ª–µ–º—ã —Å endpoint'–æ–º
"""

import requests
import json
import os

BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://cargo-tracker-28.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

def test_debug():
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    auth_data = {"phone": "+79999888777", "password": "admin123"}
    session = requests.Session()
    
    response = session.post(f"{API_BASE}/auth/login", json=auth_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return
    
    admin_token = response.json().get("access_token")
    headers = {"Authorization": f"Bearer {admin_token}"}
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–∑–æ–≤
    response = session.get(f"{API_BASE}/cargo/all", headers=headers)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥—Ä—É–∑–æ–≤: {response.text}")
        return
    
    cargo_list = response.json()
    if len(cargo_list) < 3:
        print("‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥—Ä—É–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(cargo_list)} –≥—Ä—É–∑–æ–≤")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
    test_cargo = cargo_list[0]
    cargo_id = test_cargo["id"]
    cargo_number = test_cargo["cargo_number"]
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–∑–∞ {cargo_number} (ID: {cargo_id})")
    
    response = session.delete(f"{API_BASE}/admin/cargo/{cargo_id}", headers=headers)
    print(f"–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ: HTTP {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º bulk deletion —Å —Ä–∞–∑–Ω—ã–º–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö
    test_cargo_ids = [cargo["id"] for cargo in cargo_list[1:3]]
    test_cargo_numbers = [cargo["cargo_number"] for cargo in cargo_list[1:3]]
    
    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–∑–æ–≤: {test_cargo_numbers}")
    print(f"IDs: {test_cargo_ids}")
    print()
    
    # –í–∞—Ä–∏–∞–Ω—Ç 1: {"ids": [...]}
    print("1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: {\"ids\": [...]}")
    bulk_data_1 = {"ids": test_cargo_ids}
    response = session.delete(f"{API_BASE}/admin/cargo/bulk", json=bulk_data_1, headers=headers)
    print(f"HTTP {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    print()
    
    # –í–∞—Ä–∏–∞–Ω—Ç 2: {"cargo_ids": [...]}
    print("2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: {\"cargo_ids\": [...]}")
    bulk_data_2 = {"cargo_ids": test_cargo_ids}
    response = session.delete(f"{API_BASE}/admin/cargo/bulk", json=bulk_data_2, headers=headers)
    print(f"HTTP {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    print()
    
    # –í–∞—Ä–∏–∞–Ω—Ç 3: –ü—Ä—è–º–æ–π —Å–ø–∏—Å–æ–∫
    print("3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä—è–º–æ–π —Å–ø–∏—Å–æ–∫ ID")
    response = session.delete(f"{API_BASE}/admin/cargo/bulk", json=test_cargo_ids, headers=headers)
    print(f"HTTP {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥—Ä—É–≥–∏–µ bulk endpoints
    print("4Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ endpoints")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º POST –º–µ—Ç–æ–¥
    response = session.post(f"{API_BASE}/admin/cargo/bulk-delete", json=bulk_data_1, headers=headers)
    print(f"POST /api/admin/cargo/bulk-delete: HTTP {response.status_code}")
    print(f"–û—Ç–≤–µ—Ç: {response.text}")
    print()

if __name__ == "__main__":
    test_debug()