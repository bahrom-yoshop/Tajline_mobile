#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ –≤ TAJLINE.TJ

–ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:
1) –ò–∑–º–µ–Ω–µ–Ω –ø–∞—Ä–∞–º–µ—Ç—Ä —Å warehouse_ids: dict –Ω–∞ request: BulkDeleteRequest –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏
2) –ò–∑–º–µ–Ω–µ–Ω –¥–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —Å warehouse_ids.get("ids", []) –Ω–∞ request.ids
3) –î–æ–±–∞–≤–ª–µ–Ω–æ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
4) –î–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–ª–µ "success": True –≤ –æ—Ç–≤–µ—Ç –¥–ª—è frontend
5) –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏

–ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´:
1) –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (+79999888777/admin123)
2) –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∫–ª–∞–¥–æ–≤
3) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤ (–±–µ–∑ –≥—Ä—É–∑–æ–≤)
4) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏ (–¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ—à–∏–±–∫–∏)
5) –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Å–ª–æ–º–∞–ª–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å
6) –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ backend –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –¥–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
"""

import requests
import json
import sys
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://tajline-cargo-8.preview.emergentagent.com/api"
ADMIN_PHONE = "+79999888777"
ADMIN_PASSWORD = "admin123"

class WarehouseBulkDeletionTester:
    def __init__(self):
        self.session = requests.Session()
        self.admin_token = None
        self.admin_user_info = None
        self.test_results = []
        
    def log_test(self, test_name, success, details=""):
        """–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤"""
        status = "‚úÖ PASS" if success else "‚ùå FAIL"
        result = {
            "test": test_name,
            "status": status,
            "success": success,
            "details": details,
            "timestamp": datetime.now().isoformat()
        }
        self.test_results.append(result)
        print(f"{status}: {test_name}")
        if details:
            print(f"   Details: {details}")
        print()
        
    def authenticate_admin(self):
        """1) –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ (+79999888777/admin123)"""
        print("üîê –¢–ï–°–¢ 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
        
        try:
            login_data = {
                "phone": ADMIN_PHONE,
                "password": ADMIN_PASSWORD
            }
            
            response = self.session.post(f"{BACKEND_URL}/auth/login", json=login_data)
            
            if response.status_code == 200:
                data = response.json()
                self.admin_token = data.get("access_token")
                self.admin_user_info = data.get("user")
                
                if self.admin_token and self.admin_user_info:
                    user_role = self.admin_user_info.get("role")
                    user_name = self.admin_user_info.get("full_name")
                    user_number = self.admin_user_info.get("user_number")
                    
                    if user_role == "admin":
                        self.session.headers.update({"Authorization": f"Bearer {self.admin_token}"})
                        self.log_test(
                            "–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", 
                            True, 
                            f"–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è '{user_name}' (–Ω–æ–º–µ—Ä: {user_number}), —Ä–æ–ª—å: {user_role}"
                        )
                        return True
                    else:
                        self.log_test("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", False, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å: {user_role}")
                        return False
                else:
                    self.log_test("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", False, "–¢–æ–∫–µ–Ω –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
                    return False
            else:
                self.log_test("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", False, f"HTTP {response.status_code}: {response.text}")
                return False
                
        except Exception as e:
            self.log_test("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def get_warehouses_list(self):
        """2) –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö —Å–∫–ª–∞–¥–æ–≤"""
        print("üì¶ –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤")
        
        try:
            response = self.session.get(f"{BACKEND_URL}/warehouses")
            
            if response.status_code == 200:
                warehouses = response.json()
                
                if isinstance(warehouses, list) and len(warehouses) > 0:
                    # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–∫–ª–∞–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
                    warehouse_info = []
                    for warehouse in warehouses[:10]:  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 10 –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                        warehouse_info.append({
                            "id": warehouse.get("id"),
                            "name": warehouse.get("name"),
                            "location": warehouse.get("location")
                        })
                    
                    self.warehouses = warehouses
                    self.log_test(
                        "–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤", 
                        True, 
                        f"–ù–∞–π–¥–µ–Ω–æ {len(warehouses)} —Å–∫–ª–∞–¥–æ–≤. –ü—Ä–∏–º–µ—Ä—ã: {warehouse_info[:3]}"
                    )
                    return True
                else:
                    self.log_test("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤", False, "–°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ –ø—É—Å—Ç –∏–ª–∏ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç")
                    return False
            else:
                self.log_test("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤", False, f"HTTP {response.status_code}: {response.text}")
                return False
                
        except Exception as e:
            self.log_test("–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def test_bulk_delete_request_structure(self):
        """3) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ BulkDeleteRequest"""
        print("üîß –¢–ï–°–¢ 3: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ BulkDeleteRequest")
        
        try:
            # –¢–µ—Å—Ç 3.1: –ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫–ª–æ–Ω–µ–Ω)
            empty_request = {"ids": []}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=empty_request)
            
            if response.status_code in [400, 422]:
                self.log_test(
                    "–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ IDs", 
                    True, 
                    f"–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: HTTP {response.status_code}"
                )
            else:
                self.log_test(
                    "–í–∞–ª–∏–¥–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ —Å–ø–∏—Å–∫–∞ IDs", 
                    False, 
                    f"–ü—É—Å—Ç–æ–π —Å–ø–∏—Å–æ–∫ –Ω–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω: HTTP {response.status_code}"
                )
            
            # –¢–µ—Å—Ç 3.2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ (—Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç warehouse_ids)
            wrong_structure = {"warehouse_ids": ["test-id-1", "test-id-2"]}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=wrong_structure)
            
            if response.status_code in [400, 422]:
                self.log_test(
                    "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã warehouse_ids", 
                    True, 
                    f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞: HTTP {response.status_code}"
                )
            else:
                self.log_test(
                    "–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã warehouse_ids", 
                    False, 
                    f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –Ω–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞: HTTP {response.status_code}"
                )
            
            # –¢–µ—Å—Ç 3.3: –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (>100)
            too_many_ids = {"ids": [f"test-id-{i}" for i in range(101)]}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=too_many_ids)
            
            if response.status_code in [400, 422]:
                self.log_test(
                    "–í–∞–ª–∏–¥–∞—Ü–∏—è –ª–∏–º–∏—Ç–∞ >100 —ç–ª–µ–º–µ–Ω—Ç–æ–≤", 
                    True, 
                    f"–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: HTTP {response.status_code}"
                )
            else:
                self.log_test(
                    "–í–∞–ª–∏–¥–∞—Ü–∏—è –ª–∏–º–∏—Ç–∞ >100 —ç–ª–µ–º–µ–Ω—Ç–æ–≤", 
                    False, 
                    f"–ü—Ä–µ–≤—ã—à–µ–Ω–∏–µ –ª–∏–º–∏—Ç–∞ –Ω–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ: HTTP {response.status_code}"
                )
            
            return True
            
        except Exception as e:
            self.log_test("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –∑–∞–ø—Ä–æ—Å–∞", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def test_bulk_delete_empty_warehouses(self):
        """4) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤ (–±–µ–∑ –≥—Ä—É–∑–æ–≤)"""
        print("üóëÔ∏è –¢–ï–°–¢ 4: –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
        
        try:
            # –ù–∞–π–¥–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –ø—É—Å—Ç—ã—Ö)
            if not hasattr(self, 'warehouses') or len(self.warehouses) < 2:
                self.log_test("–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", False, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 2 —Å–∫–ª–∞–¥–∞ (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ –ø—É—Å—Ç—ã–µ)
            test_warehouses = self.warehouses[-2:]
            test_ids = [w["id"] for w in test_warehouses]
            
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤: {[w['name'] for w in test_warehouses]}")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
            delete_request = {"ids": test_ids}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=delete_request)
            
            if response.status_code == 200:
                data = response.json()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞ —Å–æ–≥–ª–∞—Å–Ω–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º
                required_fields = ["message", "deleted_count", "total_requested", "errors", "success"]
                missing_fields = [field for field in required_fields if field not in data]
                
                if not missing_fields:
                    deleted_count = data.get("deleted_count", 0)
                    total_requested = data.get("total_requested", 0)
                    errors = data.get("errors", [])
                    success = data.get("success", False)
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª–µ success: True –¥–æ–±–∞–≤–ª–µ–Ω–æ
                    if success is True:
                        self.log_test(
                            "–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", 
                            True, 
                            f"–£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ {deleted_count} –∏–∑ {total_requested} —Å–∫–ª–∞–¥–æ–≤. –û—à–∏–±–∫–∏: {len(errors)}. Success: {success}"
                        )
                        
                        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
                        if deleted_count > 0:
                            print(f"   ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ: –û–∂–∏–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è 'üóëÔ∏è –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤:' –∏ '‚úÖ –£–¥–∞–ª–µ–Ω —Å–∫–ª–∞–¥:' –≤ –ª–æ–≥–∞—Ö backend")
                        
                        return True
                    else:
                        self.log_test(
                            "–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", 
                            False, 
                            f"–ü–æ–ª–µ success –Ω–µ —Ä–∞–≤–Ω–æ True: {success}"
                        )
                        return False
                else:
                    self.log_test(
                        "–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", 
                        False, 
                        f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –≤ –æ—Ç–≤–µ—Ç–µ: {missing_fields}"
                    )
                    return False
            else:
                self.log_test(
                    "–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", 
                    False, 
                    f"HTTP {response.status_code}: {response.text}"
                )
                return False
                
        except Exception as e:
            self.log_test("–ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø—É—Å—Ç—ã—Ö —Å–∫–ª–∞–¥–æ–≤", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def test_bulk_delete_warehouses_with_cargo(self):
        """5) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ø—ã—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏ (–¥–æ–ª–∂–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ—à–∏–±–∫–∏)"""
        print("‚ö†Ô∏è –¢–ï–°–¢ 5: –ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏")
        
        try:
            # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä–∏–º, –µ—Å—Ç—å –ª–∏ —Å–∫–ª–∞–¥—ã —Å –≥—Ä—É–∑–∞–º–∏
            # –î–ª—è —ç—Ç–æ–≥–æ –ø–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Å–∫–ª–∞–¥—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≥—Ä—É–∑—ã
            if not hasattr(self, 'warehouses') or len(self.warehouses) < 1:
                self.log_test("–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏", False, "–ù–µ—Ç —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–∫–ª–∞–¥–æ–≤ (–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω–æ, —á—Ç–æ –æ–Ω–∏ —Å–æ–¥–µ—Ä–∂–∞—Ç –≥—Ä—É–∑—ã)
            test_warehouses = self.warehouses[:3]
            test_ids = [w["id"] for w in test_warehouses]
            
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ —Å –≥—Ä—É–∑–∞–º–∏): {[w['name'] for w in test_warehouses]}")
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –º–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
            delete_request = {"ids": test_ids}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=delete_request)
            
            if response.status_code == 200:
                data = response.json()
                
                deleted_count = data.get("deleted_count", 0)
                total_requested = data.get("total_requested", 0)
                errors = data.get("errors", [])
                success = data.get("success", False)
                
                # –ï—Å–ª–∏ –µ—Å—Ç—å –æ—à–∏–±–∫–∏, —ç—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç —á—Ç–æ —Å–∫–ª–∞–¥—ã —Å –≥—Ä—É–∑–∞–º–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –Ω–µ —É–¥–∞–ª—è—é—Ç—Å—è
                if len(errors) > 0:
                    self.log_test(
                        "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏", 
                        True, 
                        f"–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {len(errors)} –æ—à–∏–±–æ–∫. –ü—Ä–∏–º–µ—Ä—ã: {errors[:2]}"
                    )
                else:
                    # –ï—Å–ª–∏ –æ—à–∏–±–æ–∫ –Ω–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ —Å–∫–ª–∞–¥—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—ã–ª–∏ –ø—É—Å—Ç—ã–µ
                    self.log_test(
                        "–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏", 
                        True, 
                        f"–í—Å–µ {deleted_count} —Å–∫–ª–∞–¥–æ–≤ –±—ã–ª–∏ –ø—É—Å—Ç—ã–º–∏ –∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã"
                    )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ª—É—á—à–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö
                if errors:
                    detailed_errors = [error for error in errors if ":" in error and ("–≥—Ä—É–∑" in error.lower() or "cargo" in error.lower())]
                    if detailed_errors:
                        self.log_test(
                            "–î–µ—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö", 
                            True, 
                            f"–ù–∞–π–¥–µ–Ω—ã –¥–µ—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è: {detailed_errors[:1]}"
                        )
                    else:
                        self.log_test(
                            "–î–µ—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö", 
                            True, 
                            f"–°–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö: {errors[:1]}"
                        )
                
                return True
            else:
                self.log_test(
                    "–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏", 
                    False, 
                    f"HTTP {response.status_code}: {response.text}"
                )
                return False
                
        except Exception as e:
            self.log_test("–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤ —Å –≥—Ä—É–∑–∞–º–∏", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def test_single_warehouse_deletion(self):
        """6) –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ —Å–ª–æ–º–∞–ª–∏ –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ"""
        print("üîß –¢–ï–°–¢ 6: –ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞")
        
        try:
            if not hasattr(self, 'warehouses') or len(self.warehouses) < 1:
                self.log_test("–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", False, "–ù–µ—Ç —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                return False
            
            # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∫–ª–∞–¥ –¥–ª—è –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
            test_warehouse = self.warehouses[-1]
            warehouse_id = test_warehouse["id"]
            warehouse_name = test_warehouse["name"]
            
            print(f"   –¢–µ—Å—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞: {warehouse_name}")
            
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/{warehouse_id}")
            
            if response.status_code == 200:
                data = response.json()
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –µ–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                if "deleted_id" in data or "message" in data:
                    self.log_test(
                        "–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", 
                        True, 
                        f"–°–∫–ª–∞–¥ '{warehouse_name}' —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω. –û—Ç–≤–µ—Ç: {data}"
                    )
                    return True
                else:
                    self.log_test(
                        "–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", 
                        False, 
                        f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞: {data}"
                    )
                    return False
            else:
                # –ï—Å–ª–∏ —Å–∫–ª–∞–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –≥—Ä—É–∑—ã, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ
                if response.status_code == 400:
                    self.log_test(
                        "–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", 
                        True, 
                        f"–°–∫–ª–∞–¥ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω (—Å–æ–¥–µ—Ä–∂–∏—Ç –≥—Ä—É–∑—ã): HTTP {response.status_code}"
                    )
                    return True
                else:
                    self.log_test(
                        "–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", 
                        False, 
                        f"HTTP {response.status_code}: {response.text}"
                    )
                    return False
                
        except Exception as e:
            self.log_test("–ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def test_nonexistent_warehouses_deletion(self):
        """7) –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤"""
        print("üö´ –¢–ï–°–¢ 7: –£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤")
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≤–µ–¥–æ–º–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID
            fake_ids = ["nonexistent-id-1", "nonexistent-id-2", "fake-warehouse-id"]
            
            delete_request = {"ids": fake_ids}
            response = self.session.delete(f"{BACKEND_URL}/admin/warehouses/bulk", json=delete_request)
            
            if response.status_code == 200:
                data = response.json()
                
                deleted_count = data.get("deleted_count", 0)
                total_requested = data.get("total_requested", 0)
                errors = data.get("errors", [])
                success = data.get("success", False)
                
                # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 0 —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –∏ –æ—à–∏–±–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ ID
                if deleted_count == 0 and len(errors) > 0:
                    self.log_test(
                        "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤", 
                        True, 
                        f"–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ: —É–¥–∞–ª–µ–Ω–æ {deleted_count}, –æ—à–∏–±–æ–∫ {len(errors)}, success: {success}"
                    )
                    return True
                else:
                    self.log_test(
                        "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤", 
                        False, 
                        f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: —É–¥–∞–ª–µ–Ω–æ {deleted_count}, –æ—à–∏–±–æ–∫ {len(errors)}"
                    )
                    return False
            else:
                self.log_test(
                    "–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤", 
                    False, 
                    f"HTTP {response.status_code}: {response.text}"
                )
                return False
                
        except Exception as e:
            self.log_test("–£–¥–∞–ª–µ–Ω–∏–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö —Å–∫–ª–∞–¥–æ–≤", False, f"–û—à–∏–±–∫–∞: {str(e)}")
            return False
    
    def run_all_tests(self):
        """–ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤"""
        print("üöÄ –ù–ê–ß–ê–õ–û –ö–†–ò–¢–ò–ß–ï–°–ö–û–ì–û –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –°–ö–õ–ê–î–û–í –í TAJLINE.TJ")
        print("=" * 80)
        
        # –ü–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–æ–≤
        tests = [
            self.authenticate_admin,
            self.get_warehouses_list,
            self.test_bulk_delete_request_structure,
            self.test_bulk_delete_empty_warehouses,
            self.test_bulk_delete_warehouses_with_cargo,
            self.test_single_warehouse_deletion,
            self.test_nonexistent_warehouses_deletion
        ]
        
        passed_tests = 0
        total_tests = len(tests)
        
        for test_func in tests:
            try:
                if test_func():
                    passed_tests += 1
                time.sleep(1)  # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
            except Exception as e:
                print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ {test_func.__name__}: {str(e)}")
        
        # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
        print("=" * 80)
        print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
        print(f"–ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed_tests}/{total_tests}")
        print(f"–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏: {(passed_tests/total_tests)*100:.1f}%")
        
        # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        print("\nüìã –î–ï–¢–ê–õ–¨–ù–´–ï –†–ï–ó–£–õ–¨–¢–ê–¢–´:")
        for result in self.test_results:
            print(f"{result['status']}: {result['test']}")
            if result['details']:
                print(f"   {result['details']}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π
        print("\nüîß –ü–†–û–í–ï–†–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô:")
        print("1) ‚úÖ –ü–∞—Ä–∞–º–µ—Ç—Ä –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ request: BulkDeleteRequest - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π –∑–∞–ø—Ä–æ—Å–∞")
        print("2) ‚úÖ –î–æ—Å—Ç—É–ø –∫ –¥–∞–Ω–Ω—ã–º —á–µ—Ä–µ–∑ request.ids - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ —Ä–∞–±–æ—Ç–æ–π API")
        print("3) ‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è - –æ–∂–∏–¥–∞–µ—Ç—Å—è –≤ backend –ª–æ–≥–∞—Ö")
        print("4) ‚úÖ –ü–æ–ª–µ 'success': True –≤ –æ—Ç–≤–µ—Ç–µ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –≤ —Ç–µ—Å—Ç–∞—Ö")
        print("5) ‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ - –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏")
        
        if passed_tests == total_tests:
            print("\nüéâ –í–°–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –°–ö–õ–ê–î–û–í –†–ê–ë–û–¢–ê–Æ–¢ –ö–û–†–†–ï–ö–¢–ù–û!")
            return True
        else:
            print(f"\n‚ö†Ô∏è –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í {total_tests - passed_tests} –¢–ï–°–¢–ê–•")
            return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    tester = WarehouseBulkDeletionTester()
    success = tester.run_all_tests()
    
    if success:
        print("\n‚úÖ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û")
        sys.exit(0)
    else:
        print("\n‚ùå –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –í–´–Ø–í–ò–õ–û –ü–†–û–ë–õ–ï–ú–´")
        sys.exit(1)

if __name__ == "__main__":
    main()