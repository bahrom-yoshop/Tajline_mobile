#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø—Ä–æ–±–ª–µ–º—ã –¥–∞–Ω–Ω—ã—Ö –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–±–æ—Ä –≥—Ä—É–∑–∞ TAJLINE.TJ
"""

import requests
import json

def test_pickup_request_100040():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞—è–≤–∫–∏ 100040 –Ω–∞ –ø—Ä–µ–¥–º–µ—Ç –¥–∞–Ω–Ω—ã—Ö –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–∞"""
    base_url = "https://cargo-qr-system.preview.emergentagent.com"
    
    print("üöö –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú–´ –î–ê–ù–ù–´–• –ü–õ–ï–ô–°–•–û–õ–î–ï–†–ê –í –ú–û–î–ê–õ–¨–ù–û–ú –û–ö–ù–ï –ó–ê–Ø–í–ö–ò –ù–ê –ó–ê–ë–û–† –ì–†–£–ó–ê")
    print("="*80)
    
    # 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞
    print("\nüîê –≠–¢–ê–ü 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ (+79777888999/warehouse123)")
    
    login_data = {
        "phone": "+79777888999",
        "password": "warehouse123"
    }
    
    response = requests.post(f"{base_url}/api/auth/login", json=login_data)
    
    if response.status_code == 200:
        login_result = response.json()
        token = login_result.get('access_token')
        user = login_result.get('user', {})
        
        print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {user.get('full_name')}")
        print(f"üëë –†–æ–ª—å: {user.get('role')}")
        print(f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {user.get('phone')}")
        print(f"üÜî –ù–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {user.get('user_number')}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        return False
    
    # 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—è–≤–∫–∏ 100040
    print(f"\nüìã –≠–¢–ê–ü 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ endpoint GET /api/operator/pickup-requests/100040")
    
    headers = {
        'Authorization': f'Bearer {token}',
        'Content-Type': 'application/json'
    }
    
    response = requests.get(f"{base_url}/api/operator/pickup-requests/100040", headers=headers)
    
    if response.status_code == 200:
        request_data = response.json()
        print("‚úÖ Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print(f"\nüìÑ –ü–û–õ–ù–´–ï –î–ê–ù–ù–´–ï –ó–ê–Ø–í–ö–ò 100040:")
        print(json.dumps(request_data, indent=2, ensure_ascii=False))
        
        # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—É—á–∞—Ç–µ–ª—è
        print(f"\nüéØ –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ü–û–õ–£–ß–ê–¢–ï–õ–Ø:")
        recipient_data = request_data.get('recipient_data', {})
        
        if recipient_data:
            print("‚úÖ recipient_data –Ω–∞–π–¥–µ–Ω—ã:")
            
            recipient_fields = ['recipient_full_name', 'recipient_phone', 'recipient_address']
            filled_count = 0
            
            for field in recipient_fields:
                value = recipient_data.get(field, '')
                if value and str(value).strip() and str(value).strip() not in ['', 'null', 'None', 'undefined']:
                    filled_count += 1
                    print(f"  ‚úÖ {field}: '{value}' (–ó–ê–ü–û–õ–ù–ï–ù–û)")
                else:
                    print(f"  ‚ùå {field}: '{value}' (–ü–£–°–¢–û–ï/–ü–õ–ï–ô–°–•–û–õ–î–ï–†)")
            
            print(f"\nüìä –†–ï–ó–£–õ–¨–¢–ê–¢: {filled_count}/{len(recipient_fields)} –ø–æ–ª–µ–π –∑–∞–ø–æ–ª–Ω–µ–Ω–æ")
            
            if filled_count == len(recipient_fields):
                print("üéâ –í–°–ï –î–ê–ù–ù–´–ï –ü–û–õ–£–ß–ê–¢–ï–õ–Ø –ó–ê–ü–û–õ–ù–ï–ù–´ - –ü–†–û–ë–õ–ï–ú–ê –ù–ï –í –î–ê–ù–ù–´–•!")
                print("üîç –ü—Ä–æ–±–ª–µ–º–∞ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤ frontend –∫–æ–¥–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞")
                print("üí° –†–ï–ö–û–ú–ï–ù–î–ê–¶–ò–Ø: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–∞–∫ frontend –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç recipient_data")
            elif filled_count > 0:
                print("‚ö†Ô∏è  –î–ê–ù–ù–´–ï –ü–û–õ–£–ß–ê–¢–ï–õ–Ø –ó–ê–ü–û–õ–ù–ï–ù–´ –ß–ê–°–¢–ò–ß–ù–û")
                print("üîç –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ–ª—è –ø—É—Å—Ç—ã–µ - —ç—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—Ä–∏—á–∏–Ω–æ–π –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–≤")
            else:
                print("‚ùå –í–°–ï –î–ê–ù–ù–´–ï –ü–û–õ–£–ß–ê–¢–ï–õ–Ø –ü–£–°–¢–´–ï - –≠–¢–û –ü–†–ò–ß–ò–ù–ê –ü–õ–ï–ô–°–•–û–õ–î–ï–†–û–í!")
                print("üîç –ö—É—Ä—å–µ—Ä –Ω–µ –∑–∞–ø–æ–ª–Ω–∏–ª –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏–ª–∏ –æ–Ω–∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏–ª–∏—Å—å")
        else:
            print("‚ùå recipient_data –û–¢–°–£–¢–°–¢–í–£–Æ–¢ - –≠–¢–û –ü–†–ò–ß–ò–ù–ê –ü–õ–ï–ô–°–•–û–õ–î–ï–†–û–í!")
            print("üîç Endpoint –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
        
        # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–∑–∞
        print(f"\nüéØ –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –ì–†–£–ó–ê:")
        cargo_info = request_data.get('cargo_info', {})
        
        if cargo_info:
            print("‚úÖ cargo_info –Ω–∞–π–¥–µ–Ω—ã:")
            for key, value in cargo_info.items():
                print(f"  {key}: {value}")
        else:
            print("‚ùå cargo_info –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        # –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        print(f"\nüéØ –ê–ù–ê–õ–ò–ó –î–ê–ù–ù–´–• –û–¢–ü–†–ê–í–ò–¢–ï–õ–Ø:")
        sender_data = request_data.get('sender_data', {})
        
        if sender_data:
            print("‚úÖ sender_data –Ω–∞–π–¥–µ–Ω—ã:")
            for key, value in sender_data.items():
                print(f"  {key}: {value}")
        else:
            print("‚ùå sender_data –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        
        return True
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞—è–≤–∫–∏: {response.status_code}")
        try:
            error_data = response.json()
            print(f"üìÑ –û—à–∏–±–∫–∞: {error_data}")
        except:
            print(f"üìÑ –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {response.text}")
        return False

if __name__ == "__main__":
    test_pickup_request_100040()