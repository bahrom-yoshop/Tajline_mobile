#!/usr/bin/env python3
"""
üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞—è–≤–∫–æ–π 250109 –≤ fully-placed endpoint

–û–ë–ù–ê–†–£–ñ–ï–ù–ù–ê–Ø –ü–†–û–ë–õ–ï–ú–ê:
- –ó–∞—è–≤–∫–∞ 250109 –∏–º–µ–µ—Ç 5/5 –µ–¥–∏–Ω–∏—Ü –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö
- –ù–æ –æ–Ω–∞ –ù–ï –ø–æ—è–≤–ª—è–µ—Ç—Å—è –≤ /api/operator/cargo/fully-placed endpoint
- –≠—Ç–æ —Ç–æ—á–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–±–ª–µ–º—ã –≤ review request

–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –°–¢–†–£–ö–¢–£–†–´ –î–ê–ù–ù–´–•:
- individual-units-for-placement –Ω–∞—Ö–æ–¥–∏—Ç –¥–∞–Ω–Ω—ã–µ –≤ cargo_items[].individual_items
- fully-placed –∏—â–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ cargo.individual_items (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ)
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = 'https://cargo-sync.preview.emergentagent.com'
API_BASE = f"{BACKEND_URL}/api"

def authenticate():
    response = requests.post(f"{API_BASE}/auth/login", 
                           json={'phone': '+79777888999', 'password': 'warehouse123'})
    if response.status_code == 200:
        return response.json()['access_token']
    return None

def main():
    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–±–ª–µ–º–∞ fully-placed endpoint")
    print("=" * 70)
    
    token = authenticate()
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return
    
    headers = {'Authorization': f'Bearer {token}'}
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º individual-units-for-placement
    print("\nüìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê 1: individual-units-for-placement endpoint")
    response = requests.get(f"{API_BASE}/operator/cargo/individual-units-for-placement", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        groups = data.get('items', [])
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(groups)} –≥—Ä—É–ø–ø –∑–∞—è–≤–æ–∫")
        
        total_units = 0
        total_placed = 0
        
        for i, group in enumerate(groups):
            units = group.get('units', [])
            group_total = len(units)
            group_placed = sum(1 for unit in units if unit.get('is_placed', False))
            
            total_units += group_total
            total_placed += group_placed
            
            print(f"  –ì—Ä—É–ø–ø–∞ {i+1}: {group_placed}/{group_total} –µ–¥–∏–Ω–∏—Ü —Ä–∞–∑–º–µ—â–µ–Ω–æ")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –¥–ª—è –∑–∞—è–≤–∫–∏ 250109
            for unit in units:
                individual_number = unit.get('individual_number', '')
                if '250109' in individual_number:
                    is_placed = unit.get('is_placed', False)
                    placement_info = unit.get('placement_info', '')
                    status = "‚úÖ –†–∞–∑–º–µ—â–µ–Ω" if is_placed else "üü° –û–∂–∏–¥–∞–µ—Ç"
                    print(f"    üìç {individual_number}: {status} ({placement_info})")
        
        print(f"üìä –ò–¢–û–ì–û: {total_placed}/{total_units} –µ–¥–∏–Ω–∏—Ü —Ä–∞–∑–º–µ—â–µ–Ω–æ")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–µ –∑–∞—è–≤–∫–∏
        fully_placed_count = 0
        for group in groups:
            units = group.get('units', [])
            if units:
                group_total = len(units)
                group_placed = sum(1 for unit in units if unit.get('is_placed', False))
                if group_placed == group_total:
                    fully_placed_count += 1
        
        print(f"üéØ –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ó–ú–ï–©–ï–ù–ù–´–• –ó–ê–Ø–í–û–ö: {fully_placed_count}")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º fully-placed endpoint
    print("\nüìä –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê 2: fully-placed endpoint")
    response = requests.get(f"{API_BASE}/operator/cargo/fully-placed", headers=headers)
    
    if response.status_code == 200:
        data = response.json()
        items = data.get('items', [])
        summary = data.get('summary', {})
        
        print(f"‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫: {len(items)}")
        print(f"üìä Summary: {summary}")
        
        if items:
            for item in items:
                app_num = item.get('application_number', item.get('cargo_number', 'N/A'))
                placed_units = item.get('placed_units', 0)
                total_units = item.get('total_units', 0)
                print(f"  üì¶ –ó–∞—è–≤–∫–∞ {app_num}: {placed_units}/{total_units}")
        else:
            print("  ‚ùå –ù–ï–¢ –ü–û–õ–ù–û–°–¢–¨–Æ –†–ê–ó–ú–ï–©–ï–ù–ù–´–• –ó–ê–Ø–í–û–ö")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code}")
    
    # 3. –í—ã–≤–æ–¥—ã
    print("\n" + "=" * 70)
    print("üîç –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –í–´–í–û–î–´:")
    print("=" * 70)
    
    print("‚úÖ –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: individual-units-for-placement –Ω–∞—Ö–æ–¥–∏—Ç –∑–∞—è–≤–∫—É 250109 —Å 5/5 —Ä–∞–∑–º–µ—â–µ–Ω–Ω—ã–º–∏ –µ–¥–∏–Ω–∏—Ü–∞–º–∏")
    print("‚ùå –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–û: fully-placed –ù–ï –Ω–∞—Ö–æ–¥–∏—Ç —ç—Ç—É –∂–µ –∑–∞—è–≤–∫—É")
    print("üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: –õ–æ–≥–∏–∫–∞ fully-placed endpoint –ù–ï–ò–°–ü–†–ê–í–ù–ê")
    print("")
    print("üìã –¢–ï–•–ù–ò–ß–ï–°–ö–ê–Ø –ü–†–ò–ß–ò–ù–ê:")
    print("   - individual-units-for-placement –∏—â–µ—Ç –≤ cargo_items[].individual_items")
    print("   - fully-placed –∏—â–µ—Ç –≤ cargo.individual_items (–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)")
    print("")
    print("üîß –¢–†–ï–ë–£–ï–¢–°–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï:")
    print("   - –ò—Å–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –≤ /api/operator/cargo/fully-placed")
    print("   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö cargo_items[].individual_items")
    print("   - –û–±–µ—Å–ø–µ—á–∏—Ç—å –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å –º–µ–∂–¥—É endpoints")

if __name__ == "__main__":
    main()