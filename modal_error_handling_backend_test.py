#!/usr/bin/env python3
"""
üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ TAJLINE.TJ

–ü–†–û–ë–õ–ï–ú–ê: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–æ–±—â–∞–µ—Ç, —á—Ç–æ –º–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –ø—Ä–∏:
- –í—Ö–æ–¥–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
- –í–≤–æ–¥–µ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è –∏–ª–∏ –ª–æ–≥–∏–Ω–∞

–ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–†–ò–ú–ï–ù–ï–ù–´:
1. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è apiCall –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—à–∏–±–æ–∫ (error.status, error.detail, error.response)
2. ‚úÖ –û—Ç–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π alert –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ 
3. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ handleLogin –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
4. ‚úÖ –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π error.status –∏ error.detail.error_type

–ù–û–í–ê–Ø –õ–û–ì–ò–ö–ê –û–ë–†–ê–ë–û–¢–ö–ò –û–®–ò–ë–û–ö:
1. apiCall —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ—Ç enhancedError —Å –ø–æ–ª—è–º–∏: status, detail, response
2. –î–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401/403 —Å error_type) alert –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è
3. handleLogin –ø—Ä–æ–≤–µ—Ä—è–µ—Ç error.status –∏ error.detail.error_type –¥–ª—è –ø–æ–∫–∞–∑–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞

–ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:
1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫–∞–∑–∞ loginErrorModal
2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º ‚Üí –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–∫–∞–∑–∞ loginErrorModal  
3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ frontend
4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö alert'–æ–≤ –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫
5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª–∏ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏

–û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ —Ç–µ–ø–µ—Ä—å –¥–æ–ª–∂–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤–º–µ—Å—Ç–æ –ø—Ä–æ—Å—Ç—ã—Ö alert'–æ–≤.
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://tajline-cargo-5.preview.emergentagent.com/api"

def test_modal_error_handling():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    print("üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ —Å –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ TAJLINE.TJ")
    print("=" * 100)
    
    test_results = []
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –û–®–ò–ë–ö–ò –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê - –ù–ï–°–£–©–ï–°–¢–í–£–Æ–©–ò–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨")
    print("-" * 80)
    
    try:
        non_existent_phone = "+79999999999"  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä
        login_data = {
            "phone": non_existent_phone,
            "password": "anypassword123"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {non_existent_phone}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            error_data = response.json()
            detail = error_data.get('detail', {})
            
            print(f"‚úÖ HTTP 401 - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞")
            print(f"üîç error_type: {detail.get('error_type')}")
            print(f"üí¨ message: {detail.get('message')}")
            print(f"üìù details: {detail.get('details')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modal_required_fields = ['error_type', 'message', 'details']
            missing_fields = [field for field in modal_required_fields if not detail.get(field)]
            
            if detail.get('error_type') == 'user_not_found' and not missing_fields:
                print("‚úÖ –°–¢–†–£–ö–¢–£–†–ê –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –ö–û–†–†–ï–ö–¢–ù–ê")
                print("‚úÖ Frontend –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å loginErrorModal –≤–º–µ—Å—Ç–æ alert")
                test_results.append(("modal_user_not_found", True, "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞"))
            else:
                print(f"‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ü–û–õ–Ø –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê: {missing_fields}")
                test_results.append(("modal_user_not_found", False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}"))
        else:
            print(f"‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô HTTP –°–¢–ê–¢–£–°: {response.status_code}")
            test_results.append(("modal_user_not_found", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 401"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        test_results.append(("modal_user_not_found", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—à–∏–±–∫–∏ –¥–ª—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è
    print("\n2Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –û–®–ò–ë–ö–ò –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê - –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô –ü–ê–†–û–õ–¨")
    print("-" * 80)
    
    try:
        existing_phone = "+79999888777"  # –°—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä
        login_data = {
            "phone": existing_phone,
            "password": "wrong_password_for_modal_test"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {existing_phone}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            error_data = response.json()
            detail = error_data.get('detail', {})
            
            print(f"‚úÖ HTTP 401 - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞")
            print(f"üîç error_type: {detail.get('error_type')}")
            print(f"üí¨ message: {detail.get('message')}")
            print(f"üìù details: {detail.get('details')}")
            print(f"üë§ user_role: {detail.get('user_role')}")
            print(f"üë®‚Äçüíº user_name: {detail.get('user_name')}")
            print(f"üì± user_phone: {detail.get('user_phone')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
            modal_required_fields = ['error_type', 'message', 'details', 'user_role', 'user_name', 'user_phone']
            missing_fields = [field for field in modal_required_fields if not detail.get(field)]
            
            if detail.get('error_type') == 'wrong_password' and not missing_fields:
                print("‚úÖ –°–¢–†–£–ö–¢–£–†–ê –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –ö–û–†–†–ï–ö–¢–ù–ê")
                print("‚úÖ Frontend –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å loginErrorModal —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ")
                test_results.append(("modal_wrong_password", True, "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞"))
            else:
                print(f"‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ü–û–õ–Ø –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê: {missing_fields}")
                test_results.append(("modal_wrong_password", False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}"))
        else:
            print(f"‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–´–ô HTTP –°–¢–ê–¢–£–°: {response.status_code}")
            test_results.append(("modal_wrong_password", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 401"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        test_results.append(("modal_wrong_password", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—à–∏–±–∫–∏ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    print("\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–¢–†–£–ö–¢–£–†–´ –û–®–ò–ë–ö–ò –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê - –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–´–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨")
    print("-" * 80)
    
    try:
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π
        blocked_phone = "+79999999998"  # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä
        login_data = {
            "phone": blocked_phone,
            "password": "anypassword"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {blocked_phone}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 403:
            error_data = response.json()
            detail = error_data.get('detail', {})
            
            print(f"‚úÖ HTTP 403 - –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            print(f"üîç error_type: {detail.get('error_type')}")
            print(f"üí¨ status_message: {detail.get('status_message')}")
            print(f"üìù status_details: {detail.get('status_details')}")
            print(f"üë§ user_role: {detail.get('user_role')}")
            print(f"üë®‚Äçüíº user_name: {detail.get('user_name')}")
            print(f"üì± user_phone: {detail.get('user_phone')}")
            print(f"üóëÔ∏è is_deleted: {detail.get('is_deleted')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            modal_required_fields = ['error_type', 'status_message', 'status_details', 'user_role', 'user_name', 'user_phone']
            missing_fields = [field for field in modal_required_fields if not detail.get(field)]
            
            if detail.get('error_type') == 'account_disabled' and not missing_fields:
                print("‚úÖ –°–¢–†–£–ö–¢–£–†–ê –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–ù–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø –ö–û–†–†–ï–ö–¢–ù–ê")
                print("‚úÖ Frontend –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑–∞—Ç—å —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
                test_results.append(("modal_blocked_user", True, "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—à–∏–±–∫–∏ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞"))
            else:
                print(f"‚ùå –û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ü–û–õ–Ø –î–õ–Ø –ú–û–î–ê–õ–¨–ù–û–ì–û –û–ö–ù–ê: {missing_fields}")
                test_results.append(("modal_blocked_user", False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}"))
        else:
            print("‚ÑπÔ∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω - —Ç–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω")
            test_results.append(("modal_blocked_user", "NA", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"))
            
    except Exception as e:
        print(f"‚ÑπÔ∏è –¢–µ—Å—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–ø—É—â–µ–Ω: {e}")
        test_results.append(("modal_blocked_user", "NA", f"–¢–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω: {e}"))
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ù–ï –≤—ã–∑—ã–≤–∞–µ—Ç –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—à–∏–±–∫–∏
    print("\n4Ô∏è‚É£ –ö–û–ù–¢–†–û–õ–¨–ù–´–ô –¢–ï–°–¢: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –ù–ï –¥–æ–ª–∂–µ–Ω –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—à–∏–±–∫–∏")
    print("-" * 80)
    
    try:
        admin_credentials = {
            "phone": "+79999888777",
            "password": "admin123"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=admin_credentials)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {admin_credentials['phone']}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            user_info = data.get('user', {})
            
            print(f"‚úÖ HTTP 200 - —É—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('full_name')}")
            print(f"üé≠ –†–æ–ª—å: {user_info.get('role')}")
            print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {'access_token' in data}")
            print("‚úÖ –ù–ï–¢ error_type - –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –æ—à–∏–±–∫–∏ –ù–ï –¥–æ–ª–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ù–ï–¢ –ø–æ–ª–µ–π –æ—à–∏–±–∫–∏
            has_error_fields = any(key in data for key in ['error_type', 'detail'])
            
            if not has_error_fields:
                print("‚úÖ –ö–û–†–†–ï–ö–¢–ù–û: –ù–µ—Ç –ø–æ–ª–µ–π –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ")
                test_results.append(("no_modal_on_success", True, "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –Ω–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª–µ–π –æ—à–∏–±–∫–∏"))
            else:
                print("‚ùå –û–®–ò–ë–ö–ê: –ü—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è –æ—à–∏–±–∫–∏ –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤—Ö–æ–¥–µ")
                test_results.append(("no_modal_on_success", False, "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø–æ–ª—è –æ—à–∏–±–∫–∏"))
        else:
            print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô HTTP –°–¢–ê–¢–£–°: {response.status_code}")
            test_results.append(("no_modal_on_success", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 200"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–¢–†–û–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê: {e}")
        test_results.append(("no_modal_on_success", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã enhancedError –¥–ª—è frontend
    print("\n5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–ù–û–ô –°–¢–†–£–ö–¢–£–†–´ enhancedError –î–õ–Ø FRONTEND")
    print("-" * 80)
    
    try:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—à–∏–±–∫–∏
        test_data = {
            "phone": "+79999888777",
            "password": "wrong_password_for_enhanced_error_test"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=test_data)
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìã Headers: {dict(response.headers)}")
        
        if response.status_code == 401:
            error_data = response.json()
            
            print("üîç –ü–û–õ–ù–ê–Ø –°–¢–†–£–ö–¢–£–†–ê –û–®–ò–ë–ö–ò –î–õ–Ø enhancedError:")
            print(f"   - HTTP Status: {response.status_code}")
            print(f"   - Response Body: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ frontend –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å enhancedError —Å –ø–æ–ª—è–º–∏:
            # error.status, error.detail, error.response
            detail = error_data.get('detail', {})
            
            enhanced_error_fields = {
                'status': response.status_code,  # HTTP —Å—Ç–∞—Ç—É—Å
                'detail': detail,  # –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
                'response': error_data  # –ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç
            }
            
            print("\n‚úÖ –°–¢–†–£–ö–¢–£–†–ê enhancedError –î–õ–Ø FRONTEND:")
            print(f"   - error.status: {enhanced_error_fields['status']}")
            print(f"   - error.detail.error_type: {enhanced_error_fields['detail'].get('error_type')}")
            print(f"   - error.detail.message: {enhanced_error_fields['detail'].get('message')}")
            print(f"   - error.response: {type(enhanced_error_fields['response'])}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –ø–æ–ª—è –¥–ª—è handleLogin
            if (enhanced_error_fields['status'] in [401, 403] and 
                enhanced_error_fields['detail'].get('error_type') in ['user_not_found', 'wrong_password', 'account_disabled']):
                print("‚úÖ –°–¢–†–£–ö–¢–£–†–ê enhancedError –ü–û–î–•–û–î–ò–¢ –î–õ–Ø handleLogin")
                print("‚úÖ Frontend –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å error.status –∏ error.detail.error_type")
                print("‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ –≤–º–µ—Å—Ç–æ alert")
                test_results.append(("enhanced_error_structure", True, "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ enhancedError –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"))
            else:
                print("‚ùå –°–¢–†–£–ö–¢–£–†–ê enhancedError –ù–ï –ü–û–î–•–û–î–ò–¢ –î–õ–Ø handleLogin")
                test_results.append(("enhanced_error_structure", False, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ enhancedError"))
        else:
            print(f"‚ùå –ù–ï–û–ñ–ò–î–ê–ù–ù–´–ô HTTP –°–¢–ê–¢–£–°: {response.status_code}")
            test_results.append(("enhanced_error_structure", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 401"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        test_results.append(("enhanced_error_structure", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 100)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ú–û–î–ê–õ–¨–ù–´–• –û–ö–û–ù –û–®–ò–ë–û–ö –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò")
    print("=" * 100)
    
    passed_tests = sum(1 for _, result, _ in test_results if result is True)
    failed_tests = sum(1 for _, result, _ in test_results if result is False)
    na_tests = sum(1 for _, result, _ in test_results if result == "NA")
    total_tests = len(test_results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {failed_tests}")
    print(f"‚ÑπÔ∏è –ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ: {na_tests}")
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed_tests / (total_tests - na_tests) * 100):.1f}%" if (total_tests - na_tests) > 0 else "N/A")
    
    print("\n–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for test_name, result, comment in test_results:
        status_icon = "‚úÖ" if result is True else "‚ùå" if result is False else "‚ÑπÔ∏è"
        print(f"{status_icon} {test_name}: {comment}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
    critical_tests = ["modal_user_not_found", "modal_wrong_password", "enhanced_error_structure"]
    critical_passed = all(result is True for test_name, result, _ in test_results if test_name in critical_tests)
    
    print("\n" + "=" * 100)
    print("üéØ –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï –ü–û –ü–†–û–ë–õ–ï–ú–ï –° –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò")
    print("=" * 100)
    
    if critical_passed:
        print("üéâ –ü–†–û–ë–õ–ï–ú–ê –° –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò –†–ï–®–ï–ù–ê!")
        print("‚úÖ Backend –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—à–∏–±–æ–∫ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω")
        print("‚úÖ enhancedError —Å–æ–¥–µ—Ä–∂–∏—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–æ–ª—è (status, detail, response)")
        print("‚úÖ handleLogin –º–æ–∂–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å error.status –∏ error.detail.error_type")
        print("‚úÖ –ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –±—É–¥—É—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–æ alert'–æ–≤")
        print("\nüîß –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢:")
        print("   1. ‚úÖ apiCall –ø–µ—Ä–µ–¥–∞–µ—Ç –ø–æ–ª–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—à–∏–±–æ–∫")
        print("   2. ‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—à–∏–±–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–µ –≤—ã–∑—ã–≤–∞—é—Ç alert")
        print("   3. ‚úÖ handleLogin –ø–æ–ª—É—á–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω")
        print("   4. ‚úÖ error.status –∏ error.detail.error_type –¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
        return True
    else:
        print("üö® –ü–†–û–ë–õ–ï–ú–ê –° –ú–û–î–ê–õ–¨–ù–´–ú–ò –û–ö–ù–ê–ú–ò –ù–ï –†–ï–®–ï–ù–ê!")
        print("‚ùå Backend –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—à–∏–±–æ–∫")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –Ω–∞–¥ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏")
        return False

if __name__ == "__main__":
    success = test_modal_error_handling()
    sys.exit(0 if success else 1)