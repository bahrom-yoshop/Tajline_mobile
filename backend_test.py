#!/usr/bin/env python3
"""
üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ TAJLINE.TJ

–ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:
1. Backend: –£–ª—É—á—à–µ–Ω endpoint /api/auth/login –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
2. Backend: –†–∞–∑–¥–µ–ª–µ–Ω—ã –æ—à–∏–±–∫–∏ –Ω–∞ "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω" (HTTP 401, user_not_found) –∏ "–Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å" (HTTP 401, wrong_password)
3. Frontend: –î–æ–±–∞–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ loginErrorModal –∏ loginErrorData –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—à–∏–±–æ–∫
4. Frontend: –û–±–Ω–æ–≤–ª–µ–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è handleLogin –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
5. Frontend: –°–æ–∑–¥–∞–Ω–æ –∫—Ä–∞—Å–∏–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± –æ—à–∏–±–∫–∞—Ö –≤—Ö–æ–¥–∞

–¢–ò–ü–´ –û–®–ò–ë–û–ö –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:
1. user_not_found - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω
2. wrong_password - –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
3. account_disabled - –∞–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω/—É–¥–∞–ª–µ–Ω (—É–∂–µ –±—ã–ª–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)

–°–¢–†–£–ö–¢–£–†–ê –î–ê–ù–ù–´–• –û–®–ò–ë–û–ö:
- error_type: —Ç–∏–ø –æ—à–∏–±–∫–∏ (user_not_found, wrong_password)
- message: –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
- details: –¥–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- user_role, user_name, user_phone: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ (–¥–ª—è wrong_password)
- phone_format: –ø–æ–¥—Å–∫–∞–∑–∫–∞ –æ —Ñ–æ—Ä–º–∞—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
- password_requirements: —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é
- available_actions: —Å–ø–∏—Å–æ–∫ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π

–¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:
1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚Üí –¥–æ–ª–∂–Ω–∞ –ø–æ–∫–∞–∑–∞—Ç—å—Å—è –æ—à–∏–±–∫–∞ "user_not_found"
2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–∞ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º, –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º ‚Üí –æ—à–∏–±–∫–∞ "wrong_password"
3. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–æ–≤ –∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (admin, operator, courier, user)
5. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://550bba2e-5014-4d23-b2e8-7c38c4ea5482.preview.emergentagent.com/api"

def test_login_error_messages():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏"""
    
    print("üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ TAJLINE.TJ")
    print("=" * 100)
    
    test_results = []
    
    # –¢–µ—Å—Ç 1: –í—Ö–æ–¥ —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    print("\n1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–ö–ò 'user_not_found'")
    print("-" * 50)
    
    try:
        non_existent_phone = "+79999999999"  # –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä
        login_data = {
            "phone": non_existent_phone,
            "password": "anypassword123"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {non_existent_phone}")
        print(f"üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –ø–∞—Ä–æ–ª—å: {login_data['password']}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 401:
            error_data = response.json()
            detail = error_data.get('detail', {})
            
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: 401 Unauthorized")
            print(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {detail.get('error_type')}")
            print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {detail.get('message')}")
            print(f"üìù –î–µ—Ç–∞–ª–∏: {detail.get('details')}")
            print(f"üì± –§–æ—Ä–º–∞—Ç —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {detail.get('phone_format')}")
            print(f"üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: {detail.get('available_actions')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
            expected_fields = ['error_type', 'message', 'details', 'phone_format', 'available_actions']
            missing_fields = [field for field in expected_fields if field not in detail]
            
            if detail.get('error_type') == 'user_not_found' and not missing_fields:
                print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û—à–∏–±–∫–∞ 'user_not_found' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                test_results.append(("user_not_found", True, "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∏ —Ç–∏–ø –æ—à–∏–±–∫–∏"))
            else:
                print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
                test_results.append(("user_not_found", False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}"))
        else:
            print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            test_results.append(("user_not_found", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 401"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
        test_results.append(("user_not_found", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 2: –ù–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è wrong_password
    print("\n2Ô∏è‚É£ –ü–û–ò–°–ö –°–£–©–ï–°–¢–í–£–Æ–©–ï–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø")
    print("-" * 50)
    
    existing_user = None
    test_users = [
        {"phone": "+79999888777", "role": "admin"},
        {"phone": "+79777888999", "role": "warehouse_operator"},
        {"phone": "+79991234567", "role": "courier"},
        {"phone": "+79123456789", "role": "user"}
    ]
    
    for test_user in test_users:
        try:
            # –ü—Ä–æ–±—É–µ–º –≤–æ–π—Ç–∏ —Å –∑–∞–≤–µ–¥–æ–º–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
            login_data = {
                "phone": test_user["phone"],
                "password": "wrong_password_123"
            }
            
            response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
            
            if response.status_code == 401:
                error_data = response.json()
                detail = error_data.get('detail', {})
                
                if detail.get('error_type') == 'wrong_password':
                    existing_user = test_user
                    print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user['phone']} (—Ä–æ–ª—å: {test_user['role']})")
                    break
                    
        except Exception as e:
            continue
    
    if not existing_user:
        print("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è wrong_password")
        test_results.append(("wrong_password", False, "–ù–µ –Ω–∞–π–¥–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"))
    else:
        # –¢–µ—Å—Ç 3: –í—Ö–æ–¥ —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º –Ω–æ–º–µ—Ä–æ–º, –Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –ø–∞—Ä–æ–ª–µ–º
        print("\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–ö–ò 'wrong_password'")
        print("-" * 50)
        
        try:
            login_data = {
                "phone": existing_user["phone"],
                "password": "definitely_wrong_password_123"
            }
            
            response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
            print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {existing_user['phone']}")
            print(f"üîê –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –ø–∞—Ä–æ–ª—å: {login_data['password']}")
            print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 401:
                error_data = response.json()
                detail = error_data.get('detail', {})
                
                print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: 401 Unauthorized")
                print(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {detail.get('error_type')}")
                print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {detail.get('message')}")
                print(f"üìù –î–µ—Ç–∞–ª–∏: {detail.get('details')}")
                print(f"üë§ –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {detail.get('user_role')}")
                print(f"üë®‚Äçüíº –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {detail.get('user_name')}")
                print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {detail.get('user_phone')}")
                print(f"üîí –¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–∞—Ä–æ–ª—é: {detail.get('password_requirements')}")
                print(f"üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è: {detail.get('available_actions')}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –æ—Ç–≤–µ—Ç–∞
                expected_fields = ['error_type', 'message', 'details', 'user_role', 'user_name', 'user_phone', 'password_requirements', 'available_actions']
                missing_fields = [field for field in expected_fields if field not in detail]
                
                if detail.get('error_type') == 'wrong_password' and not missing_fields:
                    print("‚úÖ –¢–ï–°–¢ –ü–†–û–ô–î–ï–ù: –û—à–∏–±–∫–∞ 'wrong_password' —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                    test_results.append(("wrong_password", True, "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞ –∏ —Ç–∏–ø –æ—à–∏–±–∫–∏"))
                else:
                    print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ç–∏–ø –æ—à–∏–±–∫–∏ –∏–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
                    test_results.append(("wrong_password", False, f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}"))
            else:
                print(f"‚ùå –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
                test_results.append(("wrong_password", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 401"))
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –¢–ï–°–¢–ê: {e}")
            test_results.append(("wrong_password", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—Ö–æ–¥–∞ (–¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è)
    print("\n4Ô∏è‚É£ –ö–û–ù–¢–†–û–õ–¨–ù–´–ô –¢–ï–°–¢: –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("-" * 50)
    
    try:
        admin_credentials = {
            "phone": "+79999888777",
            "password": "admin123"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=admin_credentials)
        print(f"üìû –¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–π –Ω–æ–º–µ—Ä: {admin_credentials['phone']}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            user_info = data.get('user', {})
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥!")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('full_name')}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_info.get('phone')}")
            print(f"üé≠ –†–æ–ª—å: {user_info.get('role')}")
            print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {'access_token' in data}")
            
            test_results.append(("successful_login", True, "–£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"))
        else:
            print(f"‚ùå –ö–û–ù–¢–†–û–õ–¨–ù–´–ô –¢–ï–°–¢ –ù–ï –ü–†–û–ô–î–ï–ù: HTTP {response.status_code}")
            test_results.append(("successful_login", False, f"HTTP {response.status_code} –≤–º–µ—Å—Ç–æ 200"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ö–û–ù–¢–†–û–õ–¨–ù–û–ì–û –¢–ï–°–¢–ê: {e}")
        test_results.append(("successful_login", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ account_disabled (–µ—Å–ª–∏ –µ—Å—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å)
    print("\n5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –û–®–ò–ë–ö–ò 'account_disabled' (–µ—Å–ª–∏ –ø—Ä–∏–º–µ–Ω–∏–º–æ)")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        inactive_user_data = {
            "phone": "+79999999998",  # –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π –Ω–æ–º–µ—Ä
            "password": "anypassword"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=inactive_user_data)
        
        if response.status_code == 403:
            error_data = response.json()
            detail = error_data.get('detail', {})
            
            if detail.get('error_type') == 'account_disabled':
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
                print(f"üîç –¢–∏–ø –æ—à–∏–±–∫–∏: {detail.get('error_type')}")
                print(f"üí¨ –°—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏–µ: {detail.get('status_message')}")
                print(f"üìù –î–µ—Ç–∞–ª–∏ —Å—Ç–∞—Ç—É—Å–∞: {detail.get('status_details')}")
                print(f"üë§ –†–æ–ª—å: {detail.get('user_role')}")
                print(f"üë®‚Äçüíº –ò–º—è: {detail.get('user_name')}")
                print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {detail.get('user_phone')}")
                print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω: {detail.get('is_deleted')}")
                
                test_results.append(("account_disabled", True, "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞"))
            else:
                print("‚ÑπÔ∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
                test_results.append(("account_disabled", "NA", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"))
        else:
            print("‚ÑπÔ∏è –ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ)")
            test_results.append(("account_disabled", "NA", "–ó–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"))
            
    except Exception as e:
        print(f"‚ÑπÔ∏è –¢–µ—Å—Ç account_disabled –ø—Ä–æ–ø—É—â–µ–Ω: {e}")
        test_results.append(("account_disabled", "NA", f"–¢–µ—Å—Ç –ø—Ä–æ–ø—É—â–µ–Ω: {e}"))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 100)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø")
    print("=" * 100)
    
    passed_tests = sum(1 for _, result, _ in test_results if result is True)
    failed_tests = sum(1 for _, result, _ in test_results if result is False)
    na_tests = sum(1 for _, result, _ in test_results if result == "NA")
    total_tests = len(test_results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {failed_tests}")
    print(f"‚ÑπÔ∏è –ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ: {na_tests}")
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed_tests / (total_tests - na_tests) * 100):.1f}%" if (total_tests - na_tests) > 0 else "N/A")
    
    print("\n–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for test_name, result, comment in test_results:
        status_icon = "‚úÖ" if result is True else "‚ùå" if result is False else "‚ÑπÔ∏è"
        print(f"{status_icon} {test_name}: {comment}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    critical_tests = ["user_not_found", "wrong_password"]
    critical_passed = all(result is True for test_name, result, _ in test_results if test_name in critical_tests)
    
    if critical_passed:
        print("\nüéâ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –æ—à–∏–±–æ–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
        print("‚úÖ Backend –≥–æ—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å frontend –º–æ–¥–∞–ª—å–Ω—ã–º–∏ –æ–∫–Ω–∞–º–∏")
        return True
    else:
        print("\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return False

if __name__ == "__main__":
    success = test_login_error_messages()
    sys.exit(0 if success else 1)