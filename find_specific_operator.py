#!/usr/bin/env python3
"""
üîç –ü–û–ò–°–ö –ö–û–ù–ö–†–ï–¢–ù–û–ì–û –û–ü–ï–†–ê–¢–û–†–ê USR648400
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://tajline-logistics-1.preview.emergentagent.com/api"
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

def find_specific_operator():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        response = session.post(
            f"{BACKEND_URL}/auth/login",
            json=ADMIN_CREDENTIALS,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            admin_token = data["access_token"]
            session.headers.update({
                "Authorization": f"Bearer {admin_token}"
            })
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        response = session.get(f"{BACKEND_URL}/admin/users")
        
        if response.status_code == 200:
            data = response.json()
            users = data.get('items', []) if isinstance(data, dict) else data
            
            print(f"\nüìã –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(users)}")
            
            # –ò—â–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è USR648400
            target_user = None
            for user in users:
                if user.get('user_number') == 'USR648400':
                    target_user = user
                    break
            
            if target_user:
                print(f"\nüéØ –ù–ê–ô–î–ï–ù –¶–ï–õ–ï–í–û–ô –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–¨:")
                print(f"   –ò–º—è: {target_user.get('full_name', 'N/A')}")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {target_user.get('phone', 'N/A')}")
                print(f"   –ù–æ–º–µ—Ä: {target_user.get('user_number', 'N/A')}")
                print(f"   –†–æ–ª—å: {target_user.get('role', 'N/A')}")
                print(f"   –ê–∫—Ç–∏–≤–µ–Ω: {target_user.get('is_active', 'N/A')}")
                print(f"   ID: {target_user.get('id', 'N/A')}")
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è —Å —ç—Ç–∏–º–∏ —É—á–µ—Ç–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
                test_credentials = {
                    "phone": target_user.get('phone'),
                    "password": "warehouse123"
                }
                
                print(f"\nüîê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò:")
                print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {test_credentials['phone']}")
                print(f"   –ü–∞—Ä–æ–ª—å: warehouse123")
                
                test_response = requests.post(
                    f"{BACKEND_URL}/auth/login",
                    json=test_credentials,
                    headers={"Content-Type": "application/json"}
                )
                
                if test_response.status_code == 200:
                    print(f"   ‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
                    test_data = test_response.json()
                    print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_data['user']['full_name']}")
                    print(f"   –†–æ–ª—å: {test_data['user']['role']}")
                else:
                    print(f"   ‚ùå –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï–£–°–ü–ï–®–ù–ê: HTTP {test_response.status_code}")
                    print(f"   –û—Ç–≤–µ—Ç: {test_response.text}")
                
            else:
                print(f"\n‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å USR648400 –ù–ï –ù–ê–ô–î–ï–ù")
                
                # –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –ø–æ—Ö–æ–∂–∏–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏
                similar_users = [u for u in users if u.get('user_number', '').startswith('USR648')]
                if similar_users:
                    print(f"\nüîç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ –Ω–æ–º–µ—Ä–∞–º–∏:")
                    for user in similar_users:
                        print(f"   - {user.get('full_name', 'N/A')} - {user.get('phone', 'N/A')} (–ù–æ–º–µ—Ä: {user.get('user_number', 'N/A')}, –†–æ–ª—å: {user.get('role', 'N/A')})")
                
                # –ò—â–µ–º –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤
                operators = [u for u in users if 'operator' in u.get('role', '').lower()]
                if operators:
                    print(f"\nüè≠ –í—Å–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã –≤ —Å–∏—Å—Ç–µ–º–µ:")
                    for user in operators:
                        print(f"   - {user.get('full_name', 'N/A')} - {user.get('phone', 'N/A')} (–ù–æ–º–µ—Ä: {user.get('user_number', 'N/A')}, –†–æ–ª—å: {user.get('role', 'N/A')})")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {response.status_code}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")

if __name__ == "__main__":
    find_specific_operator()