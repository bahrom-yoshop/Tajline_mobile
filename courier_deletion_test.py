#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ù–û–í–´–ô DELETE endpoint –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –≤ TAJLINE.TJ
–¶–µ–ª—å: –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–π DELETE /api/admin/couriers/{courier_id} endpoint

–¢–µ—Å—Ç–∏—Ä—É–µ–º—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏–∏:
1. DELETE /api/admin/couriers/{courier_id} - —Ç–æ–ª—å–∫–æ —á—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π endpoint
2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–∞–¥–º–∏–Ω vs –æ–ø–µ—Ä–∞—Ç–æ—Ä)
3. –ü—Ä–æ–≤–µ—Ä–∫–∞ soft delete (is_active=false, deleted=true)
4. –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://placement-view.preview.emergentagent.com/api"

# –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

# –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
OPERATOR_CREDENTIALS = {
    "phone": "+79777888999", 
    "password": "warehouse123"
}

def make_request(method, endpoint, headers=None, json_data=None, params=None):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤"""
    url = f"{BACKEND_URL}{endpoint}"
    try:
        response = requests.request(
            method=method,
            url=url, 
            headers=headers,
            json=json_data,
            params=params,
            timeout=30
        )
        return response
    except requests.exceptions.RequestException as e:
        print(f"‚ùå Request failed: {e}")
        return None

def authenticate_user(credentials, user_type="admin"):
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {user_type}...")
    
    response = make_request("POST", "/auth/login", json_data=credentials)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ {user_type}: {response.status_code if response else 'No response'}")
        if response:
            print(f"Response: {response.text}")
        return None
    
    data = response.json()
    token = data.get("access_token")
    user_info = data.get("user", {})
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è {user_type}: {user_info.get('full_name', 'Unknown')} (—Ä–æ–ª—å: {user_info.get('role', 'Unknown')})")
    return token

def get_warehouses(token):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞"""
    print("\nüì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("GET", "/warehouses", headers=headers)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code if response else 'No response'}")
        return []
    
    warehouses = response.json()
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(warehouses)} —Å–∫–ª–∞–¥–æ–≤")
    return warehouses

def create_test_courier(token, warehouse_id):
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞"""
    print(f"\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    import random
    test_phone = f"+7999{random.randint(1000000, 9999999)}"
    
    courier_data = {
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö—É—Ä—å–µ—Ä DELETE",
        "phone": test_phone,
        "password": "testcourier123",
        "address": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫—É—Ä—å–µ—Ä–∞",
        "transport_type": "car",
        "transport_number": f"TEST{random.randint(100, 999)}",
        "transport_capacity": 500.0,
        "assigned_warehouse_id": warehouse_id
    }
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("POST", "/admin/couriers/create", headers=headers, json_data=courier_data)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞: {response.status_code if response else 'No response'}")
        if response:
            print(f"Response: {response.text}")
        return None
    
    courier_info = response.json()
    courier_id = courier_info.get("courier_id")
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä —Å–æ–∑–¥–∞–Ω: ID {courier_id}, —Ç–µ–ª–µ—Ñ–æ–Ω {test_phone}")
    return courier_id, test_phone

def get_courier_list(token):
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤"""
    print("\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∫—É—Ä—å–µ—Ä–æ–≤...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("GET", "/admin/couriers/list", headers=headers)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∫—É—Ä—å–µ—Ä–æ–≤: {response.status_code if response else 'No response'}")
        return []
    
    data = response.json()
    couriers = data.get("couriers", []) if isinstance(data, dict) else data
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(couriers)} –∫—É—Ä—å–µ—Ä–æ–≤")
    return couriers

def test_delete_courier_endpoint_availability(token, courier_id):
    """–¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ DELETE endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (–Ω–µ 405 Method Not Allowed)"""
    print(f"\nüß™ –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ DELETE endpoint...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    if response.status_code == 405:
        print("‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: Endpoint –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 405 Method Not Allowed")
        return False
    
    # Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –≤–µ—Ä–Ω—É—Ç—å –¥—Ä—É–≥–∏–µ –∫–æ–¥—ã (200, 400, 404 –∏ —Ç.–¥.)
    print(f"‚úÖ –¢–ï–°–¢ 1 –ü–†–û–ô–î–ï–ù: Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
    return True

def test_admin_authorization_required(operator_token, courier_id):
    """–¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–¥–º–∏–Ω—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (403 –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–æ–≤)"""
    print(f"\nüß™ –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...")
    
    headers = {"Authorization": f"Bearer {operator_token}"}
    response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    if response.status_code != 403:
        print(f"‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 403, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
        if response.text:
            print(f"Response: {response.text}")
        return False
    
    print("‚úÖ –¢–ï–°–¢ 2 –ü–†–û–ô–î–ï–ù: –û–ø–µ—Ä–∞—Ç–æ—Ä –ø–æ–ª—É—á–∞–µ—Ç 403 Forbidden")
    return True

def test_courier_not_found(token):
    """–¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª—É—á–∞—è '–∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' (404)"""
    print(f"\nüß™ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    
    fake_courier_id = "non-existent-courier-id-12345"
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("DELETE", f"/admin/couriers/{fake_courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    if response.status_code != 404:
        print(f"‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 404, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
        if response.text:
            print(f"Response: {response.text}")
        return False
    
    print("‚úÖ –¢–ï–°–¢ 3 –ü–†–û–ô–î–ï–ù: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—É—Ä—å–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404")
    return True

def test_courier_with_active_requests(token, courier_id):
    """–¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫—É—Ä—å–µ—Ä —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω (400)"""
    print(f"\nüß™ –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏...")
    
    # –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –í —Ä–µ–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º–µ –∑–¥–µ—Å—å –Ω—É–∂–Ω–æ –±—ã–ª–æ –±—ã —Å–æ–∑–¥–∞—Ç—å –∞–∫—Ç–∏–≤–Ω—É—é –∑–∞—è–≤–∫—É –¥–ª—è –∫—É—Ä—å–µ—Ä–∞
    # –ù–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º—ã –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ endpoint –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–∞–∫–∏–µ —Å–ª—É—á–∞–∏
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 4 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    # –ï—Å–ª–∏ –∫—É—Ä—å–µ—Ä –Ω–µ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫, –æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–¥–∞–ª–µ–Ω (200)
    # –ï—Å–ª–∏ –∏–º–µ–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞—è–≤–∫–∏, –¥–æ–ª–∂–µ–Ω –≤–µ—Ä–Ω—É—Ç—å—Å—è 400
    if response.status_code == 400:
        print("‚úÖ –¢–ï–°–¢ 4 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏ –∑–∞—â–∏—â–µ–Ω –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è (400)")
        return True
    elif response.status_code == 200:
        print("‚úÖ –¢–ï–°–¢ 4 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –±–µ–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω (200)")
        return True
    else:
        print(f"‚ùå –¢–ï–°–¢ 4 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å {response.status_code}")
        if response.text:
            print(f"Response: {response.text}")
        return False

def test_successful_deletion(token, courier_id):
    """–¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —É—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫"""
    print(f"\nüß™ –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞...")
    
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    if response.status_code != 200:
        print(f"‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è —Å—Ç–∞—Ç—É—Å 200, –ø–æ–ª—É—á–µ–Ω {response.status_code}")
        if response.text:
            print(f"Response: {response.text}")
        return False
    
    try:
        data = response.json()
        message = data.get("message", "")
        deleted_courier_id = data.get("courier_id", "")
        
        if "—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω" not in message:
            print(f"‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: {message}")
            return False
        
        if deleted_courier_id != courier_id:
            print(f"‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: ID –∫—É—Ä—å–µ—Ä–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç: –æ–∂–∏–¥–∞–ª—Å—è {courier_id}, –ø–æ–ª—É—á–µ–Ω {deleted_courier_id}")
            return False
        
        print(f"‚úÖ –¢–ï–°–¢ 5 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω - {message}")
        return True
        
    except json.JSONDecodeError:
        print("‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ –æ—Ç–≤–µ—Ç–µ")
        return False

def test_soft_delete_verification(token, courier_id):
    """–¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫—É—Ä—å–µ—Ä –Ω–µ —É–¥–∞–ª—è–µ—Ç—Å—è —Ñ–∏–∑–∏—á–µ—Å–∫–∏, –∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç—Å—è (soft delete)"""
    print(f"\nüß™ –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ soft delete (is_active=false, deleted=true)...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—å–µ—Ä–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    headers = {"Authorization": f"Bearer {token}"}
    response = make_request("GET", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 6 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        return False
    
    if response.status_code == 404:
        print("‚úÖ –¢–ï–°–¢ 6 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (404)")
        return True
    elif response.status_code == 200:
        try:
            data = response.json()
            is_active = data.get("is_active", True)
            deleted = data.get("deleted", False)
            
            if not is_active and deleted:
                print("‚úÖ –¢–ï–°–¢ 6 –ü–†–û–ô–î–ï–ù: Soft delete –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω (is_active=false, deleted=true)")
                return True
            else:
                print(f"‚ùå –¢–ï–°–¢ 6 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ - is_active: {is_active}, deleted: {deleted}")
                return False
        except json.JSONDecodeError:
            print("‚ùå –¢–ï–°–¢ 6 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ –æ—Ç–≤–µ—Ç–µ")
            return False
    else:
        print(f"‚ùå –¢–ï–°–¢ 6 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å {response.status_code}")
        return False

def test_courier_disappears_from_active_list(token, courier_id):
    """–¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —á—Ç–æ –∫—É—Ä—å–µ—Ä –∏—Å—á–µ–∑–∞–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö"""
    print(f"\nüß™ –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞...")
    
    couriers = get_courier_list(token)
    
    # –ò—â–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö
    for courier in couriers:
        if courier.get("id") == courier_id:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–ª–∞–≥–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            is_active = courier.get("is_active", True)
            if not is_active:
                print("‚úÖ –¢–ï–°–¢ 7 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –ø–æ–º–µ—á–µ–Ω –∫–∞–∫ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π –≤ —Å–ø–∏—Å–∫–µ")
                return True
            else:
                print("‚ùå –¢–ï–°–¢ 7 –ü–†–û–í–ê–õ–ï–ù: –ö—É—Ä—å–µ—Ä –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
                return False
    
    print("‚úÖ –¢–ï–°–¢ 7 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é –∏—Å—á–µ–∑ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞")
    return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ù–û–í–´–ô DELETE endpoint –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞")
    print("=" * 80)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_token = authenticate_user(ADMIN_CREDENTIALS, "–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    if not admin_token:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        sys.exit(1)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    operator_token = authenticate_user(OPERATOR_CREDENTIALS, "–æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
    if not operator_token:
        print("‚ö†Ô∏è –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        operator_token = None
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
    warehouses = get_warehouses(admin_token)
    if not warehouses:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤")
        sys.exit(1)
    
    # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π —Å–∫–ª–∞–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞
    warehouse_id = warehouses[0]["id"]
    warehouse_name = warehouses[0]["name"]
    print(f"üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫–ª–∞–¥: {warehouse_name} (ID: {warehouse_id})")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    courier_result = create_test_courier(admin_token, warehouse_id)
    if not courier_result:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞")
        sys.exit(1)
    
    courier_id, courier_phone = courier_result
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤
    test_results = []
    
    try:
        # –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ DELETE endpoint
        result1 = test_delete_courier_endpoint_availability(admin_token, courier_id)
        test_results.append(("–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DELETE endpoint", result1))
        
        # –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∞–¥–º–∏–Ω—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if operator_token:
            result2 = test_admin_authorization_required(operator_token, courier_id)
            test_results.append(("–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", result2))
        else:
            test_results.append(("–¢—Ä–µ–±–æ–≤–∞–Ω–∏–µ –∞–¥–º–∏–Ω—Å–∫–æ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", "–ü–†–û–ü–£–©–ï–ù"))
        
        # –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞
        result3 = test_courier_not_found(admin_token)
        test_results.append(("–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞", result3))
        
        # –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞—â–∏—Ç—ã –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏
        result4 = test_courier_with_active_requests(admin_token, courier_id)
        test_results.append(("–ó–∞—â–∏—Ç–∞ –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏", result4))
        
        # –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        result5 = test_successful_deletion(admin_token, courier_id)
        test_results.append(("–£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞", result5))
        
        # –¢–ï–°–¢ 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ soft delete
        result6 = test_soft_delete_verification(admin_token, courier_id)
        test_results.append(("Soft delete (is_active=false, deleted=true)", result6))
        
        # –¢–ï–°–¢ 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞
        result7 = test_courier_disappears_from_active_list(admin_token, courier_id)
        test_results.append(("–ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", result7))
        
    except Exception as e:
        print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤–æ –≤—Ä–µ–º—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
    
    # –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
    print("\n" + "=" * 80)
    print("üìä –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø DELETE ENDPOINT –î–õ–Ø –ö–£–†–¨–ï–†–û–í")
    print("=" * 80)
    
    passed_tests = 0
    total_tests = 0
    
    for test_name, result in test_results:
        if result == "–ü–†–û–ü–£–©–ï–ù":
            print(f"‚ö†Ô∏è  {test_name}: –ü–†–û–ü–£–©–ï–ù")
        elif result:
            print(f"‚úÖ {test_name}: –ü–†–û–ô–î–ï–ù")
            passed_tests += 1
            total_tests += 1
        else:
            print(f"‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù")
            total_tests += 1
    
    success_rate = (passed_tests / total_tests * 100) if total_tests > 0 else 0
    
    print(f"\nüéØ –†–ï–ó–£–õ–¨–¢–ê–¢: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ ({success_rate:.1f}%)")
    
    if success_rate >= 85:
        print("üéâ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–°–ü–ï–•: DELETE endpoint –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 405 Method Not Allowed")
        print("‚úÖ –¢—Ä–µ–±—É–µ—Ç—Å—è –∞–¥–º–∏–Ω—Å–∫–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (403 –¥–ª—è –Ω–µ-–∞–¥–º–∏–Ω–æ–≤)")
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–π '–∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω' (404)")
        print("‚úÖ –ó–∞—â–∏—â–∞–µ—Ç –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–æ–≤ —Å –∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∑–∞—è–≤–∫–∞–º–∏")
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—å–µ—Ä–æ–≤ –±–µ–∑ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞—è–≤–æ–∫")
        print("‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω soft delete (is_active=false, deleted=true)")
        print("‚úÖ –ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑–∞–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö")
    elif success_rate >= 70:
        print("‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•: DELETE endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´: DELETE endpoint —Ç—Ä–µ–±—É–µ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    
    print(f"\nüïí –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()