#!/usr/bin/env python3
"""
üè≠ –°–û–ó–î–ê–ù–ò–ï –û–ü–ï–†–ê–¢–û–†–ê –°–ö–õ–ê–î–ê –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://logistics-dash-6.preview.emergentagent.com/api"
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

def create_warehouse_operator():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        response = session.post(
            f"{BACKEND_URL}/auth/login",
            json=ADMIN_CREDENTIALS,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            admin_token = data["access_token"]
            session.headers.update({
                "Authorization": f"Bearer {admin_token}"
            })
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
    try:
        response = session.get(f"{BACKEND_URL}/warehouses")
        
        if response.status_code == 200:
            warehouses = response.json()
            if warehouses:
                warehouse_id = warehouses[0].get('id')
                warehouse_name = warehouses[0].get('name', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Å–∫–ª–∞–¥')
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω —Å–∫–ª–∞–¥ –¥–ª—è –ø—Ä–∏–≤—è–∑–∫–∏: {warehouse_name} (ID: {warehouse_id})")
            else:
                print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
                return
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞
    operator_data = {
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û–ø–µ—Ä–∞—Ç–æ—Ä –ü—Ä–∏—ë–º–∞ –ó–∞—è–≤–æ–∫",
        "phone": "+79777888999",
        "address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 123",
        "password": "warehouse123",
        "warehouse_id": warehouse_id
    }
    
    try:
        response = session.post(
            f"{BACKEND_URL}/admin/create-operator",
            json=operator_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            print(f"‚úÖ –û–ü–ï–†–ê–¢–û–† –°–ö–õ–ê–î–ê –°–û–ó–î–ê–ù –£–°–ü–ï–®–ù–û!")
            print(f"   –ò–º—è: {data.get('full_name', 'N/A')}")
            print(f"   –¢–µ–ª–µ—Ñ–æ–Ω: {data.get('phone', 'N/A')}")
            print(f"   –°–∫–ª–∞–¥: {data.get('warehouse_name', 'N/A')}")
            print(f"   ID: {data.get('id', 'N/A')}")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
            test_credentials = {
                "phone": operator_data["phone"],
                "password": operator_data["password"]
            }
            
            print(f"\nüîê –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ù–û–í–û–ì–û –û–ü–ï–†–ê–¢–û–†–ê:")
            test_response = requests.post(
                f"{BACKEND_URL}/auth/login",
                json=test_credentials,
                headers={"Content-Type": "application/json"}
            )
            
            if test_response.status_code == 200:
                test_data = test_response.json()
                print(f"   ‚úÖ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –£–°–ü–ï–®–ù–ê!")
                print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_data['user']['full_name']}")
                print(f"   –†–æ–ª—å: {test_data['user']['role']}")
                print(f"   –ù–æ–º–µ—Ä: {test_data['user'].get('user_number', 'N/A')}")
            else:
                print(f"   ‚ùå –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ù–ï–£–°–ü–ï–®–ù–ê: HTTP {test_response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {test_response.text}")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: HTTP {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: {e}")

if __name__ == "__main__":
    create_warehouse_operator()