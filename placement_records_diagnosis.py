#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ placement_records –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º –≥—Ä—É–∑–∞ –≤ —Å—Ö–µ–º–µ —Å–∫–ª–∞–¥–∞
"""

import requests
import json
import os
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://cargo-sync.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞
OPERATOR_CREDENTIALS = {
    "phone": "+79777888999",
    "password": "warehouse123"
}

def authenticate_admin():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    session = requests.Session()
    response = session.post(
        f"{API_BASE}/auth/login",
        json=ADMIN_CREDENTIALS,
        headers={"Content-Type": "application/json"},
        timeout=30
    )
    
    if response.status_code == 200:
        data = response.json()
        token = data.get("access_token")
        session.headers.update({"Authorization": f"Bearer {token}"})
        return session
    return None

def authenticate_operator():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"""
    session = requests.Session()
    response = session.post(
        f"{API_BASE}/auth/login",
        json=OPERATOR_CREDENTIALS,
        headers={"Content-Type": "application/json"},
        timeout=30
    )
    
    if response.status_code == 200:
        data = response.json()
        token = data.get("access_token")
        session.headers.update({"Authorization": f"Bearer {token}"})
        return session
    return None

def main():
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê PLACEMENT_RECORDS")
    print("=" * 50)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è warehouse_id
    operator_session = authenticate_operator()
    if not operator_session:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –æ–ø–µ—Ä–∞—Ç–æ—Ä")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º warehouse_id
    warehouses_response = operator_session.get(f"{API_BASE}/operator/warehouses", timeout=30)
    if warehouses_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤")
        return
    
    warehouses = warehouses_response.json()
    if not warehouses:
        print("‚ùå –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤ –ø—É—Å—Ç")
        return
    
    warehouse = warehouses[0]
    warehouse_id = warehouse.get("id")
    warehouse_name = warehouse.get("name")
    
    print(f"üì¶ –°–∫–ª–∞–¥: {warehouse_name}")
    print(f"üÜî Warehouse ID: {warehouse_id}")
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º fully-placed API –¥–ª—è –≥—Ä—É–∑–∞ 25082235
    fully_placed_response = operator_session.get(f"{API_BASE}/operator/cargo/fully-placed", timeout=30)
    if fully_placed_response.status_code == 200:
        data = fully_placed_response.json()
        items = data.get("items", [])
        
        cargo_25082235 = None
        for item in items:
            if item.get("cargo_number") == "25082235":
                cargo_25082235 = item
                break
        
        if cargo_25082235:
            print("‚úÖ –ì—Ä—É–∑ 25082235 –Ω–∞–π–¥–µ–Ω –≤ fully-placed:")
            print(f"   üìã ID: {cargo_25082235.get('id')}")
            print(f"   üì¶ –ù–æ–º–µ—Ä: {cargo_25082235.get('cargo_number')}")
            
            individual_units = cargo_25082235.get("individual_units", [])
            for unit in individual_units:
                individual_number = unit.get("individual_number")
                status = unit.get("status")
                placement_info = unit.get("placement_info")
                print(f"   üìç {individual_number}: {status} - {placement_info}")
        else:
            print("‚ùå –ì—Ä—É–∑ 25082235 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ fully-placed")
    
    print()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º layout-with-cargo API
    layout_response = operator_session.get(f"{API_BASE}/warehouses/{warehouse_id}/layout-with-cargo", timeout=30)
    if layout_response.status_code == 200:
        layout_data = layout_response.json()
        total_cargo = layout_data.get("total_cargo", 0)
        occupied_cells = layout_data.get("occupied_cells", 0)
        
        print(f"üèóÔ∏è –°—Ö–µ–º–∞ —Å–∫–ª–∞–¥–∞:")
        print(f"   üìä –í—Å–µ–≥–æ –≥—Ä—É–∑–æ–≤: {total_cargo}")
        print(f"   üè† –ó–∞–Ω—è—Ç—ã—Ö —è—á–µ–µ–∫: {occupied_cells}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —è—á–µ–π–∫—É –ë1-–ü2-–Ø9
        layout = layout_data.get("layout", {})
        blocks = layout.get("blocks", [])
        
        cell_found = False
        for block in blocks:
            if block.get("block_number") == 1:
                for shelf in block.get("shelves", []):
                    if shelf.get("shelf_number") == 2:
                        for cell in shelf.get("cells", []):
                            if cell.get("cell_number") == 9:
                                cell_found = True
                                is_occupied = cell.get("is_occupied", False)
                                cargo_list = cell.get("cargo", [])
                                print(f"   üéØ –Ø—á–µ–π–∫–∞ –ë1-–ü2-–Ø9: –∑–∞–Ω—è—Ç–∞={is_occupied}, –≥—Ä—É–∑–æ–≤={len(cargo_list) if cargo_list else 0}")
                                
                                if cargo_list:
                                    for cargo in cargo_list:
                                        print(f"      üì¶ {cargo.get('individual_number')} ({cargo.get('cargo_number')})")
                                break
                        if cell_found:
                            break
                if cell_found:
                    break
        
        if not cell_found:
            print("   ‚ùå –Ø—á–µ–π–∫–∞ –ë1-–ü2-–Ø9 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ —Å—Ö–µ–º–µ")
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ö–µ–º—ã —Å–∫–ª–∞–¥–∞: {layout_response.status_code}")
    
    print()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    admin_session = authenticate_admin()
    if not admin_session:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º placement_records –Ω–∞–ø—Ä—è–º—É—é (–µ—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–æ–π API)
    # –ü–æ–ø—Ä–æ–±—É–µ–º —á–µ—Ä–µ–∑ debug API –∏–ª–∏ —Å–æ–∑–¥–∞–¥–∏–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π endpoint
    print("üîç –ü–æ–ø—ã—Ç–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ placement_records...")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ debug endpoint –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –∑–∞–ø—Ä–æ—Å
    debug_response = admin_session.get(f"{API_BASE}/admin/debug/placement-records?cargo_number=25082235", timeout=30)
    if debug_response.status_code == 200:
        debug_data = debug_response.json()
        print("üìã Placement records –¥–ª—è –≥—Ä—É–∑–∞ 25082235:")
        for record in debug_data:
            print(f"   üÜî ID: {record.get('id', 'N/A')}")
            print(f"   üì¶ Cargo: {record.get('cargo_number', 'N/A')}")
            print(f"   üî¢ Individual: {record.get('individual_number', 'N/A')}")
            print(f"   üè† Warehouse ID: {record.get('warehouse_id', 'N/A')}")
            print(f"   üìç Location: {record.get('location', 'N/A')}")
            print(f"   üë§ Placed by: {record.get('placed_by', 'N/A')}")
            print()
    else:
        print(f"‚ö†Ô∏è Debug API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω (HTTP {debug_response.status_code})")
        print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è: –°–æ–∑–¥–∞—Ç—å debug endpoint –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ placement_records")

if __name__ == "__main__":
    main()