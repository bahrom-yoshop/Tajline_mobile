#!/usr/bin/env python3
"""
–î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–∑–∞ —Å ID 100004
"""

import requests
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://placement-manager.preview.emergentagent.com/api"

def diagnose_cargo_data():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–∑–∞"""
    
    print("üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≥—Ä—É–∑–∞ —Å ID 100004")
    print("=" * 60)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    login_data = {
        "phone": "+79999888777",
        "password": "admin123"
    }
    
    response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
        return False
        
    token = response.json().get("access_token")
    headers = {"Authorization": f"Bearer {token}"}
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –≥—Ä—É–∑–æ–≤ —Å –Ω–æ–º–µ—Ä–æ–º 100008/02
    print("\n1Ô∏è‚É£ –ü–û–ò–°–ö –í–°–ï–• –ì–†–£–ó–û–í –° –ù–û–ú–ï–†–û–ú 100008/02")
    print("-" * 50)
    
    response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
    if response.status_code == 200:
        cargo_data = response.json()
        cargo_items = cargo_data.get("items", [])
        
        print(f"–í—Å–µ–≥–æ –≥—Ä—É–∑–æ–≤ –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è: {len(cargo_items)}")
        
        cargos_100008 = []
        for cargo in cargo_items:
            if "100008" in cargo.get("cargo_number", ""):
                cargos_100008.append(cargo)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–∑–æ–≤ —Å –Ω–æ–º–µ—Ä–æ–º —Å–æ–¥–µ—Ä–∂–∞—â–∏–º '100008': {len(cargos_100008)}")
        
        for i, cargo in enumerate(cargos_100008):
            print(f"  {i+1}. ID: {cargo.get('id')}, –ù–æ–º–µ—Ä: {cargo.get('cargo_number')}")
            print(f"     –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {cargo.get('sender_full_name')}")
            print(f"     –°—Ç–∞—Ç—É—Å: {cargo.get('processing_status')}")
    
    # –ü–æ–∏—Å–∫ –≥—Ä—É–∑–∞ —Å ID 100004
    print(f"\n2Ô∏è‚É£ –ü–û–ò–°–ö –ì–†–£–ó–ê –° ID 100004")
    print("-" * 50)
    
    response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
    if response.status_code == 200:
        cargo_data = response.json()
        cargo_items = cargo_data.get("items", [])
        
        cargo_100004 = None
        for cargo in cargo_items:
            if cargo.get("id") == "100004":
                cargo_100004 = cargo
                break
        
        if cargo_100004:
            print(f"‚úÖ –ì—Ä—É–∑ —Å ID 100004 –Ω–∞–π–¥–µ–Ω:")
            print(f"   –ù–æ–º–µ—Ä –≥—Ä—É–∑–∞: {cargo_100004.get('cargo_number')}")
            print(f"   –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {cargo_100004.get('sender_full_name')}")
            print(f"   –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {cargo_100004.get('recipient_full_name')}")
            print(f"   –°—Ç–∞—Ç—É—Å: {cargo_100004.get('processing_status')}")
            print(f"   –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {cargo_100004.get('payment_status')}")
        else:
            print(f"‚ö†Ô∏è –ì—Ä—É–∑ —Å ID 100004 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –≥—Ä—É–∑–æ–≤ —Å ID —Å–æ–¥–µ—Ä–∂–∞—â–∏–º 100004
    print(f"\n3Ô∏è‚É£ –ü–û–ò–°–ö –í–°–ï–• –ì–†–£–ó–û–í –° ID –°–û–î–ï–†–ñ–ê–©–ò–ú '100004'")
    print("-" * 50)
    
    response = requests.get(f"{BACKEND_URL}/operator/cargo/list", headers=headers)
    if response.status_code == 200:
        all_cargo = response.json()
        cargo_items = all_cargo.get("items", [])
        
        print(f"–í—Å–µ–≥–æ –≥—Ä—É–∑–æ–≤ –≤ –æ–±—â–µ–º —Å–ø–∏—Å–∫–µ: {len(cargo_items)}")
        
        cargos_with_100004 = []
        for cargo in cargo_items:
            if "100004" in str(cargo.get("id", "")):
                cargos_with_100004.append(cargo)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ –≥—Ä—É–∑–æ–≤ —Å ID —Å–æ–¥–µ—Ä–∂–∞—â–∏–º '100004': {len(cargos_with_100004)}")
        
        for i, cargo in enumerate(cargos_with_100004):
            print(f"  {i+1}. ID: {cargo.get('id')}, –ù–æ–º–µ—Ä: {cargo.get('cargo_number')}")
            print(f"     –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {cargo.get('sender_full_name')}")
            print(f"     –°—Ç–∞—Ç—É—Å: {cargo.get('processing_status')}")
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –Ω–æ–º–µ—Ä–∞ –≥—Ä—É–∑–∞ –∏ ID
    print(f"\n4Ô∏è‚É£ –ê–ù–ê–õ–ò–ó –°–û–û–¢–í–ï–¢–°–¢–í–ò–Ø –ù–û–ú–ï–†–û–í –ò ID")
    print("-" * 50)
    
    response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
    if response.status_code == 200:
        cargo_data = response.json()
        cargo_items = cargo_data.get("items", [])
        
        # –ò—â–µ–º –≤—Å–µ –≥—Ä—É–∑—ã —Å –Ω–æ–º–µ—Ä–∞–º–∏ 100008/XX –∏ 100012/XX
        relevant_cargos = []
        for cargo in cargo_items:
            cargo_number = cargo.get("cargo_number", "")
            if cargo_number.startswith("100008/") or cargo_number.startswith("100012/"):
                relevant_cargos.append(cargo)
        
        print(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –≥—Ä—É–∑–æ–≤: {len(relevant_cargos)}")
        
        for cargo in relevant_cargos:
            print(f"  –ù–æ–º–µ—Ä: {cargo.get('cargo_number')} ‚Üí ID: {cargo.get('id')}")
            print(f"    –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {cargo.get('sender_full_name')}")
    
    print(f"\n" + "=" * 60)
    print(f"üéØ –í–´–í–û–î–´ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò:")
    print(f"   –ü—Ä–æ–≤–µ—Ä–∏–ª–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–º–µ—Ä–æ–≤ –≥—Ä—É–∑–æ–≤ –∏ –∏—Ö ID")
    print(f"   –û–ø—Ä–µ–¥–µ–ª–∏–ª–∏, –∫–∞–∫–æ–π –≥—Ä—É–∑ –∏–º–µ–µ—Ç ID 100004")
    print(f"   –í—ã—è—Å–Ω–∏–ª–∏ –ø—Ä–∏—á–∏–Ω—É –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ —Ç–µ—Å—Ç–∞—Ö")
    
    return True

if __name__ == "__main__":
    diagnose_cargo_data()