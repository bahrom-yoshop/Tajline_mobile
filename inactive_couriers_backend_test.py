#!/usr/bin/env python3
"""
üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ù–æ–≤–∞—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã" –≤ —Ä–∞–∑–¥–µ–ª–µ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –ö—É—Ä—å–µ—Ä—ã

–ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨ –î–û–ë–ê–í–õ–ï–ù–ê:
1. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã" –≤ –º–µ–Ω—é –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –ö—É—Ä—å–µ—Ä—ã (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)
2. ‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª–Ω—ã–π UI –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä–∞–º–∏
3. ‚úÖ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤—Å–µ backend endpoints:
   - GET /api/admin/couriers/inactive - –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
   - POST /api/admin/couriers/{id}/activate - –∞–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä–∞
   - DELETE /api/admin/couriers/{id}/permanent - –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞
4. ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É
5. ‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ñ—É–Ω–∫—Ü–∏–∏ handleActivateCourier –∏ handlePermanentDeleteCourier

UI –ö–û–ú–ü–û–ù–ï–ù–¢–´:
- –¢–∞–±–ª–∏—Ü–∞ —Å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º–∏ –∫—É—Ä—å–µ—Ä–∞–º–∏ (–∏–º—è, —Å–∫–ª–∞–¥, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å, —Å—Ç–∞—Ç—É—Å)
- –ö–Ω–æ–ø–∫–∞ "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å" (–∑–µ–ª–µ–Ω–∞—è, –∏–∫–æ–Ω–∫–∞ UserCheck)
- –ö–Ω–æ–ø–∫–∞ "–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å" (–∫—Ä–∞—Å–Ω–∞—è, –∏–∫–æ–Ω–∫–∞ X)
- –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å —Å –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–π
- –ö–Ω–æ–ø–∫–∞ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞

–ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:
1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
2. –ü–µ—Ä–µ—Ö–æ–¥ –≤ —Ä–∞–∑–¥–µ–ª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ ‚Üí –ö—É—Ä—å–µ—Ä—ã ‚Üí –ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã
3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–û–±–Ω–æ–≤–∏—Ç—å" –¥–ª—è —Ä—É—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
5. –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"
6. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ü–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å" (—Å –¥–≤–æ–π–Ω—ã–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ–º)
7. –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –ø–æ—Å–ª–µ –¥–µ–π—Å—Ç–≤–∏–π

–û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: –ü–æ–ª–Ω–æ—Å—Ç—å—é —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–∞—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è "–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã" —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞, –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –∏–∑ —É–¥–æ–±–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞.
"""

import requests
import json
import sys
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://cargo-system.preview.emergentagent.com/api"

def test_inactive_couriers_functionality():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤"""
    
    print("üéØ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ù–æ–≤–∞—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏—è '–ù–µ–∞–∫—Ç–∏–≤–Ω—ã–µ –∫—É—Ä—å–µ—Ä—ã' –≤ TAJLINE.TJ")
    print("=" * 100)
    
    test_results = []
    admin_token = None
    
    # –¢–µ—Å—Ç 1: –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("\n1Ô∏è‚É£ –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 50)
    
    try:
        admin_credentials = {
            "phone": "+79999888777",
            "password": "admin123"
        }
        
        response = requests.post(f"{BACKEND_URL}/auth/login", json=admin_credentials)
        print(f"üìû –ù–æ–º–µ—Ä –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {admin_credentials['phone']}")
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            admin_token = data.get('access_token')
            user_info = data.get('user', {})
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!")
            print(f"üë§ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä: {user_info.get('full_name')}")
            print(f"üì± –¢–µ–ª–µ—Ñ–æ–Ω: {user_info.get('phone')}")
            print(f"üé≠ –†–æ–ª—å: {user_info.get('role')}")
            print(f"üîë –¢–æ–∫–µ–Ω –ø–æ–ª—É—á–µ–Ω: {bool(admin_token)}")
            
            if user_info.get('role') == 'admin':
                test_results.append(("admin_authorization", True, f"–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ '{user_info.get('full_name')}'"))
            else:
                test_results.append(("admin_authorization", False, f"–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ä–æ–ª—å: {user_info.get('role')}"))
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: HTTP {response.status_code}")
            test_results.append(("admin_authorization", False, f"HTTP {response.status_code}"))
            return test_results
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò: {e}")
        test_results.append(("admin_authorization", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
        return test_results
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    headers = {"Authorization": f"Bearer {admin_token}"}
    
    # –¢–µ—Å—Ç 2: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
    print("\n2Ô∏è‚É£ –ü–û–õ–£–ß–ï–ù–ò–ï –°–ü–ò–°–ö–ê –ù–ï–ê–ö–¢–ò–í–ù–´–• –ö–£–†–¨–ï–†–û–í")
    print("-" * 50)
    
    try:
        response = requests.get(f"{BACKEND_URL}/admin/couriers/inactive", headers=headers)
        print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
        
        if response.status_code == 200:
            data = response.json()
            inactive_couriers = data.get('inactive_couriers', [])
            total_count = data.get('total_count', 0)
            
            print(f"‚úÖ Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"üìã –í—Å–µ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤: {total_count}")
            print(f"üìä –ü–æ–ª—É—á–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {len(inactive_couriers)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
            if inactive_couriers:
                sample_courier = inactive_couriers[0]
                required_fields = ['id', 'full_name', 'phone', 'assigned_warehouse_id', 'is_active']
                missing_fields = [field for field in required_fields if field not in sample_courier]
                
                if not missing_fields:
                    print(f"‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞")
                    print(f"üìù –ü—Ä–∏–º–µ—Ä –∫—É—Ä—å–µ—Ä–∞: {sample_courier.get('full_name')} (ID: {sample_courier.get('id')[:8]}...)")
                    if 'user_info' in sample_courier:
                        print(f"üë§ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ: {sample_courier['user_info']}")
                    if 'assigned_warehouse_name' in sample_courier:
                        print(f"üè¢ –°–∫–ª–∞–¥: {sample_courier['assigned_warehouse_name']}")
                else:
                    print(f"‚ö†Ô∏è –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
            else:
                print("‚ÑπÔ∏è –ù–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
            
            test_results.append(("get_inactive_couriers", True, f"–ü–æ–ª—É—á–µ–Ω–æ {total_count} –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤"))
            
        elif response.status_code == 403:
            print(f"‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω: {response.status_code}")
            test_results.append(("get_inactive_couriers", False, "–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"))
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: HTTP {response.status_code}")
            try:
                error_data = response.json()
                print(f"üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
            except:
                pass
            test_results.append(("get_inactive_couriers", False, f"HTTP {response.status_code}"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –°–ü–ò–°–ö–ê: {e}")
        test_results.append(("get_inactive_couriers", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 3: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ (–µ—Å–ª–∏ –Ω–µ—Ç –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö)
    print("\n3Ô∏è‚É£ –ü–û–î–ì–û–¢–û–í–ö–ê –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•")
    print("-" * 50)
    
    test_courier_id = None
    
    try:
        # –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
        response = requests.get(f"{BACKEND_URL}/admin/couriers/list", headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            active_couriers = data.get('couriers', [])
            
            if active_couriers:
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –∏ –¥–µ–ª–∞–µ–º –µ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                test_courier = active_couriers[0]
                test_courier_id = test_courier.get('id')
                
                print(f"üîß –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {test_courier.get('full_name')} (ID: {test_courier_id[:8]}...)")
                
                # –î–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫—É—Ä—å–µ—Ä–∞ —á–µ—Ä–µ–∑ DELETE endpoint (soft delete)
                delete_response = requests.delete(f"{BACKEND_URL}/admin/couriers/{test_courier_id}", headers=headers)
                
                if delete_response.status_code == 200:
                    print(f"‚úÖ –ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
                    test_results.append(("prepare_test_data", True, "–¢–µ—Å—Ç–æ–≤—ã–π –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–π –∫—É—Ä—å–µ—Ä –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω"))
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞: HTTP {delete_response.status_code}")
                    test_results.append(("prepare_test_data", False, f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å: HTTP {delete_response.status_code}"))
            else:
                print("‚ÑπÔ∏è –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
                test_results.append(("prepare_test_data", "NA", "–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"))
        else:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤: HTTP {response.status_code}")
            test_results.append(("prepare_test_data", False, f"HTTP {response.status_code}"))
            
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        test_results.append(("prepare_test_data", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 4: –ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ (–¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞)
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û –°–ü–ò–°–ö–ê –ù–ï–ê–ö–¢–ò–í–ù–´–• –ö–£–†–¨–ï–†–û–í")
    print("-" * 50)
    
    try:
        response = requests.get(f"{BACKEND_URL}/admin/couriers/inactive", headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            inactive_couriers = data.get('inactive_couriers', [])
            total_count = data.get('total_count', 0)
            
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –ø–æ–ª—É—á–µ–Ω!")
            print(f"üìã –í—Å–µ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤: {total_count}")
            
            # –ò—â–µ–º –Ω–∞—à–µ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
            test_courier_found = False
            if test_courier_id:
                for courier in inactive_couriers:
                    if courier.get('id') == test_courier_id:
                        test_courier_found = True
                        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö: {courier.get('full_name')}")
                        break
                
                if test_courier_found:
                    test_results.append(("updated_inactive_list", True, "–¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ø–æ—è–≤–∏–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"))
                else:
                    test_results.append(("updated_inactive_list", False, "–¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"))
            else:
                test_results.append(("updated_inactive_list", "NA", "–ù–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏"))
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞: HTTP {response.status_code}")
            test_results.append(("updated_inactive_list", False, f"HTTP {response.status_code}"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–õ–£–ß–ï–ù–ò–Ø –û–ë–ù–û–í–õ–ï–ù–ù–û–ì–û –°–ü–ò–°–ö–ê: {e}")
        test_results.append(("updated_inactive_list", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 5: –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∫—É—Ä—å–µ—Ä–∞
    print("\n5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–ö–¢–ò–í–ê–¶–ò–ò –ö–£–†–¨–ï–†–ê")
    print("-" * 50)
    
    if test_courier_id:
        try:
            response = requests.post(f"{BACKEND_URL}/admin/couriers/{test_courier_id}/activate", headers=headers)
            print(f"üîÑ –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫—É—Ä—å–µ—Ä–∞: {test_courier_id[:8]}...")
            print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                data = response.json()
                print(f"‚úÖ –ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!")
                print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
                print(f"üÜî ID –∫—É—Ä—å–µ—Ä–∞: {data.get('courier_id')}")
                print(f"üë§ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {data.get('activated_by')}")
                
                test_results.append(("activate_courier", True, "–ö—É—Ä—å–µ—Ä —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω"))
                
            elif response.status_code == 404:
                print(f"‚ùå –ö—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω")
                test_results.append(("activate_courier", False, "–ö—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"))
            elif response.status_code == 400:
                print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞")
                try:
                    error_data = response.json()
                    print(f"üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
                except:
                    pass
                test_results.append(("activate_courier", False, "–ù–µ —É–¥–∞–ª–æ—Å—å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å"))
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏: HTTP {response.status_code}")
                test_results.append(("activate_courier", False, f"HTTP {response.status_code}"))
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –ê–ö–¢–ò–í–ê–¶–ò–ò: {e}")
            test_results.append(("activate_courier", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    else:
        print("‚ÑπÔ∏è –ù–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
        test_results.append(("activate_courier", "NA", "–ù–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞"))
    
    # –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫—É—Ä—å–µ—Ä –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    print("\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–ü–ò–°–ö–ê –ü–û–°–õ–ï –ê–ö–¢–ò–í–ê–¶–ò–ò")
    print("-" * 50)
    
    if test_courier_id:
        try:
            response = requests.get(f"{BACKEND_URL}/admin/couriers/inactive", headers=headers)
            
            if response.status_code == 200:
                data = response.json()
                inactive_couriers = data.get('inactive_couriers', [])
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö
                test_courier_still_inactive = False
                for courier in inactive_couriers:
                    if courier.get('id') == test_courier_id:
                        test_courier_still_inactive = True
                        break
                
                if not test_courier_still_inactive:
                    print(f"‚úÖ –ö—É—Ä—å–µ—Ä –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
                    test_results.append(("check_after_activation", True, "–ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"))
                else:
                    print(f"‚ùå –ö—É—Ä—å–µ—Ä –≤—Å–µ –µ—â–µ –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ—Å–ª–µ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏")
                    test_results.append(("check_after_activation", False, "–ö—É—Ä—å–µ—Ä –æ—Å—Ç–∞–ª—Å—è –≤ —Å–ø–∏—Å–∫–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö"))
                    
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞: HTTP {response.status_code}")
                test_results.append(("check_after_activation", False, f"HTTP {response.status_code}"))
                
        except Exception as e:
            print(f"‚ùå –û–®–ò–ë–ö–ê –ü–†–û–í–ï–†–ö–ò: {e}")
            test_results.append(("check_after_activation", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    else:
        test_results.append(("check_after_activation", "NA", "–ù–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞"))
    
    # –¢–µ—Å—Ç 7: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞
    print("\n7Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –ö–£–†–¨–ï–†–ê")
    print("-" * 50)
    
    # –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –µ—â–µ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
    permanent_delete_courier_id = None
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –µ—â–µ –æ–¥–Ω–æ–≥–æ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ
        response = requests.get(f"{BACKEND_URL}/admin/couriers/list", headers=headers)
        
        if response.status_code == 200:
            data = response.json()
            active_couriers = data.get('couriers', [])
            
            if len(active_couriers) > 0:
                # –ë–µ—Ä–µ–º –¥—Ä—É–≥–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
                delete_test_courier = active_couriers[0]
                permanent_delete_courier_id = delete_test_courier.get('id')
                
                print(f"üîß –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {delete_test_courier.get('full_name')}")
                
                # –°–Ω–∞—á–∞–ª–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –µ–≥–æ
                delete_response = requests.delete(f"{BACKEND_URL}/admin/couriers/{permanent_delete_courier_id}", headers=headers)
                
                if delete_response.status_code == 200:
                    print(f"‚úÖ –ö—É—Ä—å–µ—Ä –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –≥–æ—Ç–æ–≤ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è")
                    
                    # –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ
                    permanent_delete_response = requests.delete(
                        f"{BACKEND_URL}/admin/couriers/{permanent_delete_courier_id}/permanent", 
                        headers=headers
                    )
                    
                    print(f"üóëÔ∏è –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–∞: {permanent_delete_courier_id[:8]}...")
                    print(f"üìä HTTP —Å—Ç–∞—Ç—É—Å: {permanent_delete_response.status_code}")
                    
                    if permanent_delete_response.status_code == 200:
                        delete_data = permanent_delete_response.json()
                        print(f"‚úÖ –ö—É—Ä—å–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω!")
                        print(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ: {delete_data.get('message')}")
                        print(f"üÜî ID –∫—É—Ä—å–µ—Ä–∞: {delete_data.get('courier_id')}")
                        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª–µ–Ω: {delete_data.get('user_deleted')}")
                        print(f"üóëÔ∏è –£–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º: {delete_data.get('deleted_by')}")
                        print(f"üìÖ –î–∞—Ç–∞ —É–¥–∞–ª–µ–Ω–∏—è: {delete_data.get('deletion_date')}")
                        
                        test_results.append(("permanent_delete_courier", True, "–ö—É—Ä—å–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"))
                        
                    elif permanent_delete_response.status_code == 404:
                        print(f"‚ùå –ö—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è")
                        test_results.append(("permanent_delete_courier", False, "–ö—É—Ä—å–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω"))
                    elif permanent_delete_response.status_code == 400:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞")
                        try:
                            error_data = permanent_delete_response.json()
                            print(f"üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏: {error_data}")
                        except:
                            pass
                        test_results.append(("permanent_delete_courier", False, "–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å"))
                    else:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: HTTP {permanent_delete_response.status_code}")
                        test_results.append(("permanent_delete_courier", False, f"HTTP {permanent_delete_response.status_code}"))
                        
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è")
                    test_results.append(("permanent_delete_courier", False, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å –∫—É—Ä—å–µ—Ä–∞"))
            else:
                print("‚ÑπÔ∏è –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è")
                test_results.append(("permanent_delete_courier", "NA", "–ù–µ—Ç –∫—É—Ä—å–µ—Ä–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"))
        else:
            print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤: HTTP {response.status_code}")
            test_results.append(("permanent_delete_courier", False, f"HTTP {response.status_code}"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–û–õ–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø: {e}")
        test_results.append(("permanent_delete_courier", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –¢–µ—Å—Ç 8: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
    print("\n8Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò - –î–û–°–¢–£–ü –¢–û–õ–¨–ö–û –î–õ–Ø –ê–î–ú–ò–ù–û–í")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –±–µ–∑ —Ç–æ–∫–µ–Ω–∞
        response_no_auth = requests.get(f"{BACKEND_URL}/admin/couriers/inactive")
        print(f"üîí –ó–∞–ø—Ä–æ—Å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: HTTP {response_no_auth.status_code}")
        
        if response_no_auth.status_code == 401:
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            security_test_1 = True
        else:
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            security_test_1 = False
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø —Å –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º
        fake_headers = {"Authorization": "Bearer fake_token_123"}
        response_fake_auth = requests.get(f"{BACKEND_URL}/admin/couriers/inactive", headers=fake_headers)
        print(f"üîí –ó–∞–ø—Ä–æ—Å —Å –ø–æ–¥–¥–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º: HTTP {response_fake_auth.status_code}")
        
        if response_fake_auth.status_code == 401:
            print(f"‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –¥–æ—Å—Ç—É–ø —Å –ø–æ–¥–¥–µ–ª—å–Ω—ã–º —Ç–æ–∫–µ–Ω–æ–º")
            security_test_2 = True
        else:
            print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–¥–µ–ª—å–Ω–æ–≥–æ —Ç–æ–∫–µ–Ω–∞")
            security_test_2 = False
        
        if security_test_1 and security_test_2:
            test_results.append(("security_check", True, "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å endpoints –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"))
        else:
            test_results.append(("security_check", False, "–ü—Ä–æ–±–ª–µ–º—ã —Å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å—é"))
            
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê –ü–†–û–í–ï–†–ö–ò –ë–ï–ó–û–ü–ê–°–ù–û–°–¢–ò: {e}")
        test_results.append(("security_check", False, f"–ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}"))
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 100)
    print("üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –ù–ï–ê–ö–¢–ò–í–ù–´–• –ö–£–†–¨–ï–†–û–í")
    print("=" * 100)
    
    passed_tests = sum(1 for _, result, _ in test_results if result is True)
    failed_tests = sum(1 for _, result, _ in test_results if result is False)
    na_tests = sum(1 for _, result, _ in test_results if result == "NA")
    total_tests = len(test_results)
    
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {passed_tests}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ —Ç–µ—Å—Ç–æ–≤: {failed_tests}")
    print(f"‚ÑπÔ∏è –ù–µ–ø—Ä–∏–º–µ–Ω–∏–º–æ: {na_tests}")
    print(f"üìà –û–±—â–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞: {(passed_tests / (total_tests - na_tests) * 100):.1f}%" if (total_tests - na_tests) > 0 else "N/A")
    
    print("\n–î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
    for test_name, result, comment in test_results:
        status_icon = "‚úÖ" if result is True else "‚ùå" if result is False else "‚ÑπÔ∏è"
        print(f"{status_icon} {test_name}: {comment}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    critical_tests = ["admin_authorization", "get_inactive_couriers", "activate_courier", "permanent_delete_courier"]
    critical_passed = all(result is True for test_name, result, _ in test_results if test_name in critical_tests and result != "NA")
    
    if critical_passed:
        print("\nüéâ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
        print("‚úÖ –í—Å–µ backend endpoints –¥–ª—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä—É—é—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ")
        print("‚úÖ –ê–∫—Ç–∏–≤–∞—Ü–∏—è –∏ –ø–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –∫—É—Ä—å–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–∞–∫ –æ–∂–∏–¥–∞–µ—Ç—Å—è")
        print("‚úÖ Backend –≥–æ—Ç–æ–≤ –¥–ª—è –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ —Å frontend UI")
        return True
    else:
        print("\nüö® –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –¢–ï–°–¢–´ –ù–ï –ü–†–û–ô–î–ï–ù–´!")
        print("‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤")
        return False

if __name__ == "__main__":
    success = test_inactive_couriers_functionality()
    sys.exit(0 if success else 1)