#!/usr/bin/env python3
"""
üèóÔ∏è –°–û–ó–î–ê–ù–ò–ï –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–• –î–õ–Ø –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø –§–û–†–ú–´ –ü–†–ò–Å–ú–ê –ó–ê–Ø–í–û–ö
"""

import requests
import json
import uuid
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://cargo-tracker-31.preview.emergentagent.com/api"
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

def setup_test_data():
    session = requests.Session()
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        response = session.post(
            f"{BACKEND_URL}/auth/login",
            json=ADMIN_CREDENTIALS,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            data = response.json()
            admin_token = data["access_token"]
            session.headers.update({
                "Authorization": f"Bearer {admin_token}"
            })
            print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —É—Å–ø–µ—à–Ω–∞")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {response.status_code}")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–∫–ª–∞–¥—ã
    warehouses_to_create = [
        {
            "name": "–î—É—à–∞–Ω–±–µ –°–∫–ª–∞–¥ ‚Ññ1",
            "location": "–î—É—à–∞–Ω–±–µ, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
            "address": "–î—É—à–∞–Ω–±–µ, –ø—Ä–æ—Å–ø–µ–∫—Ç –†—É–¥–∞–∫–∏, 123",
            "blocks_count": 2,
            "shelves_per_block": 2,
            "cells_per_shelf": 10
        },
        {
            "name": "–•—É–¥–∂–∞–Ω–¥ –°–∫–ª–∞–¥ ‚Ññ1",
            "location": "–•—É–¥–∂–∞–Ω–¥, –¢–∞–¥–∂–∏–∫–∏—Å—Ç–∞–Ω",
            "address": "–•—É–¥–∂–∞–Ω–¥, —É–ª. –õ–µ–Ω–∏–Ω–∞, 456",
            "blocks_count": 1,
            "shelves_per_block": 3,
            "cells_per_shelf": 15
        }
    ]
    
    created_warehouses = []
    
    for warehouse_data in warehouses_to_create:
        try:
            response = session.post(
                f"{BACKEND_URL}/admin/warehouses",
                json=warehouse_data,
                headers={"Content-Type": "application/json"}
            )
            
            if response.status_code == 200:
                warehouse = response.json()
                created_warehouses.append(warehouse)
                print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Å–∫–ª–∞–¥: {warehouse_data['name']}")
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞ {warehouse_data['name']}: HTTP {response.status_code}")
                print(f"   –û—Ç–≤–µ—Ç: {response.text}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–∫–ª–∞–¥–∞ {warehouse_data['name']}: {e}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø–æ—Å—Ç—É–ø–∏–≤—à–∏—Ö –≥—Ä—É–∑–∞—Ö
    # –°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –∑–∞–±–æ—Ä –≥—Ä—É–∑–∞
    pickup_request_data = {
        "sender_full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å –ó–∞—è–≤–∫–∏",
        "sender_phone": "+79991234567",
        "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è –ø—Ä–∏—ë–º–∞",
        "pickup_address": "–ú–æ—Å–∫–≤–∞, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, 789",
        "pickup_date": "2025-01-16",
        "pickup_time_from": "10:00",
        "pickup_time_to": "18:00",
        "delivery_method": "pickup",
        "courier_fee": 500.0,
        "weight": 10.0,
        "declared_value": 3600.0,
        "description": "–¢–µ—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≥—Ä—É–∑–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ñ–æ—Ä–º—ã –ø—Ä–∏—ë–º–∞"
    }
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∑–∞—è–≤–∫—É –Ω–∞ –∑–∞–±–æ—Ä –≥—Ä—É–∑–∞ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω–∞
        response = session.post(
            f"{BACKEND_URL}/admin/courier/pickup-request",
            json=pickup_request_data,
            headers={"Content-Type": "application/json"}
        )
        
        if response.status_code == 200:
            pickup_request = response.json()
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–∞–±–æ—Ä –≥—Ä—É–∑–∞: {pickup_request.get('request_number', 'N/A')}")
            
            # –¢–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞
            notification_data = {
                "request_id": pickup_request.get("id"),
                "request_number": pickup_request.get("request_number"),
                "request_type": "pickup_delivery",
                "courier_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö—É—Ä—å–µ—Ä",
                "courier_id": "test-courier-id",
                "sender_full_name": pickup_request_data["sender_full_name"],
                "sender_phone": pickup_request_data["sender_phone"],
                "pickup_address": pickup_request_data["pickup_address"],
                "destination": "–°–∫–ª–∞–¥ –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è",
                "courier_fee": pickup_request_data["courier_fee"],
                "payment_method": "cash",
                "delivered_at": datetime.utcnow().isoformat(),
                "status": "pending",
                "created_at": datetime.utcnow().isoformat()
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä—è–º—É—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö (—Å–∏–º—É–ª—è—Ü–∏—è)
            print(f"‚úÖ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞")
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–±–æ—Ä: HTTP {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –∑–∞–±–æ—Ä: {e}")
    
    # –í—ã–≤–æ–¥–∏–º –∏—Ç–æ–≥–æ–≤—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    print(f"\nüìä –ò–¢–û–ì–ò –°–û–ó–î–ê–ù–ò–Ø –¢–ï–°–¢–û–í–´–• –î–ê–ù–ù–´–•:")
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Å–∫–ª–∞–¥–æ–≤: {len(created_warehouses)}")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
    try:
        response = session.get(f"{BACKEND_URL}/warehouses")
        if response.status_code == 200:
            all_warehouses = response.json()
            print(f"üì¶ –í—Å–µ–≥–æ —Å–∫–ª–∞–¥–æ–≤ –≤ —Å–∏—Å—Ç–µ–º–µ: {len(all_warehouses)}")
            for warehouse in all_warehouses:
                print(f"   - {warehouse.get('name', 'N/A')} (–õ–æ–∫–∞—Ü–∏—è: {warehouse.get('location', 'N/A')})")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {e}")

if __name__ == "__main__":
    setup_test_data()