#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: DELETE endpoint –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞ –≤ TAJLINE.TJ
–§–æ–∫—É—Å –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Å–µ—Ç–µ–≤—ã—Ö –ø—Ä–æ–±–ª–µ–º
"""

import requests
import json
import sys
import time
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://cargo-tracker-28.preview.emergentagent.com/api"

# –£—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
ADMIN_CREDENTIALS = {
    "phone": "+79999888777",
    "password": "admin123"
}

def make_request_with_retry(method, endpoint, headers=None, json_data=None, params=None, max_retries=3):
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è HTTP –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏"""
    url = f"{BACKEND_URL}{endpoint}"
    
    for attempt in range(max_retries):
        try:
            response = requests.request(
                method=method,
                url=url, 
                headers=headers,
                json=json_data,
                params=params,
                timeout=30
            )
            return response
        except requests.exceptions.RequestException as e:
            print(f"‚ö†Ô∏è –ü–æ–ø—ã—Ç–∫–∞ {attempt + 1}/{max_retries} –Ω–µ —É–¥–∞–ª–∞—Å—å: {e}")
            if attempt < max_retries - 1:
                time.sleep(2)  # –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
            else:
                print(f"‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã –¥–ª—è {method} {endpoint}")
                return None

def authenticate_admin():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    print(f"\nüîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    
    response = make_request_with_retry("POST", "/auth/login", json_data=ADMIN_CREDENTIALS)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {response.status_code if response else 'No response'}")
        return None
    
    data = response.json()
    token = data.get("access_token")
    user_info = data.get("user", {})
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: {user_info.get('full_name', 'Unknown')} (—Ä–æ–ª—å: {user_info.get('role', 'Unknown')})")
    return token

def create_test_courier(token):
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞"""
    print(f"\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤
    headers = {"Authorization": f"Bearer {token}"}
    warehouses_response = make_request_with_retry("GET", "/warehouses", headers=headers)
    
    if not warehouses_response or warehouses_response.status_code != 200:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤")
        return None
    
    warehouses = warehouses_response.json()
    if not warehouses:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫–ª–∞–¥–æ–≤")
        return None
    
    warehouse_id = warehouses[0]["id"]
    warehouse_name = warehouses[0]["name"]
    print(f"üì¶ –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–∫–ª–∞–¥: {warehouse_name}")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    import random
    test_phone = f"+7999{random.randint(1000000, 9999999)}"
    
    courier_data = {
        "full_name": "–¢–µ—Å—Ç–æ–≤—ã–π –ö—É—Ä—å–µ—Ä DELETE Final",
        "phone": test_phone,
        "password": "testcourier123",
        "address": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –∫—É—Ä—å–µ—Ä–∞",
        "transport_type": "car",
        "transport_number": f"FINAL{random.randint(100, 999)}",
        "transport_capacity": 500.0,
        "assigned_warehouse_id": warehouse_id
    }
    
    response = make_request_with_retry("POST", "/admin/couriers/create", headers=headers, json_data=courier_data)
    
    if not response or response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫—É—Ä—å–µ—Ä–∞: {response.status_code if response else 'No response'}")
        if response:
            print(f"Response: {response.text}")
        return None
    
    courier_info = response.json()
    courier_id = courier_info.get("courier_id")
    print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä —Å–æ–∑–¥–∞–Ω: ID {courier_id}, —Ç–µ–ª–µ—Ñ–æ–Ω {test_phone}")
    return courier_id, test_phone

def test_delete_endpoint_comprehensive(token, courier_id):
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ DELETE endpoint"""
    print(f"\nüß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DELETE ENDPOINT")
    print("=" * 60)
    
    headers = {"Authorization": f"Bearer {token}"}
    test_results = []
    
    # –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ endpoint —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ –¥–æ—Å—Ç—É–ø–µ–Ω
    print(f"\nüß™ –¢–ï–°–¢ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ DELETE endpoint...")
    
    response = make_request_with_retry("DELETE", f"/admin/couriers/{courier_id}", headers=headers)
    
    if not response:
        print("‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        test_results.append(("–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DELETE endpoint", False))
    elif response.status_code == 405:
        print("‚ùå –¢–ï–°–¢ 1 –ü–†–û–í–ê–õ–ï–ù: Endpoint –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 405 Method Not Allowed")
        test_results.append(("–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DELETE endpoint", False))
    else:
        print(f"‚úÖ –¢–ï–°–¢ 1 –ü–†–û–ô–î–ï–ù: Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω (—Å—Ç–∞—Ç—É—Å: {response.status_code})")
        test_results.append(("–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å DELETE endpoint", True))
        
        # –ï—Å–ª–∏ –∫—É—Ä—å–µ—Ä –±—ã–ª —É–¥–∞–ª–µ–Ω, –ø—Ä–æ–≤–µ—Ä–∏–º soft delete
        if response.status_code == 200:
            try:
                data = response.json()
                message = data.get("message", "")
                deleted_courier_id = data.get("courier_id", "")
                
                print(f"üìù –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞: {message}")
                
                if "—É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω" in message and deleted_courier_id == courier_id:
                    print("‚úÖ –£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
                    test_results.append(("–£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ", True))
                    
                    # –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ soft delete
                    print(f"\nüß™ –¢–ï–°–¢ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ soft delete...")
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫—É—Ä—å–µ—Ä–µ
                    get_response = make_request_with_retry("GET", f"/admin/couriers/{courier_id}", headers=headers)
                    
                    if get_response and get_response.status_code == 200:
                        courier_data = get_response.json()
                        is_active = courier_data.get("is_active", True)
                        deleted = courier_data.get("deleted", False)
                        
                        if not is_active and deleted:
                            print("‚úÖ –¢–ï–°–¢ 2 –ü–†–û–ô–î–ï–ù: Soft delete –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω (is_active=false, deleted=true)")
                            test_results.append(("Soft delete", True))
                        else:
                            print(f"‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ñ–ª–∞–≥–∏ - is_active: {is_active}, deleted: {deleted}")
                            test_results.append(("Soft delete", False))
                    elif get_response and get_response.status_code == 404:
                        print("‚úÖ –¢–ï–°–¢ 2 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ (404)")
                        test_results.append(("Soft delete", True))
                    else:
                        print("‚ùå –¢–ï–°–¢ 2 –ü–†–û–í–ê–õ–ï–ù: –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∫—É—Ä—å–µ—Ä–∞")
                        test_results.append(("Soft delete", False))
                    
                    # –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –∫—É—Ä—å–µ—Ä–æ–≤
                    print(f"\nüß™ –¢–ï–°–¢ 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞...")
                    
                    list_response = make_request_with_retry("GET", "/admin/couriers/list", headers=headers)
                    
                    if list_response and list_response.status_code == 200:
                        data = list_response.json()
                        couriers = data.get("couriers", []) if isinstance(data, dict) else data
                        
                        # –ò—â–µ–º —É–¥–∞–ª–µ–Ω–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö
                        found_active = False
                        for courier in couriers:
                            if courier.get("id") == courier_id and courier.get("is_active", True):
                                found_active = True
                                break
                        
                        if not found_active:
                            print("‚úÖ –¢–ï–°–¢ 3 –ü–†–û–ô–î–ï–ù: –ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞")
                            test_results.append(("–ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", True))
                        else:
                            print("‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –ö—É—Ä—å–µ—Ä –≤—Å–µ –µ—â–µ –∞–∫—Ç–∏–≤–µ–Ω –≤ —Å–ø–∏—Å–∫–µ")
                            test_results.append(("–ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", False))
                    else:
                        print("‚ùå –¢–ï–°–¢ 3 –ü–†–û–í–ê–õ–ï–ù: –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∫—É—Ä—å–µ—Ä–æ–≤")
                        test_results.append(("–ò—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏–µ –∏–∑ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞", False))
                        
                else:
                    print("‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏")
                    test_results.append(("–£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ", False))
                    
            except json.JSONDecodeError:
                print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π JSON –≤ –æ—Ç–≤–µ—Ç–µ")
                test_results.append(("–£—Å–ø–µ—à–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ", False))
    
    # –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞ (—Å–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —ç—Ç–æ–≥–æ —Ç–µ—Å—Ç–∞)
    print(f"\nüß™ –¢–ï–°–¢ 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞...")
    
    fake_courier_id = "00000000-0000-0000-0000-000000000000"
    fake_response = make_request_with_retry("DELETE", f"/admin/couriers/{fake_courier_id}", headers=headers)
    
    if fake_response and fake_response.status_code == 404:
        print("‚úÖ –¢–ï–°–¢ 4 –ü–†–û–ô–î–ï–ù: –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –∫—É—Ä—å–µ—Ä –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 404")
        test_results.append(("–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞", True))
    elif not fake_response:
        print("‚ùå –¢–ï–°–¢ 4 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
        test_results.append(("–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞", False))
    else:
        print(f"‚ùå –¢–ï–°–¢ 4 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è 404, –ø–æ–ª—É—á–µ–Ω {fake_response.status_code}")
        test_results.append(("–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ –∫—É—Ä—å–µ—Ä–∞", False))
    
    # –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    print(f"\nüß™ –¢–ï–°–¢ 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ (–±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)...")
    
    # –°–æ–∑–¥–∞–µ–º –µ—â–µ –æ–¥–Ω–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    security_courier = create_test_courier(token)
    if security_courier:
        security_courier_id, _ = security_courier
        
        no_auth_response = make_request_with_retry("DELETE", f"/admin/couriers/{security_courier_id}")
        
        if no_auth_response and no_auth_response.status_code == 401:
            print("‚úÖ –¢–ï–°–¢ 5 –ü–†–û–ô–î–ï–ù: –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—É—á–∞–µ–º 401 Unauthorized")
            test_results.append(("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", True))
        elif not no_auth_response:
            print("‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –ù–µ—Ç –æ—Ç–≤–µ—Ç–∞ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞")
            test_results.append(("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", False))
        else:
            print(f"‚ùå –¢–ï–°–¢ 5 –ü–†–û–í–ê–õ–ï–ù: –û–∂–∏–¥–∞–ª—Å—è 401, –ø–æ–ª—É—á–µ–Ω {no_auth_response.status_code}")
            test_results.append(("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", False))
        
        # –û—á–∏—â–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
        cleanup_response = make_request_with_retry("DELETE", f"/admin/couriers/{security_courier_id}", headers=headers)
        if cleanup_response and cleanup_response.status_code == 200:
            print("üßπ –¢–µ—Å—Ç–æ–≤—ã–π –∫—É—Ä—å–µ—Ä –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ —É–¥–∞–ª–µ–Ω")
    else:
        print("‚ö†Ô∏è –¢–ï–°–¢ 5 –ü–†–û–ü–£–©–ï–ù: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∫—É—Ä—å–µ—Ä–∞ –¥–ª—è —Ç–µ—Å—Ç–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏")
        test_results.append(("–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", "–ü–†–û–ü–£–©–ï–ù"))
    
    return test_results

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üéØ –§–ò–ù–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï DELETE ENDPOINT –î–õ–Ø –ö–£–†–¨–ï–†–û–í")
    print("=" * 80)
    
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    admin_token = authenticate_admin()
    if not admin_token:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è –∫–∞–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞
    courier_result = create_test_courier(admin_token)
    if not courier_result:
        print("‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∫—É—Ä—å–µ—Ä–∞")
        sys.exit(1)
    
    courier_id, courier_phone = courier_result
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    test_results = test_delete_endpoint_comprehensive(admin_token, courier_id)
    
    # –ü–æ–¥–≤–µ–¥–µ–Ω–∏–µ –∏—Ç–æ–≥–æ–≤
    print("\n" + "=" * 80)
    print("üìä –§–ò–ù–ê–õ–¨–ù–´–ï –ò–¢–û–ì–ò –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø DELETE ENDPOINT –î–õ–Ø –ö–£–†–¨–ï–†–û–í")
    print("=" * 80)
    
    passed_tests = 0
    total_tests = 0
    
    for test_name, result in test_results:
        if result == "–ü–†–û–ü–£–©–ï–ù":
            print(f"‚ö†Ô∏è  {test_name}: –ü–†–û–ü–£–©–ï–ù")
        elif result:
            print(f"‚úÖ {test_name}: –ü–†–û–ô–î–ï–ù")
            passed_tests += 1
            total_tests += 1
        else:
            print(f"‚ùå {test_name}: –ü–†–û–í–ê–õ–ï–ù")
            total_tests += 1
    
    success_rate = (passed_tests / total_tests * 100) if total_tests > 0 else 0
    
    print(f"\nüéØ –§–ò–ù–ê–õ–¨–ù–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢: {passed_tests}/{total_tests} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ ({success_rate:.1f}%)")
    
    if success_rate >= 85:
        print("\nüéâ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–°–ü–ï–•: DELETE endpoint –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        print("‚úÖ Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω –∏ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 405 Method Not Allowed")
        print("‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—è–µ—Ç –∫—É—Ä—å–µ—Ä–æ–≤")
        print("‚úÖ –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω soft delete (is_active=false, deleted=true)")
        print("‚úÖ –ö—É—Ä—å–µ—Ä –∏—Å—á–µ–∑–∞–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö")
        print("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫—É—Ä—å–µ—Ä–æ–≤ (404)")
        print("‚úÖ –¢—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401 –±–µ–∑ —Ç–æ–∫–µ–Ω–∞)")
        
        print("\nüìã –ó–ê–ö–õ–Æ–ß–ï–ù–ò–ï:")
        print("–ù–æ–≤—ã–π DELETE /api/admin/couriers/{courier_id} endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ.")
        print("–í—Å–µ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã:")
        print("- Endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
        print("- –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω soft delete")
        print("- –û–±–µ—Å–ø–µ—á–µ–Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å")
        print("- –ö–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
        
    elif success_rate >= 70:
        print("\n‚ö†Ô∏è  –ß–ê–°–¢–ò–ß–ù–´–ô –£–°–ü–ï–•: DELETE endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
        print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–∏—Ç—å –≤—ã—è–≤–ª–µ–Ω–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã")
    else:
        print("\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´: DELETE endpoint —Ç—Ä–µ–±—É–µ—Ç —Å–µ—Ä—å–µ–∑–Ω—ã—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π")
    
    print(f"\nüïí –§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")

if __name__ == "__main__":
    main()