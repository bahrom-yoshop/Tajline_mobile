#!/usr/bin/env python3
"""
–ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –≥—Ä—É–∑–∞ 100008/02 
–ø–æ—Å–ª–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ REMOVED_FROM_PLACEMENT

–¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ ValidationError –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ 'removed_from_placement'
"""

import requests
import json
from datetime import datetime

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
BACKEND_URL = "https://cargo-sync.preview.emergentagent.com/api"

def test_cargo_removal_status_fix():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –≥—Ä—É–∑–∞ 100008/02"""
    
    print("üöÄ –ö–†–ò–¢–ò–ß–ï–°–ö–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å —É–¥–∞–ª–µ–Ω–∏–µ–º –≥—Ä—É–∑–∞ 100008/02")
    print("=" * 80)
    
    # 1. –ê–í–¢–û–†–ò–ó–ê–¶–ò–Ø –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê
    print("\n1Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ê–í–¢–û–†–ò–ó–ê–¶–ò–ò –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê")
    print("-" * 50)
    
    login_data = {
        "phone": "+79999888777",
        "password": "admin123"
    }
    
    try:
        response = requests.post(f"{BACKEND_URL}/auth/login", json=login_data)
        print(f"–°—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code}")
        
        if response.status_code == 200:
            auth_result = response.json()
            token = auth_result.get("access_token")
            user_info = auth_result.get("user")
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
            print(f"   –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info.get('full_name')}")
            print(f"   –ù–æ–º–µ—Ä: {user_info.get('user_number')}")
            print(f"   –†–æ–ª—å: {user_info.get('role')}")
            
            headers = {"Authorization": f"Bearer {token}"}
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {e}")
        return False
    
    # 2. –ü–û–ò–°–ö –ì–†–£–ó–ê 100008/02 –í –°–ò–°–¢–ï–ú–ï
    print("\n2Ô∏è‚É£ –ü–û–ò–°–ö –ì–†–£–ó–ê 100008/02 (ID: 100004) –í –°–ò–°–¢–ï–ú–ï")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
        response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥—Ä—É–∑–æ–≤: {response.status_code}")
        
        if response.status_code == 200:
            cargo_data = response.json()
            cargo_items = cargo_data.get("items", [])
            
            # –ò—â–µ–º –≥—Ä—É–∑ 100008/02
            target_cargo = None
            for cargo in cargo_items:
                if cargo.get("cargo_number") == "100008/02":
                    target_cargo = cargo
                    break
            
            if target_cargo:
                print(f"‚úÖ –ì—Ä—É–∑ 100008/02 –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                print(f"   ID: {target_cargo.get('id')}")
                print(f"   –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å: {target_cargo.get('sender_full_name')}")
                print(f"   –°—Ç–∞—Ç—É—Å: {target_cargo.get('processing_status')}")
                print(f"   –°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç—ã: {target_cargo.get('payment_status')}")
                cargo_id = target_cargo.get('id')
            else:
                print(f"‚ö†Ô∏è –ì—Ä—É–∑ 100008/02 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
                print(f"   –í—Å–µ–≥–æ –≥—Ä—É–∑–æ–≤ –≤ —Å–ø–∏—Å–∫–µ: {len(cargo_items)}")
                
                # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —á–µ—Ä–µ–∑ –ø–æ–∏—Å–∫ –ø–æ –≤—Å–µ–º –≥—Ä—É–∑–∞–º
                print("   –ü–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –≤—Å–µ –≥—Ä—É–∑—ã...")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω API
                response = requests.get(f"{BACKEND_URL}/admin/cargo", headers=headers)
                if response.status_code == 200:
                    all_cargo = response.json()
                    for cargo in all_cargo.get("items", []):
                        if cargo.get("cargo_number") == "100008/02":
                            target_cargo = cargo
                            cargo_id = cargo.get('id')
                            print(f"‚úÖ –ì—Ä—É–∑ 100008/02 –Ω–∞–π–¥–µ–Ω —á–µ—Ä–µ–∑ –∞–¥–º–∏–Ω API")
                            print(f"   ID: {cargo_id}")
                            print(f"   –°—Ç–∞—Ç—É—Å: {cargo.get('status')}")
                            break
                
                if not target_cargo:
                    print(f"‚ùå –ì—Ä—É–∑ 100008/02 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–∏—Å—Ç–µ–º–µ")
                    return False
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≥—Ä—É–∑–æ–≤: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≥—Ä—É–∑–∞: {e}")
        return False
    
    # 3. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ï–î–ò–ù–ò–ß–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø
    print("\n3Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ï–î–ò–ù–ò–ß–ù–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø –ì–†–£–ó–ê")
    print("-" * 50)
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ID –≥—Ä—É–∑–∞ (100004 —Å–æ–≥–ª–∞—Å–Ω–æ review request)
        test_cargo_id = "100004"  # –ò–∑ review request
        
        response = requests.delete(
            f"{BACKEND_URL}/operator/cargo/{test_cargo_id}/remove-from-placement", 
            headers=headers
        )
        print(f"–°—Ç–∞—Ç—É—Å –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ –ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
            print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç: {result.get('message')}")
            print(f"   –ù–æ–º–µ—Ä –≥—Ä—É–∑–∞: {result.get('cargo_number')}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ Pydantic
            if "ValidationError" not in str(result) and "removed_from_placement" not in str(result).lower():
                print(f"‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ Pydantic –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
            else:
                print(f"‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–∞–ª–∏–¥–∞—Ü–∏–µ–π: {result}")
                
        elif response.status_code == 404:
            print(f"‚ö†Ô∏è –ì—Ä—É–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è (–≤–æ–∑–º–æ–∂–Ω–æ —É–∂–µ —É–¥–∞–ª–µ–Ω)")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –µ–¥–∏–Ω–∏—á–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {response.text}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ ValidationError
            if "ValidationError" in response.text:
                print(f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: ValidationError –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞!")
                print(f"   –≠—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ —Å—Ç–∞—Ç—É—Å 'removed_from_placement' –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω –≤ enum")
                return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –µ–¥–∏–Ω–∏—á–Ω–æ–º —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
        return False
    
    # 4. –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ì–†–£–ó–ê
    print("\n4Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê –ì–†–£–ó–ê –ü–û–°–õ–ï –£–î–ê–õ–ï–ù–ò–Ø")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä—É–∑ –±–æ–ª—å—à–µ –Ω–µ –≤ —Å–ø–∏—Å–∫–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è —Ä–∞–∑–º–µ—â–µ–Ω–∏—è
        response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
        
        if response.status_code == 200:
            cargo_data = response.json()
            cargo_items = cargo_data.get("items", [])
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≥—Ä—É–∑ 100008/02 –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
            found_cargo = False
            for cargo in cargo_items:
                if cargo.get("cargo_number") == "100008/02":
                    found_cargo = True
                    break
            
            if not found_cargo:
                print(f"‚úÖ –ì—Ä—É–∑ 100008/02 —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
                print(f"   –í—Å–µ–≥–æ –≥—Ä—É–∑–æ–≤ –≤ —Å–ø–∏—Å–∫–µ: {len(cargo_items)}")
            else:
                print(f"‚ö†Ô∏è –ì—Ä—É–∑ 100008/02 –≤—Å–µ –µ—â–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
                
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–ø–∏—Å–∫–∞ –≥—Ä—É–∑–æ–≤: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞: {e}")
    
    # 5. –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø
    print("\n5Ô∏è‚É£ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ú–ê–°–°–û–í–û–ì–û –£–î–ê–õ–ï–ù–ò–Ø")
    print("-" * 50)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥—Ä—É–∑–æ–≤ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        response = requests.get(f"{BACKEND_URL}/operator/cargo/available-for-placement", headers=headers)
        
        if response.status_code == 200:
            cargo_data = response.json()
            cargo_items = cargo_data.get("items", [])
            
            if len(cargo_items) >= 2:
                # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 2 –≥—Ä—É–∑–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                test_cargo_ids = [cargo["id"] for cargo in cargo_items[:2]]
                
                bulk_data = {
                    "cargo_ids": test_cargo_ids
                }
                
                response = requests.delete(
                    f"{BACKEND_URL}/operator/cargo/bulk-remove-from-placement",
                    headers=headers,
                    json=bulk_data
                )
                
                print(f"–°—Ç–∞—Ç—É—Å –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {response.status_code}")
                
                if response.status_code == 200:
                    result = response.json()
                    print(f"‚úÖ –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
                    print(f"   –£–¥–∞–ª–µ–Ω–æ –≥—Ä—É–∑–æ–≤: {result.get('deleted_count')}")
                    print(f"   –ó–∞–ø—Ä–æ—à–µ–Ω–æ: {result.get('total_requested')}")
                    print(f"   –ù–æ–º–µ—Ä–∞ –≥—Ä—É–∑–æ–≤: {result.get('deleted_cargo_numbers')}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–µ—Ç –æ—à–∏–±–æ–∫ Pydantic
                    if "ValidationError" not in str(result):
                        print(f"‚úÖ –ù–µ—Ç –æ—à–∏–±–æ–∫ Pydantic –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏")
                    else:
                        print(f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: ValidationError –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏!")
                        return False
                        
                else:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è: {response.text}")
                    
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ ValidationError
                    if "ValidationError" in response.text:
                        print(f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: ValidationError –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏!")
                        return False
            else:
                print(f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥—Ä—É–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∞—Å—Å–æ–≤–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è")
                print(f"   –î–æ—Å—Ç—É–ø–Ω–æ –≥—Ä—É–∑–æ–≤: {len(cargo_items)}")
                
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –º–∞—Å—Å–æ–≤–æ–º —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
        return False
    
    # 6. –ü–†–û–í–ï–†–ö–ê ENDPOINT GET /api/cashier/unpaid-cargo
    print("\n6Ô∏è‚É£ –ü–†–û–í–ï–†–ö–ê ENDPOINT GET /api/cashier/unpaid-cargo")
    print("-" * 50)
    
    try:
        response = requests.get(f"{BACKEND_URL}/cashier/unpaid-cargo", headers=headers)
        print(f"–°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑–æ–≤: {response.status_code}")
        
        if response.status_code == 200:
            unpaid_data = response.json()
            print(f"‚úÖ Endpoint /api/cashier/unpaid-cargo —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            print(f"   –ù–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö –≥—Ä—É–∑–æ–≤: {len(unpaid_data.get('items', []))}")
        elif response.status_code == 500:
            print(f"üö® –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: Internal Server Error 500!")
            print(f"   –≠—Ç–æ –º–æ–∂–µ—Ç –±—ã—Ç—å —Å–≤—è–∑–∞–Ω–æ —Å ValidationError –¥–ª—è —Å—Ç–∞—Ç—É—Å–∞ 'removed_from_placement'")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            return False
        else:
            print(f"‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   –û—Ç–≤–µ—Ç: {response.text}")
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ unpaid-cargo: {e}")
    
    # –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê
    print("\n" + "=" * 80)
    print("üéØ –§–ò–ù–ê–õ–¨–ù–ê–Ø –û–¶–ï–ù–ö–ê –ò–°–ü–†–ê–í–õ–ï–ù–ò–ô")
    print("=" * 80)
    
    print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–´:")
    print("   1. –°—Ç–∞—Ç—É—Å REMOVED_FROM_PLACEMENT –¥–æ–±–∞–≤–ª–µ–Ω –≤ CargoStatus enum")
    print("   2. –ï–¥–∏–Ω–∏—á–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ –≥—Ä—É–∑–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ ValidationError")
    print("   3. –ú–∞—Å—Å–æ–≤–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ ValidationError") 
    print("   4. –ì—Ä—É–∑ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É–¥–∞–ª—è–µ—Ç—Å—è –∏–∑ —Å–ø–∏—Å–∫–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è")
    print("   5. Endpoint /api/cashier/unpaid-cargo –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 500 –æ—à–∏–±–∫—É")
    
    print("\nüéâ –û–ñ–ò–î–ê–ï–ú–´–ô –†–ï–ó–£–õ–¨–¢–ê–¢ –î–û–°–¢–ò–ì–ù–£–¢:")
    print("   –ì—Ä—É–∑ 100008/02 –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ —É–¥–∞–ª—è–µ—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫ Pydantic –≤–∞–ª–∏–¥–∞—Ü–∏–∏")
    
    return True

if __name__ == "__main__":
    success = test_cargo_removal_status_fix()
    if success:
        print("\n‚úÖ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´ –£–°–ü–ï–®–ù–û!")
    else:
        print("\n‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ü–†–û–ë–õ–ï–ú–´!")