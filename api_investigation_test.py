#!/usr/bin/env python3
"""
API Investigation Test - Understanding the current API structure
"""

import requests
import json
import os

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://placement-manager.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

# –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞
OPERATOR_CREDENTIALS = {
    "phone": "+79777888999",
    "password": "warehouse123"
}

def authenticate():
    """–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è"""
    session = requests.Session()
    
    response = session.post(
        f"{API_BASE}/auth/login",
        json=OPERATOR_CREDENTIALS,
        headers={"Content-Type": "application/json"},
        timeout=30
    )
    
    if response.status_code == 200:
        data = response.json()
        auth_token = data.get("access_token")
        session.headers.update({
            "Authorization": f"Bearer {auth_token}"
        })
        return session
    return None

def investigate_apis():
    """–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ API —Å—Ç—Ä—É–∫—Ç—É—Ä—ã"""
    session = authenticate()
    if not session:
        print("‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
        return
    
    print("üîç –ò–°–°–õ–ï–î–û–í–ê–ù–ò–ï API –°–¢–†–£–ö–¢–£–†–´")
    print("=" * 60)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º available-for-placement
    print("\n1Ô∏è‚É£ GET /api/operator/cargo/available-for-placement")
    try:
        response = session.get(f"{API_BASE}/operator/cargo/available-for-placement", timeout=30)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            items = data.get("items", [])
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞—è–≤–æ–∫: {len(items)}")
            if items:
                first_item = items[0]
                print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏:")
                print(json.dumps(first_item, indent=2, ensure_ascii=False)[:1000] + "...")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º placement-progress
    print("\n2Ô∏è‚É£ GET /api/operator/placement-progress")
    try:
        response = session.get(f"{API_BASE}/operator/placement-progress", timeout=30)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            print(f"–î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞:")
            print(json.dumps(data, indent=2, ensure_ascii=False))
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º individual-units-for-placement
    print("\n3Ô∏è‚É£ GET /api/operator/cargo/individual-units-for-placement")
    try:
        response = session.get(f"{API_BASE}/operator/cargo/individual-units-for-placement", timeout=30)
        print(f"Status: {response.status_code}")
        if response.status_code == 200:
            data = response.json()
            items = data.get("items", [])
            print(f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥—Ä—É–ø–ø: {len(items)}")
            if items:
                first_group = items[0]
                print(f"–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–µ—Ä–≤–æ–π –≥—Ä—É–ø–ø—ã:")
                print(json.dumps(first_group, indent=2, ensure_ascii=False)[:1000] + "...")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º placement-status –¥–ª—è –ø–µ—Ä–≤–æ–π –∑–∞—è–≤–∫–∏
    print("\n4Ô∏è‚É£ GET /api/operator/cargo/{cargo_id}/placement-status")
    try:
        # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–≤—É—é –∑–∞—è–≤–∫—É
        response = session.get(f"{API_BASE}/operator/cargo/available-for-placement", timeout=30)
        if response.status_code == 200:
            data = response.json()
            items = data.get("items", [])
            if items:
                cargo_id = items[0].get("id")
                cargo_number = items[0].get("cargo_number")
                
                status_response = session.get(f"{API_BASE}/operator/cargo/{cargo_id}/placement-status", timeout=30)
                print(f"Status: {status_response.status_code}")
                if status_response.status_code == 200:
                    status_data = status_response.json()
                    print(f"–î–µ—Ç–∞–ª–∏ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –¥–ª—è {cargo_number}:")
                    print(json.dumps(status_data, indent=2, ensure_ascii=False)[:1500] + "...")
                else:
                    print(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞: {status_response.status_code}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    investigate_apis()