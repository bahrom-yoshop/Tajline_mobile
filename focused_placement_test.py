#!/usr/bin/env python3
"""
üéØ FOCUSED TEST: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è POST /api/operator/cargo/place-individual –≤ TAJLINE.TJ
"""

import requests
import json
import os

BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://placement-manager.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

def test_critical_improvements():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π"""
    session = requests.Session()
    
    # 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å–∫–ª–∞–¥–∞...")
    login_response = session.post(f'{API_BASE}/auth/login', json={'phone': '+79777888999', 'password': 'warehouse123'})
    
    if login_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {login_response.status_code}")
        return False
    
    token = login_response.json().get('access_token')
    session.headers.update({'Authorization': f'Bearer {token}'})
    print("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞")
    
    # 2. –¢–µ—Å—Ç GET /api/operator/placement-progress
    print("\nüéØ –¢–ï–°–¢ 1: GET /api/operator/placement-progress")
    progress_response = session.get(f'{API_BASE}/operator/placement-progress')
    
    if progress_response.status_code == 200:
        data = progress_response.json()
        required_fields = ["total_units", "placed_units", "pending_units", "progress_percentage", "progress_text"]
        missing_fields = [field for field in required_fields if field not in data]
        
        if not missing_fields:
            print(f"‚úÖ Endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
            print(f"   üìä total_units: {data['total_units']}")
            print(f"   üìä placed_units: {data['placed_units']}")
            print(f"   üìä pending_units: {data['pending_units']}")
            print(f"   üìä progress_percentage: {data['progress_percentage']}%")
            print(f"   üìä progress_text: '{data['progress_text']}'")
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–ª—è: {missing_fields}")
            return False
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞: {progress_response.status_code}")
        return False
    
    # 3. –ü–æ–ª—É—á–µ–Ω–∏–µ Individual Units –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    print("\nüéØ –¢–ï–°–¢ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ Individual Units")
    units_response = session.get(f'{API_BASE}/operator/cargo/individual-units-for-placement')
    
    if units_response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è Individual Units: {units_response.status_code}")
        return False
    
    units_data = units_response.json()
    items = units_data.get("items", [])
    
    if not items:
        print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö Individual Units –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return False
    
    # –ù–∞–π—Ç–∏ –Ω–µ—Ä–∞–∑–º–µ—â–µ–Ω–Ω—É—é –µ–¥–∏–Ω–∏—Ü—É
    test_unit = None
    for group in items:
        units = group.get("units", [])
        for unit in units:
            if not unit.get("is_placed", False):
                test_unit = unit
                break
        if test_unit:
            break
    
    if not test_unit:
        print("‚ö†Ô∏è –í—Å–µ Individual Units —É–∂–µ —Ä–∞–∑–º–µ—â–µ–Ω—ã, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≥—Ä—É–∑...")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        cargo_data = {
            "sender_full_name": "–¢–µ—Å—Ç –û—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å",
            "sender_phone": "+79999999999",
            "recipient_full_name": "–¢–µ—Å—Ç –ü–æ–ª—É—á–∞—Ç–µ–ª—å", 
            "recipient_phone": "+79888888888",
            "recipient_address": "–î—É—à–∞–Ω–±–µ, —Ç–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å",
            "description": "–¢–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑ –¥–ª—è Individual Units",
            "route": "moscow_to_tajikistan",
            "cargo_items": [
                {
                    "cargo_name": "–¢–µ—Å—Ç–æ–≤—ã–π —Ç–æ–≤–∞—Ä",
                    "quantity": 2,
                    "weight": 5.0,
                    "price_per_kg": 100.0,
                    "total_amount": 1000.0
                }
            ],
            "payment_method": "cash_on_delivery"
        }
        
        create_response = session.post(f'{API_BASE}/operator/cargo/accept', json=cargo_data)
        if create_response.status_code == 200:
            cargo_info = create_response.json()
            cargo_number = cargo_info.get("cargo_number")
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –≥—Ä—É–∑: {cargo_number}")
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ Individual Units
            units_response = session.get(f'{API_BASE}/operator/cargo/individual-units-for-placement')
            if units_response.status_code == 200:
                units_data = units_response.json()
                items = units_data.get("items", [])
                
                # –ò—â–µ–º –Ω–∞—à –Ω–æ–≤—ã–π –≥—Ä—É–∑
                for group in items:
                    if group.get("cargo_number") == cargo_number:
                        units = group.get("units", [])
                        if units:
                            test_unit = units[0]
                            break
        
        if not test_unit:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ Individual Unit –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return False
    
    individual_number = test_unit.get("individual_number")
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–∞ Individual Unit –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {individual_number}")
    
    # 4. –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –†–∞–∑–º–µ—â–µ–Ω–∏–µ –ë–ï–ó warehouse_id
    print(f"\nüéØ –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –¢–ï–°–¢: –†–∞–∑–º–µ—â–µ–Ω–∏–µ Individual Unit –ë–ï–ó warehouse_id")
    print(f"   üìã Individual Number: {individual_number}")
    
    placement_data = {
        "individual_number": individual_number,
        # warehouse_id –ù–ï –£–ö–ê–ó–´–í–ê–ï–ú - –¥–æ–ª–∂–µ–Ω –æ–ø—Ä–µ–¥–µ–ª—è—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏!
        "block_number": 1,
        "shelf_number": 1,
        "cell_number": 3
    }
    
    placement_response = session.post(f'{API_BASE}/operator/cargo/place-individual', json=placement_data)
    
    print(f"   üìä HTTP Status: {placement_response.status_code}")
    
    if placement_response.status_code == 200:
        data = placement_response.json()
        
        if data.get("success", False):
            print("‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –†–ê–ë–û–¢–ê–ï–¢! warehouse_id –æ–ø—Ä–µ–¥–µ–ª–∏–ª—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
            details = []
            if "cargo_name" in data:
                details.append(f"cargo_name: '{data['cargo_name']}'")
            if "application_progress" in data:
                app_progress = data['application_progress']
                details.append(f"application_progress: {app_progress}")
            if "placement_details" in data:
                placement_details = data['placement_details']
                details.append(f"placement_details: {placement_details}")
            
            if details:
                print("‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç:")
                for detail in details:
                    print(f"   üìù {detail}")
            else:
                print("‚ö†Ô∏è –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            
            return True
        else:
            error_message = data.get("message", "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
            print(f"‚ùå –†–∞–∑–º–µ—â–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å: {error_message}")
            return False
    elif placement_response.status_code == 422:
        try:
            error_data = placement_response.json()
            error_detail = str(error_data.get("detail", ""))
            if "warehouse_id" in error_detail.lower():
                print(f"‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –ü–†–û–ë–õ–ï–ú–ê: warehouse_id –≤—Å–µ –µ—â–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è!")
                print(f"   üìù –û—à–∏–±–∫–∞: {error_detail}")
                return False
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ (–Ω–µ —Å–≤—è–∑–∞–Ω–Ω–∞—è —Å warehouse_id): {error_detail}")
                return False
        except:
            print(f"‚ùå HTTP 422 –±–µ–∑ –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏")
            return False
    else:
        print(f"‚ùå HTTP –æ—à–∏–±–∫–∞: {placement_response.status_code}")
        try:
            error_text = placement_response.text
            print(f"   üìù –û—Ç–≤–µ—Ç: {error_text}")
        except:
            pass
        return False

if __name__ == "__main__":
    print("üéØ FOCUSED TEST: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è POST /api/operator/cargo/place-individual")
    print("=" * 80)
    
    success = test_critical_improvements()
    
    print("\n" + "=" * 80)
    if success:
        print("üéâ –í–°–ï –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢!")
        print("‚úÖ warehouse_id –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("‚úÖ –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –æ—Ç–≤–µ—Ç–∞—Ö")
        print("‚úÖ Endpoint placement-progress —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–µ–Ω")
        print("üöÄ –°–ò–°–¢–ï–ú–ê –ì–û–¢–û–í–ê –ö –ü–†–û–î–ê–ö–®–ï–ù–£!")
    else:
        print("‚ùå –û–ë–ù–ê–†–£–ñ–ï–ù–´ –ü–†–û–ë–õ–ï–ú–´ –í –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø–•!")
        print("üîß –¢—Ä–µ–±—É–µ—Ç—Å—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ä–∞–±–æ—Ç–∞")