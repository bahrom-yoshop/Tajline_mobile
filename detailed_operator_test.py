#!/usr/bin/env python3
"""
–î–ï–¢–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï: –ü—Ä–æ–±–ª–µ–º–∞ —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ - –¥–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞
"""

import requests
import json
import os
from datetime import datetime
import uuid

# –ü–æ–ª—É—á–∞–µ–º URL backend –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
BACKEND_URL = os.environ.get('REACT_APP_BACKEND_URL', 'https://freight-qr-system.preview.emergentagent.com')
API_BASE = f"{BACKEND_URL}/api"

def test_detailed_operator_creation():
    """–î–µ—Ç–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞"""
    session = requests.Session()
    
    # 1. –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("üîê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    login_data = {
        "phone": "+79999888777",
        "password": "admin123"
    }
    
    response = session.post(f"{API_BASE}/auth/login", json=login_data)
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code} - {response.text}")
        return
    
    data = response.json()
    admin_token = data.get("access_token")
    admin_info = data.get("user", {})
    
    print(f"‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞: {admin_info.get('full_name')} ({admin_info.get('role')})")
    
    # 2. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤
    print("\nüì¶ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–∫–ª–∞–¥–æ–≤...")
    headers = {"Authorization": f"Bearer {admin_token}"}
    response = session.get(f"{API_BASE}/warehouses", headers=headers)
    
    if response.status_code != 200:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–∫–ª–∞–¥–æ–≤: {response.status_code} - {response.text}")
        return
    
    warehouses = response.json()
    print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(warehouses)} —Å–∫–ª–∞–¥–æ–≤")
    
    for i, warehouse in enumerate(warehouses[:3]):
        print(f"   –°–∫–ª–∞–¥ {i+1}: {warehouse.get('name')} (ID: {warehouse.get('id')[:8]}...)")
    
    if not warehouses:
        print("‚ùå –ù–µ—Ç —Å–∫–ª–∞–¥–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        return
    
    # 3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ —Å –ø–µ—Ä–≤—ã–º —Å–∫–ª–∞–¥–æ–º
    print(f"\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ –¥–ª—è —Å–∫–ª–∞–¥–∞ '{warehouses[0].get('name')}'...")
    
    test_operator_data = {
        "full_name": f"–î–µ—Ç–∞–ª—å–Ω—ã–π –¢–µ—Å—Ç –û–ø–µ—Ä–∞—Ç–æ—Ä {datetime.now().strftime('%H%M%S')}",
        "phone": f"+7999{datetime.now().strftime('%H%M%S')}",
        "address": "–î–µ—Ç–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏",
        "password": "detailtest123",
        "warehouse_id": warehouses[0].get('id')
    }
    
    print(f"üìã –î–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞:")
    print(f"   - –§–ò–û: {test_operator_data['full_name']}")
    print(f"   - –¢–µ–ª–µ—Ñ–æ–Ω: {test_operator_data['phone']}")
    print(f"   - –ê–¥—Ä–µ—Å: {test_operator_data['address']}")
    print(f"   - –°–∫–ª–∞–¥ ID: {test_operator_data['warehouse_id'][:8]}...")
    
    response = session.post(f"{API_BASE}/admin/create-operator", json=test_operator_data, headers=headers)
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∑–∞–ø—Ä–æ—Å–∞:")
    print(f"   - HTTP —Å—Ç–∞—Ç—É—Å: {response.status_code}")
    print(f"   - –ó–∞–≥–æ–ª–æ–≤–∫–∏ –æ—Ç–≤–µ—Ç–∞: {dict(response.headers)}")
    
    if response.status_code == 200 or response.status_code == 201:
        data = response.json()
        print(f"‚úÖ –£–°–ü–ï–•: –û–ø–µ—Ä–∞—Ç–æ—Ä —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"   - –°–æ–æ–±—â–µ–Ω–∏–µ: {data.get('message')}")
        if 'operator' in data:
            operator = data['operator']
            print(f"   - ID –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞: {operator.get('id', 'N/A')[:8]}...")
            print(f"   - –°–∫–ª–∞–¥: {operator.get('warehouse_name', 'N/A')}")
    else:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞")
        print(f"   - –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"   - –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        try:
            error_data = response.json()
            print(f"   - JSON –æ—à–∏–±–∫–∞: {json.dumps(error_data, indent=2, ensure_ascii=False)}")
        except:
            print(f"   - –ù–µ JSON –æ—Ç–≤–µ—Ç")
    
    # 4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
    print(f"\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å –Ω–µ–≤–∞–ª–∏–¥–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏...")
    
    # –¢–µ—Å—Ç —Å –ø—É—Å—Ç—ã–º warehouse_id
    invalid_data = test_operator_data.copy()
    invalid_data['warehouse_id'] = ""
    invalid_data['phone'] = f"+7999{datetime.now().strftime('%H%M%S')}01"
    
    response = session.post(f"{API_BASE}/admin/create-operator", json=invalid_data, headers=headers)
    print(f"   –ü—É—Å—Ç–æ–π warehouse_id: HTTP {response.status_code}")
    
    # –¢–µ—Å—Ç —Å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º warehouse_id
    invalid_data['warehouse_id'] = str(uuid.uuid4())
    invalid_data['phone'] = f"+7999{datetime.now().strftime('%H%M%S')}02"
    
    response = session.post(f"{API_BASE}/admin/create-operator", json=invalid_data, headers=headers)
    print(f"   –ù–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π warehouse_id: HTTP {response.status_code}")
    if response.status_code == 404:
        print(f"      ‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Ç–∫–ª–æ–Ω–µ–Ω: {response.json().get('detail', 'Warehouse not found')}")
    
    # –¢–µ—Å—Ç –±–µ–∑ warehouse_id
    invalid_data_no_warehouse = {
        "full_name": f"–¢–µ—Å—Ç –ë–µ–∑ –°–∫–ª–∞–¥–∞ {datetime.now().strftime('%H%M%S')}",
        "phone": f"+7999{datetime.now().strftime('%H%M%S')}03",
        "address": "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –±–µ–∑ —Å–∫–ª–∞–¥–∞",
        "password": "nowarehouse123"
    }
    
    response = session.post(f"{API_BASE}/admin/create-operator", json=invalid_data_no_warehouse, headers=headers)
    print(f"   –ë–µ–∑ warehouse_id: HTTP {response.status_code}")
    if response.status_code == 422:
        try:
            error_data = response.json()
            print(f"      ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞: {error_data.get('detail', 'Validation error')}")
        except:
            print(f"      ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—Ä–∞–±–æ—Ç–∞–ª–∞")

if __name__ == "__main__":
    print("üöÄ –î–ï–¢–ê–õ–¨–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–û–ó–î–ê–ù–ò–Ø –û–ü–ï–†–ê–¢–û–†–ê")
    print("=" * 60)
    test_detailed_operator_creation()
    print("\nüéØ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û")